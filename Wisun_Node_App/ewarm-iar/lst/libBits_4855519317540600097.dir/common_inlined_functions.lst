###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         29/Mar/2025  15:53:15
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\source\libBits\common_inlined_functions.c
#    Command line      =
#        -f "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\libBits_4855519317540600097.dir\common_inlined_functions.o.rsp"
#        ("D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\source\libBits\common_inlined_functions.c"
#        -D DEBUG_EFM=1 -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -lC "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\libBits_4855519317540600097.dir"
#        --diag_suppress Pa050 -o "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\libBits_4855519317540600097.dir"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse --cmse -e --fpu=VFPv5_sp --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\source\libBits\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\rail\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\wisun\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\.\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_project_info\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\Core\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\RTOS2\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\device_init\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emlib\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\iostream\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\preset\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\cpu\include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\ports\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\nvm3\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\peripheral\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_psa_driver\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\common\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ble\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ieee802154\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\wmbus\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\zwave\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\chip\efr32\efr32xg2x\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\sidewalk\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\rail_util_pti\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\segger\systemview\SEGGER\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\silicon_labs\silabs_core\memory_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\toolchain\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\system\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ns_list\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ping\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\udp_client\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\sleeptimer\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\plugin\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\socket\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\autogen\\" -On
#        --use_c++_inline) --dependencies=n "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\libBits_4855519317540600097.dir\common_inlined_functions.o.iar_deps"
#    Locale            =  C
#    List file         =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\libBits_4855519317540600097.dir\common_inlined_functions.lst
#    Object file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\libBits_4855519317540600097.dir\common_inlined_functions.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\source\libBits\common_inlined_functions.c
      1          /*
      2           * Copyright (c) 2014-2015 ARM Limited. All rights reserved.
      3           * SPDX-License-Identifier: Apache-2.0
      4           * Licensed under the Apache License, Version 2.0 (the License); you may
      5           * not use this file except in compliance with the License.
      6           * You may obtain a copy of the License at
      7           *
      8           * http://www.apache.org/licenses/LICENSE-2.0
      9           *
     10           * Unless required by applicable law or agreed to in writing, software
     11           * distributed under the License is distributed on an AS IS BASIS, WITHOUT
     12           * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     13           * See the License for the specific language governing permissions and
     14           * limitations under the License.
     15           */
     16          
     17          /*
     18           * Most functions can be inlined, and definitions are in common_functions.h.
     19           * Define COMMON_FUNCTIONS_FN before including it to generate external definitions.
     20           */
     21          #define COMMON_FUNCTIONS_FN extern
     22          
     23          #include "common_inlined_functions.h"

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint8_t *common_write_64_bit(uint64_t, uint8_t *)
   \                     common_write_64_bit: (+1)
   \        0x0   0xB430             PUSH     {R4,R5}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0x0029             MOVS     R1,R5
   \        0xA   0x0E08             LSRS     R0,R1,#+24
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0x7010             STRB     R0,[R2, #+0]
   \       0x10   0x1C52             ADDS     R2,R2,#+1
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x0029             MOVS     R1,R5
   \       0x16   0x0C08             LSRS     R0,R1,#+16
   \       0x18   0x2100             MOVS     R1,#+0
   \       0x1A   0x7010             STRB     R0,[R2, #+0]
   \       0x1C   0x1C52             ADDS     R2,R2,#+1
   \       0x1E   0x0020             MOVS     R0,R4
   \       0x20   0x0029             MOVS     R1,R5
   \       0x22   0x0A08             LSRS     R0,R1,#+8
   \       0x24   0x2100             MOVS     R1,#+0
   \       0x26   0x7010             STRB     R0,[R2, #+0]
   \       0x28   0x1C50             ADDS     R0,R2,#+1
   \       0x2A   0x7005             STRB     R5,[R0, #+0]
   \       0x2C   0x1C41             ADDS     R1,R0,#+1
   \       0x2E   0x0020             MOVS     R0,R4
   \       0x30   0x0E00             LSRS     R0,R0,#+24
   \       0x32   0x7008             STRB     R0,[R1, #+0]
   \       0x34   0x1C49             ADDS     R1,R1,#+1
   \       0x36   0x0020             MOVS     R0,R4
   \       0x38   0x0C00             LSRS     R0,R0,#+16
   \       0x3A   0x7008             STRB     R0,[R1, #+0]
   \       0x3C   0x1C49             ADDS     R1,R1,#+1
   \       0x3E   0x0020             MOVS     R0,R4
   \       0x40   0xB280             UXTH     R0,R0
   \       0x42   0x0A00             LSRS     R0,R0,#+8
   \       0x44   0x7008             STRB     R0,[R1, #+0]
   \       0x46   0x1C48             ADDS     R0,R1,#+1
   \       0x48   0x7004             STRB     R4,[R0, #+0]
   \       0x4A   0x1C40             ADDS     R0,R0,#+1
   \       0x4C   0xBC30             POP      {R4,R5}
   \       0x4E   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint64_t common_read_64_bit(uint8_t const *)
   \                     common_read_64_bit: (+1)
   \        0x0   0xB418             PUSH     {R3,R4}
   \        0x2   0x7802             LDRB     R2,[R0, #+0]
   \        0x4   0x2300             MOVS     R3,#+0
   \        0x6   0x0613             LSLS     R3,R2,#+24
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0x1C44             ADDS     R4,R0,#+1
   \        0xC   0x7820             LDRB     R0,[R4, #+0]
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x0401             LSLS     R1,R0,#+16
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x1812             ADDS     R2,R2,R0
   \       0x16   0x414B             ADCS     R3,R3,R1
   \       0x18   0x1C64             ADDS     R4,R4,#+1
   \       0x1A   0x7820             LDRB     R0,[R4, #+0]
   \       0x1C   0x2100             MOVS     R1,#+0
   \       0x1E   0x0201             LSLS     R1,R0,#+8
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0x1812             ADDS     R2,R2,R0
   \       0x24   0x414B             ADCS     R3,R3,R1
   \       0x26   0x1C64             ADDS     R4,R4,#+1
   \       0x28   0x7820             LDRB     R0,[R4, #+0]
   \       0x2A   0x2100             MOVS     R1,#+0
   \       0x2C   0x0001             MOVS     R1,R0
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0x1812             ADDS     R2,R2,R0
   \       0x32   0x414B             ADCS     R3,R3,R1
   \       0x34   0x1C64             ADDS     R4,R4,#+1
   \       0x36   0x7820             LDRB     R0,[R4, #+0]
   \       0x38   0x2100             MOVS     R1,#+0
   \       0x3A   0x0609             LSLS     R1,R1,#+24
   \       0x3C   0xEA41 0x2110      ORR      R1,R1,R0, LSR #+8
   \       0x40   0x0600             LSLS     R0,R0,#+24
   \       0x42   0x1812             ADDS     R2,R2,R0
   \       0x44   0x414B             ADCS     R3,R3,R1
   \       0x46   0x1C64             ADDS     R4,R4,#+1
   \       0x48   0x7820             LDRB     R0,[R4, #+0]
   \       0x4A   0x2100             MOVS     R1,#+0
   \       0x4C   0x0409             LSLS     R1,R1,#+16
   \       0x4E   0xEA41 0x4110      ORR      R1,R1,R0, LSR #+16
   \       0x52   0x0400             LSLS     R0,R0,#+16
   \       0x54   0x1812             ADDS     R2,R2,R0
   \       0x56   0x414B             ADCS     R3,R3,R1
   \       0x58   0x1C64             ADDS     R4,R4,#+1
   \       0x5A   0x7820             LDRB     R0,[R4, #+0]
   \       0x5C   0x2100             MOVS     R1,#+0
   \       0x5E   0x0209             LSLS     R1,R1,#+8
   \       0x60   0xEA41 0x6110      ORR      R1,R1,R0, LSR #+24
   \       0x64   0x0200             LSLS     R0,R0,#+8
   \       0x66   0x1812             ADDS     R2,R2,R0
   \       0x68   0x414B             ADCS     R3,R3,R1
   \       0x6A   0x1C64             ADDS     R4,R4,#+1
   \       0x6C   0x7820             LDRB     R0,[R4, #+0]
   \       0x6E   0x2100             MOVS     R1,#+0
   \       0x70   0x1810             ADDS     R0,R2,R0
   \       0x72   0x4159             ADCS     R1,R3,R1
   \       0x74   0x1C62             ADDS     R2,R4,#+1
   \       0x76   0xBC14             POP      {R2,R4}
   \       0x78   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint8_t *common_write_32_bit(uint32_t, uint8_t *)
   \                     common_write_32_bit: (+1)
   \        0x0   0x0002             MOVS     R2,R0
   \        0x2   0x0010             MOVS     R0,R2
   \        0x4   0x0E00             LSRS     R0,R0,#+24
   \        0x6   0x7008             STRB     R0,[R1, #+0]
   \        0x8   0x1C49             ADDS     R1,R1,#+1
   \        0xA   0x0010             MOVS     R0,R2
   \        0xC   0x0C00             LSRS     R0,R0,#+16
   \        0xE   0x7008             STRB     R0,[R1, #+0]
   \       0x10   0x1C49             ADDS     R1,R1,#+1
   \       0x12   0x0010             MOVS     R0,R2
   \       0x14   0x0A00             LSRS     R0,R0,#+8
   \       0x16   0x7008             STRB     R0,[R1, #+0]
   \       0x18   0x1C48             ADDS     R0,R1,#+1
   \       0x1A   0x7002             STRB     R2,[R0, #+0]
   \       0x1C   0x1C40             ADDS     R0,R0,#+1
   \       0x1E   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint32_t common_read_32_bit(uint8_t const *)
   \                     common_read_32_bit: (+1)
   \        0x0   0x7802             LDRB     R2,[R0, #+0]
   \        0x2   0x0612             LSLS     R2,R2,#+24
   \        0x4   0x1C41             ADDS     R1,R0,#+1
   \        0x6   0x7808             LDRB     R0,[R1, #+0]
   \        0x8   0xEB12 0x4200      ADDS     R2,R2,R0, LSL #+16
   \        0xC   0x1C49             ADDS     R1,R1,#+1
   \        0xE   0x7808             LDRB     R0,[R1, #+0]
   \       0x10   0xEB12 0x2200      ADDS     R2,R2,R0, LSL #+8
   \       0x14   0x1C49             ADDS     R1,R1,#+1
   \       0x16   0x7808             LDRB     R0,[R1, #+0]
   \       0x18   0xFA52 0xF080      UXTAB    R0,R2,R0
   \       0x1C   0x1C49             ADDS     R1,R1,#+1
   \       0x1E   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint8_t *common_write_32_bit_inverse(uint32_t, uint8_t *)
   \                     common_write_32_bit_inverse: (+1)
   \        0x0   0x0002             MOVS     R2,R0
   \        0x2   0x700A             STRB     R2,[R1, #+0]
   \        0x4   0x1C49             ADDS     R1,R1,#+1
   \        0x6   0x0010             MOVS     R0,R2
   \        0x8   0x0A00             LSRS     R0,R0,#+8
   \        0xA   0x7008             STRB     R0,[R1, #+0]
   \        0xC   0x1C49             ADDS     R1,R1,#+1
   \        0xE   0x0010             MOVS     R0,R2
   \       0x10   0x0C00             LSRS     R0,R0,#+16
   \       0x12   0x7008             STRB     R0,[R1, #+0]
   \       0x14   0x1C49             ADDS     R1,R1,#+1
   \       0x16   0x0010             MOVS     R0,R2
   \       0x18   0x0E00             LSRS     R0,R0,#+24
   \       0x1A   0x7008             STRB     R0,[R1, #+0]
   \       0x1C   0x1C48             ADDS     R0,R1,#+1
   \       0x1E   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint32_t common_read_32_bit_inverse(uint8_t const *)
   \                     common_read_32_bit_inverse: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   \        0x2   0x7808             LDRB     R0,[R1, #+0]
   \        0x4   0x1C4A             ADDS     R2,R1,#+1
   \        0x6   0x7811             LDRB     R1,[R2, #+0]
   \        0x8   0xEB10 0x2001      ADDS     R0,R0,R1, LSL #+8
   \        0xC   0x1C52             ADDS     R2,R2,#+1
   \        0xE   0x7811             LDRB     R1,[R2, #+0]
   \       0x10   0xEB10 0x4001      ADDS     R0,R0,R1, LSL #+16
   \       0x14   0x1C52             ADDS     R2,R2,#+1
   \       0x16   0x7811             LDRB     R1,[R2, #+0]
   \       0x18   0xEB10 0x6001      ADDS     R0,R0,R1, LSL #+24
   \       0x1C   0x1C51             ADDS     R1,R2,#+1
   \       0x1E   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint8_t *common_write_24_bit(unsigned int, uint8_t *)
   \                     common_write_24_bit: (+1)
   \        0x0   0x0002             MOVS     R2,R0
   \        0x2   0x0010             MOVS     R0,R2
   \        0x4   0x0C00             LSRS     R0,R0,#+16
   \        0x6   0x7008             STRB     R0,[R1, #+0]
   \        0x8   0x1C49             ADDS     R1,R1,#+1
   \        0xA   0x0010             MOVS     R0,R2
   \        0xC   0x0A00             LSRS     R0,R0,#+8
   \        0xE   0x7008             STRB     R0,[R1, #+0]
   \       0x10   0x1C48             ADDS     R0,R1,#+1
   \       0x12   0x7002             STRB     R2,[R0, #+0]
   \       0x14   0x1C40             ADDS     R0,R0,#+1
   \       0x16   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp unsigned int common_read_24_bit(uint8_t const *)
   \                     common_read_24_bit: (+1)
   \        0x0   0x7802             LDRB     R2,[R0, #+0]
   \        0x2   0x0412             LSLS     R2,R2,#+16
   \        0x4   0x1C41             ADDS     R1,R0,#+1
   \        0x6   0x7808             LDRB     R0,[R1, #+0]
   \        0x8   0xEB12 0x2200      ADDS     R2,R2,R0, LSL #+8
   \        0xC   0x1C49             ADDS     R1,R1,#+1
   \        0xE   0x7808             LDRB     R0,[R1, #+0]
   \       0x10   0xFA52 0xF080      UXTAB    R0,R2,R0
   \       0x14   0x1C49             ADDS     R1,R1,#+1
   \       0x16   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint8_t *common_write_24_bit_inverse(unsigned int, uint8_t *)
   \                     common_write_24_bit_inverse: (+1)
   \        0x0   0x0002             MOVS     R2,R0
   \        0x2   0x700A             STRB     R2,[R1, #+0]
   \        0x4   0x1C49             ADDS     R1,R1,#+1
   \        0x6   0x0010             MOVS     R0,R2
   \        0x8   0x0A00             LSRS     R0,R0,#+8
   \        0xA   0x7008             STRB     R0,[R1, #+0]
   \        0xC   0x1C49             ADDS     R1,R1,#+1
   \        0xE   0x0010             MOVS     R0,R2
   \       0x10   0x0C00             LSRS     R0,R0,#+16
   \       0x12   0x7008             STRB     R0,[R1, #+0]
   \       0x14   0x1C48             ADDS     R0,R1,#+1
   \       0x16   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp unsigned int common_read_24_bit_inverse(uint8_t const *)
   \                     common_read_24_bit_inverse: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   \        0x2   0x7808             LDRB     R0,[R1, #+0]
   \        0x4   0x1C4A             ADDS     R2,R1,#+1
   \        0x6   0x7811             LDRB     R1,[R2, #+0]
   \        0x8   0xEB10 0x2001      ADDS     R0,R0,R1, LSL #+8
   \        0xC   0x1C52             ADDS     R2,R2,#+1
   \        0xE   0x7811             LDRB     R1,[R2, #+0]
   \       0x10   0xEB10 0x4001      ADDS     R0,R0,R1, LSL #+16
   \       0x14   0x1C51             ADDS     R1,R2,#+1
   \       0x16   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint8_t *common_write_16_bit(uint16_t, uint8_t *)
   \                     common_write_16_bit: (+1)
   \        0x0   0x0002             MOVS     R2,R0
   \        0x2   0x0010             MOVS     R0,R2
   \        0x4   0xB280             UXTH     R0,R0
   \        0x6   0x0A00             LSRS     R0,R0,#+8
   \        0x8   0x7008             STRB     R0,[R1, #+0]
   \        0xA   0x1C48             ADDS     R0,R1,#+1
   \        0xC   0x7002             STRB     R2,[R0, #+0]
   \        0xE   0x1C40             ADDS     R0,R0,#+1
   \       0x10   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint16_t common_read_16_bit(uint8_t const *)
   \                     common_read_16_bit: (+1)
   \        0x0   0x7802             LDRB     R2,[R0, #+0]
   \        0x2   0x0212             LSLS     R2,R2,#+8
   \        0x4   0x1C41             ADDS     R1,R0,#+1
   \        0x6   0x7808             LDRB     R0,[R1, #+0]
   \        0x8   0xFA52 0xF080      UXTAB    R0,R2,R0
   \        0xC   0x1C49             ADDS     R1,R1,#+1
   \        0xE   0xB280             UXTH     R0,R0
   \       0x10   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint8_t *common_write_16_bit_inverse(uint16_t, uint8_t *)
   \                     common_write_16_bit_inverse: (+1)
   \        0x0   0x0002             MOVS     R2,R0
   \        0x2   0x700A             STRB     R2,[R1, #+0]
   \        0x4   0x1C49             ADDS     R1,R1,#+1
   \        0x6   0x0010             MOVS     R0,R2
   \        0x8   0xB280             UXTH     R0,R0
   \        0xA   0x0A00             LSRS     R0,R0,#+8
   \        0xC   0x7008             STRB     R0,[R1, #+0]
   \        0xE   0x1C48             ADDS     R0,R1,#+1
   \       0x10   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint16_t common_read_16_bit_inverse(uint8_t const *)
   \                     common_read_16_bit_inverse: (+1)
   \        0x0   0x7802             LDRB     R2,[R0, #+0]
   \        0x2   0x1C41             ADDS     R1,R0,#+1
   \        0x4   0x7808             LDRB     R0,[R1, #+0]
   \        0x6   0x0200             LSLS     R0,R0,#+8
   \        0x8   0xFA10 0xF082      UXTAH    R0,R0,R2
   \        0xC   0x1C49             ADDS     R1,R1,#+1
   \        0xE   0xB280             UXTH     R0,R0
   \       0x10   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint_fast8_t common_count_bits(uint8_t)
   \                     common_count_bits: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   \        0x2   0x000A             MOVS     R2,R1
   \        0x4   0xB2D2             UXTB     R2,R2
   \        0x6   0x0008             MOVS     R0,R1
   \        0x8   0xB2C0             UXTB     R0,R0
   \        0xA   0x1040             ASRS     R0,R0,#+1
   \        0xC   0xF010 0x0055      ANDS     R0,R0,#0x55
   \       0x10   0x1A12             SUBS     R2,R2,R0
   \       0x12   0xF012 0x0033      ANDS     R0,R2,#0x33
   \       0x16   0x0892             LSRS     R2,R2,#+2
   \       0x18   0xF012 0x0233      ANDS     R2,R2,#0x33
   \       0x1C   0x1812             ADDS     R2,R2,R0
   \       0x1E   0xF012 0x000F      ANDS     R0,R2,#0xF
   \       0x22   0xEB10 0x1012      ADDS     R0,R0,R2, LSR #+4
   \       0x26   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint_fast8_t common_count_leading_zeros(uint8_t)
   \                     common_count_leading_zeros: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0xB2C0             UXTB     R0,R0
   \        0x8   0x.... 0x....      BL       common_count_leading_zeros_8
   \        0xC   0xBD10             POP      {R4,PC}

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint_fast8_t common_count_leading_zeros_8(uint8_t)
   \                     common_count_leading_zeros_8: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   \        0x2   0x2200             MOVS     R2,#+0
   \        0x4   0x0008             MOVS     R0,R1
   \        0x6   0xB2C0             UXTB     R0,R0
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD101             BNE.N    ??common_count_leading_zeros_8_0
   \        0xC   0x2008             MOVS     R0,#+8
   \        0xE   0xE00D             B.N      ??common_count_leading_zeros_8_1
   \                     ??common_count_leading_zeros_8_0: (+1)
   \       0x10   0xF011 0x0FF0      TST      R1,#0xF0
   \       0x14   0xD101             BNE.N    ??common_count_leading_zeros_8_2
   \       0x16   0x0109             LSLS     R1,R1,#+4
   \       0x18   0x1D12             ADDS     R2,R2,#+4
   \                     ??common_count_leading_zeros_8_2: (+1)
   \       0x1A   0xF011 0x0FC0      TST      R1,#0xC0
   \       0x1E   0xD101             BNE.N    ??common_count_leading_zeros_8_3
   \       0x20   0x0089             LSLS     R1,R1,#+2
   \       0x22   0x1C92             ADDS     R2,R2,#+2
   \                     ??common_count_leading_zeros_8_3: (+1)
   \       0x24   0x0608             LSLS     R0,R1,#+24
   \       0x26   0xD400             BMI.N    ??common_count_leading_zeros_8_4
   \       0x28   0x1C52             ADDS     R2,R2,#+1
   \                     ??common_count_leading_zeros_8_4: (+1)
   \       0x2A   0x0010             MOVS     R0,R2
   \                     ??common_count_leading_zeros_8_1: (+1)
   \       0x2C   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint_fast8_t common_count_leading_zeros_16(uint16_t)
   \                     common_count_leading_zeros_16: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   \        0x2   0x2200             MOVS     R2,#+0
   \        0x4   0x0008             MOVS     R0,R1
   \        0x6   0xB280             UXTH     R0,R0
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD101             BNE.N    ??common_count_leading_zeros_16_0
   \        0xC   0x2010             MOVS     R0,#+16
   \        0xE   0xE012             B.N      ??common_count_leading_zeros_16_1
   \                     ??common_count_leading_zeros_16_0: (+1)
   \       0x10   0xF411 0x4F7F      TST      R1,#0xFF00
   \       0x14   0xD101             BNE.N    ??common_count_leading_zeros_16_2
   \       0x16   0x0209             LSLS     R1,R1,#+8
   \       0x18   0x3208             ADDS     R2,R2,#+8
   \                     ??common_count_leading_zeros_16_2: (+1)
   \       0x1A   0xF411 0x4F70      TST      R1,#0xF000
   \       0x1E   0xD101             BNE.N    ??common_count_leading_zeros_16_3
   \       0x20   0x0109             LSLS     R1,R1,#+4
   \       0x22   0x1D12             ADDS     R2,R2,#+4
   \                     ??common_count_leading_zeros_16_3: (+1)
   \       0x24   0xF411 0x4F40      TST      R1,#0xC000
   \       0x28   0xD101             BNE.N    ??common_count_leading_zeros_16_4
   \       0x2A   0x0089             LSLS     R1,R1,#+2
   \       0x2C   0x1C92             ADDS     R2,R2,#+2
   \                     ??common_count_leading_zeros_16_4: (+1)
   \       0x2E   0x0408             LSLS     R0,R1,#+16
   \       0x30   0xD400             BMI.N    ??common_count_leading_zeros_16_5
   \       0x32   0x1C52             ADDS     R2,R2,#+1
   \                     ??common_count_leading_zeros_16_5: (+1)
   \       0x34   0x0010             MOVS     R0,R2
   \                     ??common_count_leading_zeros_16_1: (+1)
   \       0x36   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp uint_fast8_t common_count_leading_zeros_32(uint32_t)
   \                     common_count_leading_zeros_32: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   \        0x2   0x2200             MOVS     R2,#+0
   \        0x4   0x2900             CMP      R1,#+0
   \        0x6   0xD101             BNE.N    ??common_count_leading_zeros_32_0
   \        0x8   0x2020             MOVS     R0,#+32
   \        0xA   0xE018             B.N      ??common_count_leading_zeros_32_1
   \                     ??common_count_leading_zeros_32_0: (+1)
   \        0xC   0x0C08             LSRS     R0,R1,#+16
   \        0xE   0x0400             LSLS     R0,R0,#+16
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD101             BNE.N    ??common_count_leading_zeros_32_2
   \       0x14   0x0409             LSLS     R1,R1,#+16
   \       0x16   0x3210             ADDS     R2,R2,#+16
   \                     ??common_count_leading_zeros_32_2: (+1)
   \       0x18   0xF011 0x4F7F      TST      R1,#0xFF000000
   \       0x1C   0xD101             BNE.N    ??common_count_leading_zeros_32_3
   \       0x1E   0x0209             LSLS     R1,R1,#+8
   \       0x20   0x3208             ADDS     R2,R2,#+8
   \                     ??common_count_leading_zeros_32_3: (+1)
   \       0x22   0xF011 0x4F70      TST      R1,#0xF0000000
   \       0x26   0xD101             BNE.N    ??common_count_leading_zeros_32_4
   \       0x28   0x0109             LSLS     R1,R1,#+4
   \       0x2A   0x1D12             ADDS     R2,R2,#+4
   \                     ??common_count_leading_zeros_32_4: (+1)
   \       0x2C   0xF011 0x4F40      TST      R1,#0xC0000000
   \       0x30   0xD101             BNE.N    ??common_count_leading_zeros_32_5
   \       0x32   0x0089             LSLS     R1,R1,#+2
   \       0x34   0x1C92             ADDS     R2,R2,#+2
   \                     ??common_count_leading_zeros_32_5: (+1)
   \       0x36   0x2900             CMP      R1,#+0
   \       0x38   0xD400             BMI.N    ??common_count_leading_zeros_32_6
   \       0x3A   0x1C52             ADDS     R2,R2,#+1
   \                     ??common_count_leading_zeros_32_6: (+1)
   \       0x3C   0x0010             MOVS     R0,R2
   \                     ??common_count_leading_zeros_32_1: (+1)
   \       0x3E   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp bool common_serial_number_greater_8(uint8_t, uint8_t)
   \                     common_serial_number_greater_8: (+1)
   \        0x0   0x000B             MOVS     R3,R1
   \        0x2   0x0002             MOVS     R2,R0
   \        0x4   0xB2DB             UXTB     R3,R3
   \        0x6   0xB2D2             UXTB     R2,R2
   \        0x8   0x4293             CMP      R3,R2
   \        0xA   0xD206             BCS.N    ??common_serial_number_greater_8_0
   \        0xC   0x0003             MOVS     R3,R0
   \        0xE   0xB2DB             UXTB     R3,R3
   \       0x10   0x000A             MOVS     R2,R1
   \       0x12   0xB2D2             UXTB     R2,R2
   \       0x14   0x1A9B             SUBS     R3,R3,R2
   \       0x16   0x2B80             CMP      R3,#+128
   \       0x18   0xDB0A             BLT.N    ??common_serial_number_greater_8_1
   \                     ??common_serial_number_greater_8_0: (+1)
   \       0x1A   0x0003             MOVS     R3,R0
   \       0x1C   0x000A             MOVS     R2,R1
   \       0x1E   0xB2DB             UXTB     R3,R3
   \       0x20   0xB2D2             UXTB     R2,R2
   \       0x22   0x4293             CMP      R3,R2
   \       0x24   0xD206             BCS.N    ??common_serial_number_greater_8_2
   \       0x26   0xB2C9             UXTB     R1,R1
   \       0x28   0xB2C0             UXTB     R0,R0
   \       0x2A   0x1A08             SUBS     R0,R1,R0
   \       0x2C   0x2881             CMP      R0,#+129
   \       0x2E   0xDB01             BLT.N    ??common_serial_number_greater_8_2
   \                     ??common_serial_number_greater_8_1: (+1)
   \       0x30   0x2001             MOVS     R0,#+1
   \       0x32   0xE000             B.N      ??common_serial_number_greater_8_3
   \                     ??common_serial_number_greater_8_2: (+1)
   \       0x34   0x2000             MOVS     R0,#+0
   \                     ??common_serial_number_greater_8_3: (+1)
   \       0x36   0xB2C0             UXTB     R0,R0
   \       0x38   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp bool common_serial_number_greater_16(uint16_t, uint16_t)
   \                     common_serial_number_greater_16: (+1)
   \        0x0   0x000B             MOVS     R3,R1
   \        0x2   0x0002             MOVS     R2,R0
   \        0x4   0xB29B             UXTH     R3,R3
   \        0x6   0xB292             UXTH     R2,R2
   \        0x8   0x4293             CMP      R3,R2
   \        0xA   0xD207             BCS.N    ??common_serial_number_greater_16_0
   \        0xC   0x0003             MOVS     R3,R0
   \        0xE   0xB29B             UXTH     R3,R3
   \       0x10   0x000A             MOVS     R2,R1
   \       0x12   0xB292             UXTH     R2,R2
   \       0x14   0x1A9B             SUBS     R3,R3,R2
   \       0x16   0xF5B3 0x4F00      CMP      R3,#+32768
   \       0x1A   0xDB0C             BLT.N    ??common_serial_number_greater_16_1
   \                     ??common_serial_number_greater_16_0: (+1)
   \       0x1C   0x0003             MOVS     R3,R0
   \       0x1E   0x000A             MOVS     R2,R1
   \       0x20   0xB29B             UXTH     R3,R3
   \       0x22   0xB292             UXTH     R2,R2
   \       0x24   0x4293             CMP      R3,R2
   \       0x26   0xD208             BCS.N    ??common_serial_number_greater_16_2
   \       0x28   0xB289             UXTH     R1,R1
   \       0x2A   0xB280             UXTH     R0,R0
   \       0x2C   0x1A08             SUBS     R0,R1,R0
   \       0x2E   0xF248 0x0101      MOVW     R1,#+32769
   \       0x32   0x4288             CMP      R0,R1
   \       0x34   0xDB01             BLT.N    ??common_serial_number_greater_16_2
   \                     ??common_serial_number_greater_16_1: (+1)
   \       0x36   0x2001             MOVS     R0,#+1
   \       0x38   0xE000             B.N      ??common_serial_number_greater_16_3
   \                     ??common_serial_number_greater_16_2: (+1)
   \       0x3A   0x2000             MOVS     R0,#+0
   \                     ??common_serial_number_greater_16_3: (+1)
   \       0x3C   0xB2C0             UXTB     R0,R0
   \       0x3E   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp bool common_serial_number_greater_32(uint32_t, uint32_t)
   \                     common_serial_number_greater_32: (+1)
   \        0x0   0x4281             CMP      R1,R0
   \        0x2   0xD203             BCS.N    ??common_serial_number_greater_32_0
   \        0x4   0x1A42             SUBS     R2,R0,R1
   \        0x6   0xF1B2 0x4F00      CMP      R2,#+2147483648
   \        0xA   0xD305             BCC.N    ??common_serial_number_greater_32_1
   \                     ??common_serial_number_greater_32_0: (+1)
   \        0xC   0x4288             CMP      R0,R1
   \        0xE   0xD205             BCS.N    ??common_serial_number_greater_32_2
   \       0x10   0x1A08             SUBS     R0,R1,R0
   \       0x12   0x....             LDR.N    R1,??DataTable1
   \       0x14   0x4288             CMP      R0,R1
   \       0x16   0xD301             BCC.N    ??common_serial_number_greater_32_2
   \                     ??common_serial_number_greater_32_1: (+1)
   \       0x18   0x2001             MOVS     R0,#+1
   \       0x1A   0xE000             B.N      ??common_serial_number_greater_32_3
   \                     ??common_serial_number_greater_32_2: (+1)
   \       0x1C   0x2000             MOVS     R0,#+0
   \                     ??common_serial_number_greater_32_3: (+1)
   \       0x1E   0xB2C0             UXTB     R0,R0
   \       0x20   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp bool bit_test(uint8_t const *, uint_fast8_t)
   \                     bit_test: (+1)
   \        0x0   0x000A             MOVS     R2,R1
   \        0x2   0x08D2             LSRS     R2,R2,#+3
   \        0x4   0x5C80             LDRB     R0,[R0, R2]
   \        0x6   0x2280             MOVS     R2,#+128
   \        0x8   0xF011 0x0107      ANDS     R1,R1,#0x7
   \        0xC   0xB2D2             UXTB     R2,R2
   \        0xE   0x40CA             LSRS     R2,R2,R1
   \       0x10   0x4210             TST      R0,R2
   \       0x12   0xD001             BEQ.N    ??bit_test_0
   \       0x14   0x2001             MOVS     R0,#+1
   \       0x16   0xE000             B.N      ??bit_test_1
   \                     ??bit_test_0: (+1)
   \       0x18   0x2000             MOVS     R0,#+0
   \                     ??bit_test_1: (+1)
   \       0x1A   0xB2C0             UXTB     R0,R0
   \       0x1C   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp void bit_set(uint8_t *, uint_fast8_t)
   \                     bit_set: (+1)
   \        0x0   0xB410             PUSH     {R4}
   \        0x2   0x000A             MOVS     R2,R1
   \        0x4   0x08D2             LSRS     R2,R2,#+3
   \        0x6   0x5C82             LDRB     R2,[R0, R2]
   \        0x8   0x2480             MOVS     R4,#+128
   \        0xA   0xF011 0x0307      ANDS     R3,R1,#0x7
   \        0xE   0xB2E4             UXTB     R4,R4
   \       0x10   0x40DC             LSRS     R4,R4,R3
   \       0x12   0x4322             ORRS     R2,R4,R2
   \       0x14   0x000B             MOVS     R3,R1
   \       0x16   0x08DB             LSRS     R3,R3,#+3
   \       0x18   0x54C2             STRB     R2,[R0, R3]
   \       0x1A   0xBC10             POP      {R4}
   \       0x1C   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   __vfp void bit_clear(uint8_t *, uint_fast8_t)
   \                     bit_clear: (+1)
   \        0x0   0xB410             PUSH     {R4}
   \        0x2   0x000A             MOVS     R2,R1
   \        0x4   0x08D2             LSRS     R2,R2,#+3
   \        0x6   0x5C82             LDRB     R2,[R0, R2]
   \        0x8   0x2480             MOVS     R4,#+128
   \        0xA   0xF011 0x0307      ANDS     R3,R1,#0x7
   \        0xE   0xB2E4             UXTB     R4,R4
   \       0x10   0x40DC             LSRS     R4,R4,R3
   \       0x12   0x43A2             BICS     R2,R2,R4
   \       0x14   0x000B             MOVS     R3,R1
   \       0x16   0x08DB             LSRS     R3,R3,#+3
   \       0x18   0x54C2             STRB     R2,[R0, R3]
   \       0x1A   0xBC10             POP      {R4}
   \       0x1C   0x4770             BX       LR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \        0x0   0x8000'0001        DC32     0x80000001
     24          
     25          /* WI_SUN-467
     26           * common_functions.c was split to help mitigate an issue with IAR linker and inlining.
     27           * Normally the linker should behave as explained by the note below, but it does not.
     28           * https://www.iar.com/knowledge/support/technical-notes/compiler/linker-error-undefined-external-for-inline-functions/
     29           */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   bit_clear
       4   bit_set
       0   bit_test
       0   common_count_bits
       8   common_count_leading_zeros
         8   -> common_count_leading_zeros_8
       0   common_count_leading_zeros_16
       0   common_count_leading_zeros_32
       0   common_count_leading_zeros_8
       0   common_read_16_bit
       0   common_read_16_bit_inverse
       0   common_read_24_bit
       0   common_read_24_bit_inverse
       0   common_read_32_bit
       0   common_read_32_bit_inverse
       8   common_read_64_bit
       0   common_serial_number_greater_16
       0   common_serial_number_greater_32
       0   common_serial_number_greater_8
       0   common_write_16_bit
       0   common_write_16_bit_inverse
       0   common_write_24_bit
       0   common_write_24_bit_inverse
       0   common_write_32_bit
       0   common_write_32_bit_inverse
       8   common_write_64_bit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
      30  bit_clear
      30  bit_set
      30  bit_test
      40  common_count_bits
      14  common_count_leading_zeros
      56  common_count_leading_zeros_16
      64  common_count_leading_zeros_32
      46  common_count_leading_zeros_8
      18  common_read_16_bit
      18  common_read_16_bit_inverse
      24  common_read_24_bit
      24  common_read_24_bit_inverse
      32  common_read_32_bit
      32  common_read_32_bit_inverse
     122  common_read_64_bit
      64  common_serial_number_greater_16
      34  common_serial_number_greater_32
      58  common_serial_number_greater_8
      18  common_write_16_bit
      18  common_write_16_bit_inverse
      24  common_write_24_bit
      24  common_write_24_bit_inverse
      32  common_write_32_bit
      32  common_write_32_bit_inverse
      80  common_write_64_bit

 
 968 bytes in section .text
 
 968 bytes of CODE memory

Errors: none
Warnings: none
