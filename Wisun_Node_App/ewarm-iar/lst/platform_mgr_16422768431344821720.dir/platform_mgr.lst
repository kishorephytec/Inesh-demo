###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         29/Mar/2025  15:52:57
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\platform_mgr\platform_mgr.c
#    Command line      =
#        -f "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\platform_mgr_16422768431344821720.dir\platform_mgr.o.rsp"
#        ("D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\platform_mgr\platform_mgr.c"
#        -D DEBUG_EFM=1 -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -lC "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\platform_mgr_16422768431344821720.dir"
#        --diag_suppress Pa050 -o "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\platform_mgr_16422768431344821720.dir"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse --cmse -e --fpu=VFPv5_sp --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\platform_mgr\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\rail\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\wisun\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\.\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_project_info\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\Core\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\RTOS2\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\device_init\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emlib\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\iostream\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\preset\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\cpu\include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\ports\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\nvm3\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\peripheral\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_psa_driver\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\common\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ble\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ieee802154\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\wmbus\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\zwave\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\chip\efr32\efr32xg2x\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\sidewalk\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\rail_util_pti\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\segger\systemview\SEGGER\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\silicon_labs\silabs_core\memory_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\toolchain\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\system\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ns_list\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ping\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\udp_client\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\sleeptimer\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\plugin\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\socket\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\autogen\\" -On
#        --use_c++_inline) --dependencies=n "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\platform_mgr_16422768431344821720.dir\platform_mgr.o.iar_deps"
#    Locale            =  C
#    List file         =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\platform_mgr_16422768431344821720.dir\platform_mgr.lst
#    Object file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\platform_mgr_16422768431344821720.dir\platform_mgr.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\platform_mgr\platform_mgr.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Common - Platform Manager
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * The licensor of this software is Silicon Laboratories Inc.  Your use of this
     10           * software is governed by the terms of Silicon Labs Master Software License
     11           * Agreement (MSLA) available at
     12           * www.silabs.com/about-us/legal/master-software-license-agreement.  This
     13           * software is distributed to you in Source Code format and is governed by the
     14           * sections of the MSLA applicable to Source Code.
     15           *
     16           ******************************************************************************/
     17          
     18          /********************************************************************************************************
     19           ********************************************************************************************************
     20           *                                               INCLUDE FILES
     21           ********************************************************************************************************
     22           *******************************************************************************************************/
     23          
     24          #include  <cpu/include/cpu.h>
     25          
     26          #include  <common/include/rtos_err.h>
     27          #include  <common/include/lib_mem.h>
     28          #include  <common/include/lib_def.h>
     29          #include  <common/include/platform_mgr.h>
     30          
     31          #include  <common/source/collections/slist_priv.h>
     32          #include  <common/source/common/common_priv.h>
     33          #include  <common/source/platform_mgr/platform_mgr_priv.h>
     34          #include  <common/source/rtos/rtos_utils_priv.h>
     35          
     36          /********************************************************************************************************
     37           ********************************************************************************************************
     38           *                                               LOCAL DEFINES
     39           ********************************************************************************************************
     40           *******************************************************************************************************/
     41          
     42          #define  LOG_DFLT_CH                       (COMMON, PLATFORM_MGR)
     43          #define  RTOS_MODULE_CUR                    RTOS_CFG_MODULE_COMMON
     44          
     45          #define  PLATFORM_MGR_INIT_CFG_DFLT         {  \
     46              .PoolBlkQtyInit = 0u,                      \
     47              .PoolBlkQtyMax = LIB_MEM_BLK_QTY_UNLIMITED \
     48          }
     49          
     50          /********************************************************************************************************
     51           ********************************************************************************************************
     52           *                                           LOCAL DATA TYPES
     53           ********************************************************************************************************
     54           *******************************************************************************************************/
     55          
     56          typedef struct platform_mgr_data {
     57            SLIST_MEMBER    *PlatformMgrListHeadPtr;
     58            MEM_DYN_POOL    Pool;
     59            KAL_LOCK_HANDLE LockHandle;
     60          } PLATFORM_MGR_DATA;
     61          
     62          typedef struct platform_mgr_list_adapter {
     63            SLIST_MEMBER            ListNode;
     64            const PLATFORM_MGR_ITEM *ItemPtr;
     65          } PLATFORM_MGR_LIST_ADAPTER;
     66          
     67          /********************************************************************************************************
     68           ********************************************************************************************************
     69           *                                       LOCAL GLOBAL VARIABLES
     70           ********************************************************************************************************
     71           *******************************************************************************************************/
     72          

   \                                 In section .bss, align 4
     73          static PLATFORM_MGR_DATA *PlatformMgrPtr;
   \                     PlatformMgrPtr:
   \        0x0                      DS8 4
     74          
     75          #if (RTOS_CFG_EXTERNALIZE_OPTIONAL_CFG_EN == DEF_DISABLED)

   \                                 In section .rodata, align 4
     76          const PLATFORM_MGR_INIT_CFG  PlatformMgr_InitCfgDflt = PLATFORM_MGR_INIT_CFG_DFLT;
   \                     PlatformMgr_InitCfgDflt:
   \        0x0   0x0000'0000        DC32 0, 4'294'967'295
   \              0xFFFF'FFFF

   \                                 In section .data, align 4
     77          static PLATFORM_MGR_INIT_CFG PlatformMgr_InitCfg = PLATFORM_MGR_INIT_CFG_DFLT;
   \                     PlatformMgr_InitCfg:
   \        0x0   0x0000'0000        DC32 0, 4'294'967'295
   \              0xFFFF'FFFF
     78          #else
     79          extern const PLATFORM_MGR_INIT_CFG PlatformMgr_InitCfg;
     80          #endif
     81          
     82          /********************************************************************************************************
     83           ********************************************************************************************************
     84           *                                       LOCAL FUNCTION PROTOTYPES
     85           ********************************************************************************************************
     86           *******************************************************************************************************/
     87          
     88          static PLATFORM_MGR_LIST_ADAPTER *PlatformMgrInternalGet(PLATFORM_MGR_PREDICATE predicate_fnct,
     89                                                                   void                   *p_predicate_data,
     90                                                                   RTOS_ERR               *p_err);
     91          
     92          static CPU_BOOLEAN PlatformMgrGetByNamePredicate(const PLATFORM_MGR_ITEM *p_item,
     93                                                           void                    *p_predicate_data);
     94          
     95          static CPU_BOOLEAN PlatformMgrGetByItemPtrPredicate(const PLATFORM_MGR_ITEM *p_item,
     96                                                              void                    *p_predicate_data);
     97          
     98          /********************************************************************************************************
     99           ********************************************************************************************************
    100           *                                           GLOBAL FUNCTIONS
    101           ********************************************************************************************************
    102           *******************************************************************************************************/
    103          
    104          /****************************************************************************************************//**
    105           *                                           PlatformMgQtyConfigure()
    106           *
    107           * @brief    Configure the quantities that are/can be allocated by the platform manager.
    108           *
    109           * @param    p_cfg   Pointer to the structure containing the platform manager quantity configuration.
    110           *
    111           * @note     (1) This function is optional. If it is called, it must be called before Common_Init().
    112           *               If it is not called, default values will be used to initialize the module.
    113           *******************************************************************************************************/
    114          
    115          #if (RTOS_CFG_EXTERNALIZE_OPTIONAL_CFG_EN == DEF_DISABLED)

   \                                 In section .text, align 2, keep-with-next
    116          void PlatformMgQtyConfigure(PLATFORM_MGR_INIT_CFG *p_cfg)
    117          {
    118            RTOS_ASSERT_DBG((PlatformMgrPtr == DEF_NULL), RTOS_ERR_ALREADY_INIT,; );
   \                     PlatformMgQtyConfigure: (+1)
   \        0x0   0x.... 0x....      LDR.W    R1,??DataTable7
   \        0x4   0x6809             LDR      R1,[R1, #+0]
   \        0x6   0x2900             CMP      R1,#+0
   \        0x8   0xD000             BEQ.N    ??PlatformMgQtyConfigure_0
   \                     ??PlatformMgQtyConfigure_1: (+1)
   \        0xA   0xE7FE             B.N      ??PlatformMgQtyConfigure_1
    119          
    120            RTOS_ASSERT_DBG((p_cfg != DEF_NULL), RTOS_ERR_NULL_PTR,; );
   \                     ??PlatformMgQtyConfigure_0: (+1)
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD100             BNE.N    ??PlatformMgQtyConfigure_2
   \                     ??PlatformMgQtyConfigure_3: (+1)
   \       0x10   0xE7FE             B.N      ??PlatformMgQtyConfigure_3
    121          
    122            PlatformMgr_InitCfg = *p_cfg;
   \                     ??PlatformMgQtyConfigure_2: (+1)
   \       0x12   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \       0x16   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \       0x1A   0xE9C1 0x2300      STRD     R2,R3,[R1, #+0]
    123          }
   \       0x1E   0x4770             BX       LR
    124          #endif
    125          
    126          /****************************************************************************************************//**
    127           *                                           PlatformMgrItemInitAdd()
    128           *
    129           * @brief    Add item to the platform manager.
    130           *
    131           * @param    p_item  Pointer to the item to add.
    132           *
    133           * @note     (1) This function does not return an error and instead asserts if adding the item failed.
    134           *               It is intended to be used during initialization only.
    135           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    136          void PlatformMgrItemInitAdd(const PLATFORM_MGR_ITEM *p_item)
    137          {
   \                     PlatformMgrItemInitAdd: (+1)
   \        0x0   0xB51F             PUSH     {R0-R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    138            RTOS_ERR err;
    139          
    140            PlatformMgrItemAdd(p_item, &err);
   \        0x4   0x4669             MOV      R1,SP
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0x.... 0x....      BL       PlatformMgrItemAdd
    141            RTOS_ASSERT_CRITICAL(RTOS_ERR_CODE_GET(err) == RTOS_ERR_NONE, RTOS_ERR_CODE_GET(err),; );
   \        0xC   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD001             BEQ.N    ??PlatformMgrItemInitAdd_0
   \       0x14   0x.... 0x....      BL       CPU_SW_Exception
    142          }
   \                     ??PlatformMgrItemInitAdd_0: (+1)
   \       0x18   0xBD1F             POP      {R0-R4,PC}
    143          
    144          /****************************************************************************************************//**
    145           *                                       PlatformMgrItemGetByName()
    146           *
    147           * @brief    Get item with the specified 'id_str' from the platform manager.
    148           *
    149           * @param    id_str  String with the ID of the item to get.
    150           *
    151           * @param    p_err   Pointer to the variable that will receive one of the following error code(s) from
    152           *                   this function:
    153           *                       - RTOS_ERR_NONE
    154           *                       - RTOS_ERR_NOT_FOUND
    155           *
    156           * @return   Pointer to item, if found.
    157           *           DEF_NULL, otherwise.
    158           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    159          PLATFORM_MGR_ITEM *PlatformMgrItemGetByName(const CPU_CHAR *id_str,
    160                                                      RTOS_ERR       *p_err)
    161          {
   \                     PlatformMgrItemGetByName: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    162            PLATFORM_MGR_ITEM *p_ret_item;
    163          
    164            RTOS_ASSERT_DBG_ERR_PTR_VALIDATE(p_err, DEF_NULL);
   \        0x6   0x2D00             CMP      R5,#+0
   \        0x8   0xD101             BNE.N    ??PlatformMgrItemGetByName_0
   \        0xA   0x.... 0x....      BL       CPU_SW_Exception
    165          
    166            RTOS_ASSERT_DBG_ERR_SET(id_str != DEF_NULL, *p_err, RTOS_ERR_NULL_PTR, DEF_NULL);
   \                     ??PlatformMgrItemGetByName_0: (+1)
   \        0xE   0x2C00             CMP      R4,#+0
   \       0x10   0xD10A             BNE.N    ??PlatformMgrItemGetByName_1
   \       0x12   0x200A             MOVS     R0,#+10
   \       0x14   0x7028             STRB     R0,[R5, #+0]
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \       0x1A   0x6068             STR      R0,[R5, #+4]
   \       0x1C   0x20A6             MOVS     R0,#+166
   \       0x1E   0x60A8             STR      R0,[R5, #+8]
   \       0x20   0x.... 0x....      LDR.W    R0,??DataTable7_3
   \       0x24   0x60E8             STR      R0,[R5, #+12]
   \                     ??PlatformMgrItemGetByName_2: (+1)
   \       0x26   0xE7FE             B.N      ??PlatformMgrItemGetByName_2
    167          
    168            p_ret_item = PlatformMgrItemGet(PlatformMgrGetByNamePredicate, (void *)id_str, p_err);
   \                     ??PlatformMgrItemGetByName_1: (+1)
   \       0x28   0x002A             MOVS     R2,R5
   \       0x2A   0x0021             MOVS     R1,R4
   \       0x2C   0x.... 0x....      ADR.W    R0,PlatformMgrGetByNamePredicate
   \       0x30   0x.... 0x....      BL       PlatformMgrItemGet
    169          
    170            return (p_ret_item);
   \       0x34   0xBD32             POP      {R1,R4,R5,PC}
    171          }
    172          
    173          /********************************************************************************************************
    174           ********************************************************************************************************
    175           *                                           PRIVATE FUNCTIONS
    176           ********************************************************************************************************
    177           *******************************************************************************************************/
    178          
    179          /****************************************************************************************************//**
    180           *                                               PlatformMgrInit()
    181           *
    182           * @brief    Initialize the platform manager sub-module.
    183           *
    184           * @param    p_err   Pointer to the variable that will receive one of the following error code(s) from
    185           *                   this function:
    186           *                       - RTOS_ERR_NONE
    187           *                       - RTOS_ERR_SEG_OVF
    188           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    189          void PlatformMgrInit(RTOS_ERR *p_err)
    190          {
   \                     PlatformMgrInit: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB084             SUB      SP,SP,#+16
   \        0x6   0x0004             MOVS     R4,R0
    191            MEM_SEG     *p_mem_seg;
    192            CPU_BOOLEAN feat_is_ok;
    193          
    194            RTOS_ASSERT_DBG_ERR_PTR_VALIDATE(p_err,; );
   \        0x8   0x2C00             CMP      R4,#+0
   \        0xA   0xD101             BNE.N    ??PlatformMgrInit_0
   \        0xC   0x.... 0x....      BL       CPU_SW_Exception
    195          
    196            RTOS_ERR_SET(*p_err, RTOS_ERR_NONE);
   \                     ??PlatformMgrInit_0: (+1)
   \       0x10   0x2000             MOVS     R0,#+0
   \       0x12   0x7020             STRB     R0,[R4, #+0]
   \       0x14   0x.... 0x....      LDR.W    R7,??DataTable7_2
   \       0x18   0x6067             STR      R7,[R4, #+4]
   \       0x1A   0x20C4             MOVS     R0,#+196
   \       0x1C   0x60A0             STR      R0,[R4, #+8]
   \       0x1E   0x.... 0x....      LDR.W    R9,??DataTable7_4
   \       0x22   0xF8C4 0x900C      STR      R9,[R4, #+12]
    197          
    198            if (PlatformMgr_InitCfg.PoolBlkQtyMax > 0u) {
   \       0x26   0x.... 0x....      LDR.W    R8,??DataTable7_1
   \       0x2A   0xF8D8 0x0004      LDR      R0,[R8, #+4]
   \       0x2E   0x2800             CMP      R0,#+0
   \       0x30   0xD04C             BEQ.N    ??PlatformMgrInit_1
    199              feat_is_ok = KAL_FeatureQuery(KAL_FEATURE_LOCK_CREATE, KAL_OPT_CREATE_NONE);
   \       0x32   0x2100             MOVS     R1,#+0
   \       0x34   0x2002             MOVS     R0,#+2
   \       0x36   0x.... 0x....      BL       KAL_FeatureQuery
   \       0x3A   0x4683             MOV      R11,R0
    200              feat_is_ok &= KAL_FeatureQuery(KAL_FEATURE_LOCK_ACQUIRE, KAL_OPT_PEND_NONE);
   \       0x3C   0x2100             MOVS     R1,#+0
   \       0x3E   0x2003             MOVS     R0,#+3
   \       0x40   0x.... 0x....      BL       KAL_FeatureQuery
   \       0x44   0x4682             MOV      R10,R0
   \       0x46   0xEA1A 0x0A0B      ANDS     R10,R10,R11
    201              feat_is_ok &= KAL_FeatureQuery(KAL_FEATURE_LOCK_RELEASE, KAL_OPT_POST_NONE);
   \       0x4A   0x2100             MOVS     R1,#+0
   \       0x4C   0x2004             MOVS     R0,#+4
   \       0x4E   0x.... 0x....      BL       KAL_FeatureQuery
   \       0x52   0xEA10 0x000A      ANDS     R0,R0,R10
   \       0x56   0x0005             MOVS     R5,R0
    202              RTOS_ASSERT_DBG_ERR_SET((feat_is_ok == DEF_OK), *p_err, RTOS_ERR_NOT_AVAIL,; );
   \       0x58   0x0028             MOVS     R0,R5
   \       0x5A   0xB2C0             UXTB     R0,R0
   \       0x5C   0x2801             CMP      R0,#+1
   \       0x5E   0xD007             BEQ.N    ??PlatformMgrInit_2
   \       0x60   0x2006             MOVS     R0,#+6
   \       0x62   0x7020             STRB     R0,[R4, #+0]
   \       0x64   0x6067             STR      R7,[R4, #+4]
   \       0x66   0x20CA             MOVS     R0,#+202
   \       0x68   0x60A0             STR      R0,[R4, #+8]
   \       0x6A   0xF8C4 0x900C      STR      R9,[R4, #+12]
   \                     ??PlatformMgrInit_3: (+1)
   \       0x6E   0xE7FE             B.N      ??PlatformMgrInit_3
    203          
    204              p_mem_seg = Common_MemSegPtrGet();
   \                     ??PlatformMgrInit_2: (+1)
   \       0x70   0x.... 0x....      BL       Common_MemSegPtrGet
   \       0x74   0x0006             MOVS     R6,R0
    205          
    206              PlatformMgrPtr = (PLATFORM_MGR_DATA *)Mem_SegAlloc("Platform Mgr - Data",
    207                                                                 p_mem_seg,
    208                                                                 sizeof(PLATFORM_MGR_DATA),
    209                                                                 p_err);
   \       0x76   0x....             LDR.N    R7,??DataTable7
   \       0x78   0x0023             MOVS     R3,R4
   \       0x7A   0x222C             MOVS     R2,#+44
   \       0x7C   0x0031             MOVS     R1,R6
   \       0x7E   0x....             LDR.N    R0,??DataTable7_5
   \       0x80   0x.... 0x....      BL       Mem_SegAlloc
   \       0x84   0x6038             STR      R0,[R7, #+0]
    210              if (RTOS_ERR_CODE_GET(*p_err) != RTOS_ERR_NONE) {
   \       0x86   0x7820             LDRB     R0,[R4, #+0]
   \       0x88   0x2800             CMP      R0,#+0
   \       0x8A   0xD11F             BNE.N    ??PlatformMgrInit_4
    211                return;
    212              }
    213          
    214              Mem_DynPoolCreate("Platform Mgr - Dyn Pool",
    215                                &PlatformMgrPtr->Pool,
    216                                p_mem_seg,
    217                                sizeof(PLATFORM_MGR_LIST_ADAPTER),
    218                                sizeof(CPU_ALIGN),
    219                                PlatformMgr_InitCfg.PoolBlkQtyInit,
    220                                PlatformMgr_InitCfg.PoolBlkQtyMax,
    221                                p_err);
   \                     ??PlatformMgrInit_5: (+1)
   \       0x8C   0x9403             STR      R4,[SP, #+12]
   \       0x8E   0xF8D8 0x0004      LDR      R0,[R8, #+4]
   \       0x92   0x9002             STR      R0,[SP, #+8]
   \       0x94   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0x98   0x9001             STR      R0,[SP, #+4]
   \       0x9A   0x2004             MOVS     R0,#+4
   \       0x9C   0x9000             STR      R0,[SP, #+0]
   \       0x9E   0x2308             MOVS     R3,#+8
   \       0xA0   0x0032             MOVS     R2,R6
   \       0xA2   0x6838             LDR      R0,[R7, #+0]
   \       0xA4   0x1D01             ADDS     R1,R0,#+4
   \       0xA6   0x....             LDR.N    R0,??DataTable7_6
   \       0xA8   0x.... 0x....      BL       Mem_DynPoolCreate
    222              if (RTOS_ERR_CODE_GET(*p_err) != RTOS_ERR_NONE) {
   \       0xAC   0x7820             LDRB     R0,[R4, #+0]
   \       0xAE   0x2800             CMP      R0,#+0
   \       0xB0   0xD10C             BNE.N    ??PlatformMgrInit_4
    223                return;
    224              }
    225          
    226              PlatformMgrPtr->LockHandle = KAL_LockCreate("Platform Mgr Lock", DEF_NULL, p_err);
   \                     ??PlatformMgrInit_6: (+1)
   \       0xB2   0x0022             MOVS     R2,R4
   \       0xB4   0x2100             MOVS     R1,#+0
   \       0xB6   0x....             LDR.N    R0,??DataTable7_7
   \       0xB8   0x.... 0x....      BL       KAL_LockCreate
   \       0xBC   0x6839             LDR      R1,[R7, #+0]
   \       0xBE   0x6288             STR      R0,[R1, #+40]
    227              if (RTOS_ERR_CODE_GET(*p_err) != RTOS_ERR_NONE) {
   \       0xC0   0x7820             LDRB     R0,[R4, #+0]
   \       0xC2   0x2800             CMP      R0,#+0
   \       0xC4   0xD102             BNE.N    ??PlatformMgrInit_4
    228                return;
    229              }
    230          
    231              SList_Init(&(PlatformMgrPtr->PlatformMgrListHeadPtr));
   \                     ??PlatformMgrInit_7: (+1)
   \       0xC6   0x6838             LDR      R0,[R7, #+0]
   \       0xC8   0x.... 0x....      BL       SList_Init
    232            }
    233          }
   \                     ??PlatformMgrInit_1: (+1)
   \                     ??PlatformMgrInit_4: (+1)
   \       0xCC   0xB005             ADD      SP,SP,#+20
   \       0xCE   0xE8BD 0x8FF0      POP      {R4-R11,PC}
    234          
    235          /****************************************************************************************************//**
    236           *                                           PlatformMgrItemAlloc()
    237           *
    238           * @brief    Allocate platform manager item.
    239           *
    240           * @param    item_size   Size of the item to allocate.
    241           *
    242           * @param    p_err       Pointer to the variable that will receive one of the following error code(s)
    243           *                       from this function:
    244           *                           - RTOS_ERR_NONE
    245           *                           - RTOS_ERR_SEG_OVF
    246           *
    247           * @return   Allocated platform manager item, if NO error(s),
    248           *           DEF_NULL, otherwise.
    249           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    250          PLATFORM_MGR_ITEM *PlatformMgrItemAlloc(CPU_INT32U item_size,
    251                                                  RTOS_ERR   *p_err)
    252          {
   \                     PlatformMgrItemAlloc: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    253            PLATFORM_MGR_ITEM *p_item;
    254            MEM_SEG           *p_mem_seg;
    255          
    256            RTOS_ASSERT_DBG_ERR_PTR_VALIDATE(p_err, DEF_NULL);
   \        0x6   0x2D00             CMP      R5,#+0
   \        0x8   0xD101             BNE.N    ??PlatformMgrItemAlloc_0
   \        0xA   0x.... 0x....      BL       CPU_SW_Exception
    257          
    258            RTOS_ASSERT_DBG_ERR_SET(item_size != 0u, *p_err, RTOS_ERR_INVALID_ARG, DEF_NULL);
   \                     ??PlatformMgrItemAlloc_0: (+1)
   \        0xE   0x2C00             CMP      R4,#+0
   \       0x10   0xD109             BNE.N    ??PlatformMgrItemAlloc_1
   \       0x12   0x2008             MOVS     R0,#+8
   \       0x14   0x7028             STRB     R0,[R5, #+0]
   \       0x16   0x....             LDR.N    R0,??DataTable7_2
   \       0x18   0x6068             STR      R0,[R5, #+4]
   \       0x1A   0xF44F 0x7081      MOV      R0,#+258
   \       0x1E   0x60A8             STR      R0,[R5, #+8]
   \       0x20   0x....             LDR.N    R0,??DataTable7_8
   \       0x22   0x60E8             STR      R0,[R5, #+12]
   \                     ??PlatformMgrItemAlloc_2: (+1)
   \       0x24   0xE7FE             B.N      ??PlatformMgrItemAlloc_2
    259          
    260            p_mem_seg = Common_MemSegPtrGet();
   \                     ??PlatformMgrItemAlloc_1: (+1)
   \       0x26   0x.... 0x....      BL       Common_MemSegPtrGet
   \       0x2A   0x0006             MOVS     R6,R0
    261          
    262            p_item = (PLATFORM_MGR_ITEM *)Mem_SegAlloc("HW_Info Item",
    263                                                       p_mem_seg,
    264                                                       item_size,
    265                                                       p_err);
   \       0x2C   0x002B             MOVS     R3,R5
   \       0x2E   0x0022             MOVS     R2,R4
   \       0x30   0x0031             MOVS     R1,R6
   \       0x32   0x....             LDR.N    R0,??DataTable7_9
   \       0x34   0x.... 0x....      BL       Mem_SegAlloc
   \       0x38   0x0001             MOVS     R1,R0
    266            if (RTOS_ERR_CODE_GET(*p_err) != RTOS_ERR_NONE) {
   \       0x3A   0x7828             LDRB     R0,[R5, #+0]
   \       0x3C   0x2800             CMP      R0,#+0
   \       0x3E   0xD001             BEQ.N    ??PlatformMgrItemAlloc_3
    267              return (DEF_NULL);
   \       0x40   0x2000             MOVS     R0,#+0
   \       0x42   0xE000             B.N      ??PlatformMgrItemAlloc_4
    268            }
    269          
    270            return (p_item);
   \                     ??PlatformMgrItemAlloc_3: (+1)
   \       0x44   0x0008             MOVS     R0,R1
   \                     ??PlatformMgrItemAlloc_4: (+1)
   \       0x46   0xBD70             POP      {R4-R6,PC}
    271          }
    272          
    273          /****************************************************************************************************//**
    274           *                                           PlatformMgrItemAdd()
    275           *
    276           * @brief    Add item to the platform manager.
    277           *
    278           * @param    p_item  Pointer to the item to add.
    279           *
    280           * @param    p_err   Pointer to the variable that will receive one of the following error code(s) from
    281           *                   this function:
    282           *                       - RTOS_ERR_NONE
    283           *                       - RTOS_ERR_ALREADY_EXISTS
    284           *                       - RTOS_ERR_NOT_FOUND
    285           *                       - RTOS_ERR_SEG_OVF
    286           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    287          void PlatformMgrItemAdd(const PLATFORM_MGR_ITEM *p_item,
    288                                  RTOS_ERR                *p_err)
    289          {
   \                     PlatformMgrItemAdd: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB084             SUB      SP,SP,#+16
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
    290            PLATFORM_MGR_LIST_ADAPTER *p_list_adapter;
    291            RTOS_ERR                  local_err;
    292          
    293            RTOS_ASSERT_DBG_ERR_PTR_VALIDATE(p_err,; );
   \        0x8   0x2D00             CMP      R5,#+0
   \        0xA   0xD101             BNE.N    ??PlatformMgrItemAdd_0
   \        0xC   0x.... 0x....      BL       CPU_SW_Exception
    294          
    295            RTOS_ASSERT_DBG_ERR_SET(p_item != DEF_NULL, *p_err, RTOS_ERR_NULL_PTR,; );
   \                     ??PlatformMgrItemAdd_0: (+1)
   \       0x10   0x2C00             CMP      R4,#+0
   \       0x12   0xD109             BNE.N    ??PlatformMgrItemAdd_1
   \       0x14   0x200A             MOVS     R0,#+10
   \       0x16   0x7028             STRB     R0,[R5, #+0]
   \       0x18   0x....             LDR.N    R0,??DataTable7_2
   \       0x1A   0x6068             STR      R0,[R5, #+4]
   \       0x1C   0xF240 0x1027      MOVW     R0,#+295
   \       0x20   0x60A8             STR      R0,[R5, #+8]
   \       0x22   0x....             LDR.N    R0,??DataTable7_10
   \       0x24   0x60E8             STR      R0,[R5, #+12]
   \                     ??PlatformMgrItemAdd_2: (+1)
   \       0x26   0xE7FE             B.N      ??PlatformMgrItemAdd_2
    296          
    297            KAL_LockAcquire(PlatformMgrPtr->LockHandle, KAL_OPT_PEND_NONE, KAL_TIMEOUT_INFINITE, p_err);
   \                     ??PlatformMgrItemAdd_1: (+1)
   \       0x28   0x....             LDR.N    R7,??DataTable7
   \       0x2A   0x002B             MOVS     R3,R5
   \       0x2C   0x2200             MOVS     R2,#+0
   \       0x2E   0x2100             MOVS     R1,#+0
   \       0x30   0x6838             LDR      R0,[R7, #+0]
   \       0x32   0x6A80             LDR      R0,[R0, #+40]
   \       0x34   0x.... 0x....      BL       KAL_LockAcquire
    298            if (RTOS_ERR_CODE_GET(*p_err) != RTOS_ERR_NONE) {
   \       0x38   0x7828             LDRB     R0,[R5, #+0]
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD13A             BNE.N    ??PlatformMgrItemAdd_3
    299              return;
    300            }
    301          
    302            (void)PlatformMgrInternalGet(PlatformMgrGetByNamePredicate, (void *)p_item->StrID, p_err);
   \                     ??PlatformMgrItemAdd_4: (+1)
   \       0x3E   0x002A             MOVS     R2,R5
   \       0x40   0x6861             LDR      R1,[R4, #+4]
   \       0x42   0x.... 0x....      ADR.W    R0,PlatformMgrGetByNamePredicate
   \       0x46   0x.... 0x....      BL       PlatformMgrInternalGet
    303            if (RTOS_ERR_CODE_GET(*p_err) != RTOS_ERR_NOT_FOUND) {
   \       0x4A   0x7828             LDRB     R0,[R5, #+0]
   \       0x4C   0x280F             CMP      R0,#+15
   \       0x4E   0xD009             BEQ.N    ??PlatformMgrItemAdd_5
    304              RTOS_ERR_SET(*p_err, RTOS_ERR_ALREADY_EXISTS);
   \       0x50   0x2015             MOVS     R0,#+21
   \       0x52   0x7028             STRB     R0,[R5, #+0]
   \       0x54   0x....             LDR.N    R0,??DataTable7_2
   \       0x56   0x6068             STR      R0,[R5, #+4]
   \       0x58   0xF44F 0x7098      MOV      R0,#+304
   \       0x5C   0x60A8             STR      R0,[R5, #+8]
   \       0x5E   0x....             LDR.N    R0,??DataTable7_10
   \       0x60   0x60E8             STR      R0,[R5, #+12]
    305              goto unlock_exit;
   \       0x62   0xE016             B.N      ??PlatformMgrItemAdd_6
    306            }
    307          
    308            p_list_adapter = (PLATFORM_MGR_LIST_ADAPTER *)Mem_DynPoolBlkGet(&PlatformMgrPtr->Pool, p_err);
   \                     ??PlatformMgrItemAdd_5: (+1)
   \       0x64   0x0029             MOVS     R1,R5
   \       0x66   0x6838             LDR      R0,[R7, #+0]
   \       0x68   0x1D00             ADDS     R0,R0,#+4
   \       0x6A   0x.... 0x....      BL       Mem_DynPoolBlkGet
   \       0x6E   0x0006             MOVS     R6,R0
    309            if (RTOS_ERR_CODE_GET(*p_err) != RTOS_ERR_NONE) {
   \       0x70   0x7828             LDRB     R0,[R5, #+0]
   \       0x72   0x2800             CMP      R0,#+0
   \       0x74   0xD10D             BNE.N    ??PlatformMgrItemAdd_6
    310              goto unlock_exit;
    311            }
    312          
    313            p_list_adapter->ItemPtr = p_item;
   \                     ??PlatformMgrItemAdd_7: (+1)
   \       0x76   0x6074             STR      R4,[R6, #+4]
    314          
    315            SList_Push(&(PlatformMgrPtr->PlatformMgrListHeadPtr),
    316                       &p_list_adapter->ListNode);
   \       0x78   0x0031             MOVS     R1,R6
   \       0x7A   0x6838             LDR      R0,[R7, #+0]
   \       0x7C   0x.... 0x....      BL       SList_Push
    317          
    318            RTOS_ERR_SET(*p_err, RTOS_ERR_NONE);
   \       0x80   0x2000             MOVS     R0,#+0
   \       0x82   0x7028             STRB     R0,[R5, #+0]
   \       0x84   0x....             LDR.N    R0,??DataTable7_2
   \       0x86   0x6068             STR      R0,[R5, #+4]
   \       0x88   0xF44F 0x709F      MOV      R0,#+318
   \       0x8C   0x60A8             STR      R0,[R5, #+8]
   \       0x8E   0x....             LDR.N    R0,??DataTable7_10
   \       0x90   0x60E8             STR      R0,[R5, #+12]
    319          
    320          unlock_exit:
    321            KAL_LockRelease(PlatformMgrPtr->LockHandle, &local_err);
   \                     ??PlatformMgrItemAdd_6: (+1)
   \       0x92   0x4669             MOV      R1,SP
   \       0x94   0x6838             LDR      R0,[R7, #+0]
   \       0x96   0x6A80             LDR      R0,[R0, #+40]
   \       0x98   0x.... 0x....      BL       KAL_LockRelease
    322            if ((RTOS_ERR_CODE_GET(local_err) != RTOS_ERR_NONE)
    323                && (RTOS_ERR_CODE_GET(*p_err) == RTOS_ERR_NONE)) {
   \       0x9C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0xA0   0x2800             CMP      R0,#+0
   \       0xA2   0xD007             BEQ.N    ??PlatformMgrItemAdd_8
   \       0xA4   0x7828             LDRB     R0,[R5, #+0]
   \       0xA6   0x2800             CMP      R0,#+0
   \       0xA8   0xD104             BNE.N    ??PlatformMgrItemAdd_8
    324              RTOS_ERR_COPY(*p_err, local_err);
   \       0xAA   0x0028             MOVS     R0,R5
   \       0xAC   0x4669             MOV      R1,SP
   \       0xAE   0x2210             MOVS     R2,#+16
   \       0xB0   0x.... 0x....      BL       __aeabi_memcpy4
    325            }
    326          }
   \                     ??PlatformMgrItemAdd_8: (+1)
   \                     ??PlatformMgrItemAdd_3: (+1)
   \       0xB4   0xB005             ADD      SP,SP,#+20
   \       0xB6   0xBDF0             POP      {R4-R7,PC}
    327          
    328          /****************************************************************************************************//**
    329           *                                           PlatformMgrItemGet()
    330           *
    331           * @brief    Get item identified by predicate function passed.
    332           *
    333           * @param    predicate_fnct      Function that will be called for each item to know if it is the item
    334           *                               that needs to be removed.
    335           *
    336           * @param    p_predicate_data    Pointer to argument that will be passed to predicate.
    337           *
    338           * @param    p_err               Pointer to the variable that will receive one of the following error
    339           *                               code(s) from this function:
    340           *                                   - RTOS_ERR_NONE
    341           *                                   - RTOS_ERR_NOT_FOUND
    342           *
    343           * @return   Pointer to item, if found.
    344           *           DEF_NULL, otherwise.
    345           *
    346           * @note     (1) No call to the platform mgr should be done from the predicate, as the lock is
    347           *               acquired at that moment. Doing so would result in a deadlock.
    348           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    349          PLATFORM_MGR_ITEM *PlatformMgrItemGet(PLATFORM_MGR_PREDICATE predicate_fnct,
    350                                                void                   *p_predicate_data,
    351                                                RTOS_ERR               *p_err)
    352          {
   \                     PlatformMgrItemGet: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0xB084             SUB      SP,SP,#+16
   \        0x6   0x0006             MOVS     R6,R0
   \        0x8   0x000F             MOVS     R7,R1
   \        0xA   0x0014             MOVS     R4,R2
    353            PLATFORM_MGR_LIST_ADAPTER *p_list_adapt;
    354            PLATFORM_MGR_ITEM         *p_ret_item;
    355            RTOS_ERR                  local_err;
    356          
    357            RTOS_ASSERT_DBG_ERR_PTR_VALIDATE(p_err, DEF_NULL);
   \        0xC   0x2C00             CMP      R4,#+0
   \        0xE   0xD101             BNE.N    ??PlatformMgrItemGet_0
   \       0x10   0x.... 0x....      BL       CPU_SW_Exception
    358          
    359            RTOS_ASSERT_DBG_ERR_SET(predicate_fnct != DEF_NULL, *p_err, RTOS_ERR_NULL_PTR, DEF_NULL);
   \                     ??PlatformMgrItemGet_0: (+1)
   \       0x14   0x0030             MOVS     R0,R6
   \       0x16   0x2800             CMP      R0,#+0
   \       0x18   0xD109             BNE.N    ??PlatformMgrItemGet_1
   \       0x1A   0x200A             MOVS     R0,#+10
   \       0x1C   0x7020             STRB     R0,[R4, #+0]
   \       0x1E   0x....             LDR.N    R0,??DataTable7_2
   \       0x20   0x6060             STR      R0,[R4, #+4]
   \       0x22   0xF240 0x1067      MOVW     R0,#+359
   \       0x26   0x60A0             STR      R0,[R4, #+8]
   \       0x28   0x....             LDR.N    R0,??DataTable7_11
   \       0x2A   0x60E0             STR      R0,[R4, #+12]
   \                     ??PlatformMgrItemGet_2: (+1)
   \       0x2C   0xE7FE             B.N      ??PlatformMgrItemGet_2
    360          
    361            KAL_LockAcquire(PlatformMgrPtr->LockHandle, KAL_OPT_PEND_NONE, KAL_TIMEOUT_INFINITE, p_err);
   \                     ??PlatformMgrItemGet_1: (+1)
   \       0x2E   0x.... 0x....      LDR.W    R9,??DataTable7
   \       0x32   0x0023             MOVS     R3,R4
   \       0x34   0x2200             MOVS     R2,#+0
   \       0x36   0x2100             MOVS     R1,#+0
   \       0x38   0xF8D9 0x0000      LDR      R0,[R9, #+0]
   \       0x3C   0x6A80             LDR      R0,[R0, #+40]
   \       0x3E   0x.... 0x....      BL       KAL_LockAcquire
    362            if (RTOS_ERR_CODE_GET(*p_err) != RTOS_ERR_NONE) {
   \       0x42   0x7820             LDRB     R0,[R4, #+0]
   \       0x44   0x2800             CMP      R0,#+0
   \       0x46   0xD001             BEQ.N    ??PlatformMgrItemGet_3
    363              return (DEF_NULL);
   \       0x48   0x2000             MOVS     R0,#+0
   \       0x4A   0xE01F             B.N      ??PlatformMgrItemGet_4
    364            }
    365          
    366            p_list_adapt = PlatformMgrInternalGet(predicate_fnct, p_predicate_data, p_err);
   \                     ??PlatformMgrItemGet_3: (+1)
   \       0x4C   0x0022             MOVS     R2,R4
   \       0x4E   0x0039             MOVS     R1,R7
   \       0x50   0x0030             MOVS     R0,R6
   \       0x52   0x.... 0x....      BL       PlatformMgrInternalGet
   \       0x56   0x0005             MOVS     R5,R0
    367            p_ret_item = (PLATFORM_MGR_ITEM *)((p_list_adapt != DEF_NULL) ? (p_list_adapt->ItemPtr) : DEF_NULL);
   \       0x58   0x2D00             CMP      R5,#+0
   \       0x5A   0xD002             BEQ.N    ??PlatformMgrItemGet_5
   \       0x5C   0xF8D5 0x8004      LDR      R8,[R5, #+4]
   \       0x60   0xE001             B.N      ??PlatformMgrItemGet_6
   \                     ??PlatformMgrItemGet_5: (+1)
   \       0x62   0xF05F 0x0800      MOVS     R8,#+0
    368          
    369            KAL_LockRelease(PlatformMgrPtr->LockHandle, &local_err);
   \                     ??PlatformMgrItemGet_6: (+1)
   \       0x66   0x4669             MOV      R1,SP
   \       0x68   0xF8D9 0x0000      LDR      R0,[R9, #+0]
   \       0x6C   0x6A80             LDR      R0,[R0, #+40]
   \       0x6E   0x.... 0x....      BL       KAL_LockRelease
    370            if ((RTOS_ERR_CODE_GET(local_err) != RTOS_ERR_NONE)
    371                && (RTOS_ERR_CODE_GET(*p_err) == RTOS_ERR_NONE)) {
   \       0x72   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x76   0x2800             CMP      R0,#+0
   \       0x78   0xD007             BEQ.N    ??PlatformMgrItemGet_7
   \       0x7A   0x7820             LDRB     R0,[R4, #+0]
   \       0x7C   0x2800             CMP      R0,#+0
   \       0x7E   0xD104             BNE.N    ??PlatformMgrItemGet_7
    372              RTOS_ERR_COPY(*p_err, local_err);
   \       0x80   0x0020             MOVS     R0,R4
   \       0x82   0x4669             MOV      R1,SP
   \       0x84   0x2210             MOVS     R2,#+16
   \       0x86   0x.... 0x....      BL       __aeabi_memcpy4
    373            }
    374          
    375            return (p_ret_item);
   \                     ??PlatformMgrItemGet_7: (+1)
   \       0x8A   0x4640             MOV      R0,R8
   \                     ??PlatformMgrItemGet_4: (+1)
   \       0x8C   0xB005             ADD      SP,SP,#+20
   \       0x8E   0xE8BD 0x83F0      POP      {R4-R9,PC}
    376          }
    377          
    378          /****************************************************************************************************//**
    379           *                                           PlatformMgrItemRem()
    380           *
    381           * @brief    Remove specified item from the platform manager.
    382           *
    383           * @param    p_item  Pointer to the item to remove.
    384           *
    385           * @param    p_err   Pointer to the variable that will receive one of the following error code(s) from
    386           *                   this function:
    387           *                       - RTOS_ERR_NONE
    388           *                       - RTOS_ERR_NOT_FOUND
    389           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    390          void PlatformMgrItemRem(const PLATFORM_MGR_ITEM *p_item,
    391                                  RTOS_ERR                *p_err)
    392          {
   \                     PlatformMgrItemRem: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB084             SUB      SP,SP,#+16
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
    393            PLATFORM_MGR_LIST_ADAPTER *p_list_adapter;
    394            RTOS_ERR                  local_err;
    395          
    396            RTOS_ASSERT_DBG_ERR_PTR_VALIDATE(p_err,; );
   \        0x8   0x2D00             CMP      R5,#+0
   \        0xA   0xD101             BNE.N    ??PlatformMgrItemRem_0
   \        0xC   0x.... 0x....      BL       CPU_SW_Exception
    397          
    398            RTOS_ASSERT_DBG_ERR_SET(p_item != DEF_NULL, *p_err, RTOS_ERR_NULL_PTR,; );
   \                     ??PlatformMgrItemRem_0: (+1)
   \       0x10   0x2C00             CMP      R4,#+0
   \       0x12   0xD109             BNE.N    ??PlatformMgrItemRem_1
   \       0x14   0x200A             MOVS     R0,#+10
   \       0x16   0x7028             STRB     R0,[R5, #+0]
   \       0x18   0x....             LDR.N    R0,??DataTable7_2
   \       0x1A   0x6068             STR      R0,[R5, #+4]
   \       0x1C   0xF44F 0x70C7      MOV      R0,#+398
   \       0x20   0x60A8             STR      R0,[R5, #+8]
   \       0x22   0x....             LDR.N    R0,??DataTable7_12
   \       0x24   0x60E8             STR      R0,[R5, #+12]
   \                     ??PlatformMgrItemRem_2: (+1)
   \       0x26   0xE7FE             B.N      ??PlatformMgrItemRem_2
    399          
    400            KAL_LockAcquire(PlatformMgrPtr->LockHandle, KAL_OPT_PEND_NONE, KAL_TIMEOUT_INFINITE, p_err);
   \                     ??PlatformMgrItemRem_1: (+1)
   \       0x28   0x....             LDR.N    R6,??DataTable7
   \       0x2A   0x002B             MOVS     R3,R5
   \       0x2C   0x2200             MOVS     R2,#+0
   \       0x2E   0x2100             MOVS     R1,#+0
   \       0x30   0x6830             LDR      R0,[R6, #+0]
   \       0x32   0x6A80             LDR      R0,[R0, #+40]
   \       0x34   0x.... 0x....      BL       KAL_LockAcquire
    401            if (RTOS_ERR_CODE_GET(*p_err) != RTOS_ERR_NONE) {
   \       0x38   0x7828             LDRB     R0,[R5, #+0]
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD124             BNE.N    ??PlatformMgrItemRem_3
    402              return;
    403            }
    404          
    405            p_list_adapter = PlatformMgrInternalGet(PlatformMgrGetByItemPtrPredicate, (void *)p_item, p_err);
   \                     ??PlatformMgrItemRem_4: (+1)
   \       0x3E   0x002A             MOVS     R2,R5
   \       0x40   0x0021             MOVS     R1,R4
   \       0x42   0x.... 0x....      ADR.W    R0,PlatformMgrGetByItemPtrPredicate
   \       0x46   0x.... 0x....      BL       PlatformMgrInternalGet
   \       0x4A   0x0007             MOVS     R7,R0
    406            if (RTOS_ERR_CODE_GET(*p_err) != RTOS_ERR_NONE) {
   \       0x4C   0x7828             LDRB     R0,[R5, #+0]
   \       0x4E   0x2800             CMP      R0,#+0
   \       0x50   0xD10F             BNE.N    ??PlatformMgrItemRem_5
    407              goto unlock_exit;
    408            }
    409          
    410            SList_Rem(&(PlatformMgrPtr->PlatformMgrListHeadPtr), &(p_list_adapter->ListNode));
   \                     ??PlatformMgrItemRem_6: (+1)
   \       0x52   0x0039             MOVS     R1,R7
   \       0x54   0x6830             LDR      R0,[R6, #+0]
   \       0x56   0x.... 0x....      BL       SList_Rem
    411          
    412            Mem_DynPoolBlkFree(&PlatformMgrPtr->Pool, (void *)p_list_adapter, &local_err);
   \       0x5A   0x466A             MOV      R2,SP
   \       0x5C   0x0039             MOVS     R1,R7
   \       0x5E   0x6830             LDR      R0,[R6, #+0]
   \       0x60   0x1D00             ADDS     R0,R0,#+4
   \       0x62   0x.... 0x....      BL       Mem_DynPoolBlkFree
    413            RTOS_ASSERT_CRITICAL(RTOS_ERR_CODE_GET(local_err) == RTOS_ERR_NONE, RTOS_ERR_ASSERT_CRITICAL_FAIL,; );
   \       0x66   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x6A   0x2800             CMP      R0,#+0
   \       0x6C   0xD001             BEQ.N    ??PlatformMgrItemRem_5
   \       0x6E   0x.... 0x....      BL       CPU_SW_Exception
    414          
    415          unlock_exit:
    416            KAL_LockRelease(PlatformMgrPtr->LockHandle, &local_err);
   \                     ??PlatformMgrItemRem_5: (+1)
   \       0x72   0x4669             MOV      R1,SP
   \       0x74   0x6830             LDR      R0,[R6, #+0]
   \       0x76   0x6A80             LDR      R0,[R0, #+40]
   \       0x78   0x.... 0x....      BL       KAL_LockRelease
    417            RTOS_ASSERT_CRITICAL(RTOS_ERR_CODE_GET(local_err) == RTOS_ERR_NONE, RTOS_ERR_ASSERT_CRITICAL_FAIL,; );
   \       0x7C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x80   0x2800             CMP      R0,#+0
   \       0x82   0xD001             BEQ.N    ??PlatformMgrItemRem_7
   \       0x84   0x.... 0x....      BL       CPU_SW_Exception
    418          }
   \                     ??PlatformMgrItemRem_7: (+1)
   \                     ??PlatformMgrItemRem_3: (+1)
   \       0x88   0xB005             ADD      SP,SP,#+20
   \       0x8A   0xBDF0             POP      {R4-R7,PC}
    419          
    420          /********************************************************************************************************
    421           ********************************************************************************************************
    422           *                                           LOCAL FUNCTIONS
    423           ********************************************************************************************************
    424           *******************************************************************************************************/
    425          
    426          /****************************************************************************************************//**
    427           *                                           PlatformMgrInternalGet()
    428           *
    429           * @brief    Finds and returns list adapter identified by the predicate.
    430           *
    431           * @param    predicate_fnct      Function that will be called for each item to know if it is the item
    432           *                               for which the list adapter needs to be returned.
    433           *
    434           * @param    p_predicate_data    Pointer to argument passed to predicate.
    435           *
    436           * @param    p_err               Pointer to the variable that will receive one of the following error
    437           *                               code(s) from this function:
    438           *                                   - RTOS_ERR_NONE
    439           *                                   - RTOS_ERR_NOT_FOUND
    440           *
    441           * @return   Pointer to list adapter, if found.
    442           *           DEF_NULL, otherwise.
    443           *
    444           * @note     (1) The platform mgr lock must be acquired when calling this function.
    445           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    446          static PLATFORM_MGR_LIST_ADAPTER *PlatformMgrInternalGet(PLATFORM_MGR_PREDICATE predicate_fnct,
    447                                                                   void                   *p_predicate_data,
    448                                                                   RTOS_ERR               *p_err)
    449          {
   \                     PlatformMgrInternalGet: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0x0005             MOVS     R5,R0
   \        0x6   0x000E             MOVS     R6,R1
   \        0x8   0x0017             MOVS     R7,R2
    450            PLATFORM_MGR_LIST_ADAPTER *p_list_adapt = DEF_NULL;
   \        0xA   0xF05F 0x0800      MOVS     R8,#+0
    451            PLATFORM_MGR_LIST_ADAPTER *p_list_adapt_iter;
    452            CPU_BOOLEAN               ret_val;
    453          
    454            RTOS_ERR_SET(*p_err, RTOS_ERR_NOT_FOUND);
   \        0xE   0x200F             MOVS     R0,#+15
   \       0x10   0x7038             STRB     R0,[R7, #+0]
   \       0x12   0x.... 0x....      LDR.W    R9,??DataTable7_2
   \       0x16   0xF8C7 0x9004      STR      R9,[R7, #+4]
   \       0x1A   0xF44F 0x70E3      MOV      R0,#+454
   \       0x1E   0x60B8             STR      R0,[R7, #+8]
   \       0x20   0x.... 0x....      LDR.W    R10,??DataTable7_13
   \       0x24   0xF8C7 0xA00C      STR      R10,[R7, #+12]
    455            if (PlatformMgrPtr->PlatformMgrListHeadPtr != DEF_NULL) {
   \       0x28   0x....             LDR.N    R1,??DataTable7
   \       0x2A   0x6808             LDR      R0,[R1, #+0]
   \       0x2C   0x6800             LDR      R0,[R0, #+0]
   \       0x2E   0x2800             CMP      R0,#+0
   \       0x30   0xD019             BEQ.N    ??PlatformMgrInternalGet_0
    456              SLIST_FOR_EACH_ENTRY(PlatformMgrPtr->PlatformMgrListHeadPtr, p_list_adapt_iter, PLATFORM_MGR_LIST_ADAPTER, ListNode) {
   \       0x32   0x6808             LDR      R0,[R1, #+0]
   \       0x34   0x6800             LDR      R0,[R0, #+0]
   \       0x36   0x0004             MOVS     R4,R0
   \                     ??PlatformMgrInternalGet_1: (+1)
   \       0x38   0x2C00             CMP      R4,#+0
   \       0x3A   0xD014             BEQ.N    ??PlatformMgrInternalGet_0
    457                ret_val = predicate_fnct(p_list_adapt_iter->ItemPtr, p_predicate_data);
   \       0x3C   0x0031             MOVS     R1,R6
   \       0x3E   0x6860             LDR      R0,[R4, #+4]
   \       0x40   0x47A8             BLX      R5
   \       0x42   0x4683             MOV      R11,R0
    458                if (ret_val == DEF_YES) {
   \       0x44   0x4658             MOV      R0,R11
   \       0x46   0xB2C0             UXTB     R0,R0
   \       0x48   0x2801             CMP      R0,#+1
   \       0x4A   0xD10A             BNE.N    ??PlatformMgrInternalGet_2
    459                  RTOS_ERR_SET(*p_err, RTOS_ERR_NONE);
   \       0x4C   0x2000             MOVS     R0,#+0
   \       0x4E   0x7038             STRB     R0,[R7, #+0]
   \       0x50   0xF8C7 0x9004      STR      R9,[R7, #+4]
   \       0x54   0xF240 0x10CB      MOVW     R0,#+459
   \       0x58   0x60B8             STR      R0,[R7, #+8]
   \       0x5A   0xF8C7 0xA00C      STR      R10,[R7, #+12]
    460                  p_list_adapt = p_list_adapt_iter;
   \       0x5E   0x46A0             MOV      R8,R4
    461                  break;
   \       0x60   0xE001             B.N      ??PlatformMgrInternalGet_0
    462                }
    463              }
   \                     ??PlatformMgrInternalGet_2: (+1)
   \       0x62   0x6824             LDR      R4,[R4, #+0]
   \       0x64   0xE7E8             B.N      ??PlatformMgrInternalGet_1
    464            }
    465          
    466            return (p_list_adapt);
   \                     ??PlatformMgrInternalGet_0: (+1)
   \       0x66   0x4640             MOV      R0,R8
   \       0x68   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}
    467          }
    468          
    469          /****************************************************************************************************//**
    470           *                                       PlatformMgrGetByNamePredicate()
    471           *
    472           * @brief    Predicate function to obtain a platform manager item based on its string ID.
    473           *
    474           * @param    p_item              Pointer to item that needs to be evaluated.
    475           *
    476           * @param    p_predicate_data    Pointer to predicate data argument provided by caller, in this case,
    477           *                               the string ID of the item to match.
    478           *
    479           * @return   DEF_YES, if the item is the one that should be used,
    480           *           DEF_NO, otherwise.
    481           *******************************************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    482          static CPU_BOOLEAN PlatformMgrGetByNamePredicate(const PLATFORM_MGR_ITEM *p_item,
    483                                                           void                    *p_predicate_data)
    484          {
   \                     PlatformMgrGetByNamePredicate: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    485            CPU_CHAR    *id_str = (CPU_CHAR *)p_predicate_data;
   \        0x6   0x002E             MOVS     R6,R5
    486            CPU_BOOLEAN ret_val = DEF_NO;
   \        0x8   0x2700             MOVS     R7,#+0
    487          
    488            if (Str_Cmp_N(p_item->StrID, id_str, DEF_INT_08U_MAX_VAL) == 0) {
   \        0xA   0x22FF             MOVS     R2,#+255
   \        0xC   0x0031             MOVS     R1,R6
   \        0xE   0x6860             LDR      R0,[R4, #+4]
   \       0x10   0x.... 0x....      BL       Str_Cmp_N
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD101             BNE.N    ??PlatformMgrGetByNamePredicate_0
    489              ret_val = DEF_YES;
   \       0x18   0x2001             MOVS     R0,#+1
   \       0x1A   0x0007             MOVS     R7,R0
    490            }
    491          
    492            return (ret_val);
   \                     ??PlatformMgrGetByNamePredicate_0: (+1)
   \       0x1C   0x0038             MOVS     R0,R7
   \       0x1E   0xB2C0             UXTB     R0,R0
   \       0x20   0xBDF2             POP      {R1,R4-R7,PC}
    493          }
    494          
    495          /****************************************************************************************************//**
    496           *                                   PlatformMgrGetByItemPtrPredicate()
    497           *
    498           * @brief    Predicate function to obtain a platform manager item based on its item pointer.
    499           *
    500           * @param    p_item              Pointer to item that needs to be evaluated.
    501           *
    502           * @param    p_predicate_data    Pointer to predicate data argument provided by caller, in this case,
    503           *                               the item pointer to match.
    504           *
    505           * @return   DEF_YES, if the item is the one that should be used,
    506           *           DEF_NO, otherwise.
    507           *******************************************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    508          static CPU_BOOLEAN PlatformMgrGetByItemPtrPredicate(const PLATFORM_MGR_ITEM *p_item,
    509                                                              void                    *p_predicate_data)
    510          {
   \                     PlatformMgrGetByItemPtrPredicate: (+1)
   \        0x0   0xB410             PUSH     {R4}
   \        0x2   0x0004             MOVS     R4,R0
    511            PLATFORM_MGR_ITEM *p_item_to_find = (PLATFORM_MGR_ITEM *)p_predicate_data;
   \        0x4   0x000A             MOVS     R2,R1
    512            CPU_BOOLEAN       ret_val = DEF_NO;
   \        0x6   0x2000             MOVS     R0,#+0
    513          
    514            if (p_item_to_find == p_item) {
   \        0x8   0x42A2             CMP      R2,R4
   \        0xA   0xD101             BNE.N    ??PlatformMgrGetByItemPtrPredicate_0
    515              ret_val = DEF_YES;
   \        0xC   0x2301             MOVS     R3,#+1
   \        0xE   0x0018             MOVS     R0,R3
    516            }
    517          
    518            return (ret_val);
   \                     ??PlatformMgrGetByItemPtrPredicate_0: (+1)
   \       0x10   0xB2C0             UXTB     R0,R0
   \       0x12   0xBC10             POP      {R4}
   \       0x14   0x4770             BX       LR
    519          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \        0x0   0x....'....        DC32     PlatformMgrPtr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \        0x0   0x....'....        DC32     PlatformMgr_InitCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \        0x0   0x....'....        DC32     `PlatformMgrItemGetByName::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \        0x0   0x....'....        DC32     `PlatformMgrInit::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \        0x0   0x....'....        DC32     `PlatformMgrItemAlloc::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \        0x0   0x....'....        DC32     `PlatformMgrItemAdd::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \        0x0   0x....'....        DC32     `PlatformMgrItemGet::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \        0x0   0x....'....        DC32     `PlatformMgrItemRem::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \        0x0   0x....'....        DC32     `PlatformMgrInternalGet::__func__`

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x44 0x3A          DC8 0x44, 0x3A, 0x5C, 0x49, 0x6E, 0x65, 0x73, 0x68
   \              0x5C 0x49    
   \              0x6E 0x65    
   \              0x73 0x68
   \        0x8   0x5F 0x77          DC8 0x5F, 0x77, 0x69, 0x73, 0x75, 0x6E, 0x5C, 0x57
   \              0x69 0x73    
   \              0x75 0x6E    
   \              0x5C 0x57
   \       0x10   0x69 0x73          DC8 0x69, 0x73, 0x75, 0x6E, 0x5F, 0x4E, 0x6F, 0x64
   \              0x75 0x6E    
   \              0x5F 0x4E    
   \              0x6F 0x64
   \       0x18   0x65 0x5F          DC8 0x65, 0x5F, 0x41, 0x70, 0x70, 0x20, 0x31, 0x5C
   \              0x41 0x70    
   \              0x70 0x20    
   \              0x31 0x5C
   \       0x20   0x57 0x69          DC8 0x57, 0x69, 0x73, 0x75, 0x6E, 0x5F, 0x4E, 0x6F
   \              0x73 0x75    
   \              0x6E 0x5F    
   \              0x4E 0x6F
   \       0x28   0x64 0x65          DC8 0x64, 0x65, 0x5F, 0x41, 0x70, 0x70, 0x5C, 0x67
   \              0x5F 0x41    
   \              0x70 0x70    
   \              0x5C 0x67
   \       0x30   0x65 0x63          DC8 0x65, 0x63, 0x6B, 0x6F, 0x5F, 0x73, 0x64, 0x6B
   \              0x6B 0x6F    
   \              0x5F 0x73    
   \              0x64 0x6B
   \       0x38   0x5F 0x34          DC8 0x5F, 0x34, 0x2E, 0x34, 0x2E, 0x35, 0x5C, 0x70
   \              0x2E 0x34    
   \              0x2E 0x35    
   \              0x5C 0x70
   \       0x40   0x6C 0x61          DC8 0x6C, 0x61, 0x74, 0x66, 0x6F, 0x72, 0x6D, 0x5C
   \              0x74 0x66    
   \              0x6F 0x72    
   \              0x6D 0x5C
   \       0x48   0x6D 0x69          DC8 0x6D, 0x69, 0x63, 0x72, 0x69, 0x75, 0x6D, 0x5F
   \              0x63 0x72    
   \              0x69 0x75    
   \              0x6D 0x5F
   \       0x50   0x6F 0x73          DC8 0x6F, 0x73, 0x5C, 0x63, 0x6F, 0x6D, 0x6D, 0x6F
   \              0x5C 0x63    
   \              0x6F 0x6D    
   \              0x6D 0x6F
   \       0x58   0x6E 0x5C          DC8 0x6E, 0x5C, 0x73, 0x6F, 0x75, 0x72, 0x63, 0x65
   \              0x73 0x6F    
   \              0x75 0x72    
   \              0x63 0x65
   \       0x60   0x5C 0x70          DC8 0x5C, 0x70, 0x6C, 0x61, 0x74, 0x66, 0x6F, 0x72
   \              0x6C 0x61    
   \              0x74 0x66    
   \              0x6F 0x72
   \       0x68   0x6D 0x5F          DC8 0x6D, 0x5F, 0x6D, 0x67, 0x72, 0x5C, 0x70, 0x6C
   \              0x6D 0x67    
   \              0x72 0x5C    
   \              0x70 0x6C
   \       0x70   0x61 0x74          DC8 0x61, 0x74, 0x66, 0x6F, 0x72, 0x6D, 0x5F, 0x6D
   \              0x66 0x6F    
   \              0x72 0x6D    
   \              0x5F 0x6D
   \       0x78   0x67 0x72          DC8 0x67, 0x72, 0x2E, 0x63, 0
   \              0x2E 0x63    
   \              0x00
   \       0x7D                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x50 0x6C          DC8 "Platform Mgr - Data"
   \              0x61 0x74    
   \              0x66 0x6F    
   \              0x72 0x6D    
   \              0x20 0x4D    
   \              0x67 0x72    
   \              0x20 0x2D    
   \              0x20 0x44    
   \              0x61 0x74    
   \              0x61 0x00

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x50 0x6C          DC8 "Platform Mgr - Dyn Pool"
   \              0x61 0x74    
   \              0x66 0x6F    
   \              0x72 0x6D    
   \              0x20 0x4D    
   \              0x67 0x72    
   \              0x20 0x2D    
   \              0x20 0x44    
   \              0x79 0x6E    
   \              0x20 0x50    
   \              0x6F 0x6F    
   \              0x6C 0x00

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x50 0x6C          DC8 "Platform Mgr Lock"
   \              0x61 0x74    
   \              0x66 0x6F    
   \              0x72 0x6D    
   \              0x20 0x4D    
   \              0x67 0x72    
   \              0x20 0x4C    
   \              0x6F 0x63    
   \              0x6B 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x48 0x57          DC8 "HW_Info Item"
   \              0x5F 0x49    
   \              0x6E 0x66    
   \              0x6F 0x20    
   \              0x49 0x74    
   \              0x65 0x6D    
   \              0x00
   \        0xD                      DS8 3

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   PlatformMgQtyConfigure
       4   PlatformMgrGetByItemPtrPredicate
      24   PlatformMgrGetByNamePredicate
        24   -> Str_Cmp_N
      56   PlatformMgrInit
        56   -> CPU_SW_Exception
        56   -> Common_MemSegPtrGet
        56   -> KAL_FeatureQuery
        56   -> KAL_LockCreate
        56   -> Mem_DynPoolCreate
        56   -> Mem_SegAlloc
        56   -> SList_Init
      40   PlatformMgrInternalGet
        40   -- Indirect call
      40   PlatformMgrItemAdd
        40   -> CPU_SW_Exception
        40   -> KAL_LockAcquire
        40   -> KAL_LockRelease
        40   -> Mem_DynPoolBlkGet
        40   -> PlatformMgrInternalGet
        40   -> SList_Push
        40   -> __aeabi_memcpy4
      16   PlatformMgrItemAlloc
        16   -> CPU_SW_Exception
        16   -> Common_MemSegPtrGet
        16   -> Mem_SegAlloc
      48   PlatformMgrItemGet
        48   -> CPU_SW_Exception
        48   -> KAL_LockAcquire
        48   -> KAL_LockRelease
        48   -> PlatformMgrInternalGet
        48   -> __aeabi_memcpy4
      16   PlatformMgrItemGetByName
        16   -> CPU_SW_Exception
        16   -> PlatformMgrItemGet
      24   PlatformMgrItemInitAdd
        24   -> CPU_SW_Exception
        24   -> PlatformMgrItemAdd
      40   PlatformMgrItemRem
        40   -> CPU_SW_Exception
        40   -> KAL_LockAcquire
        40   -> KAL_LockRelease
        40   -> Mem_DynPoolBlkFree
        40   -> PlatformMgrInternalGet
        40   -> SList_Rem


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
     128  ?_0
      20  ?_1
      24  ?_2
      20  ?_3
      16  ?_4
      32  PlatformMgQtyConfigure
      22  PlatformMgrGetByItemPtrPredicate
      34  PlatformMgrGetByNamePredicate
     210  PlatformMgrInit
     108  PlatformMgrInternalGet
     184  PlatformMgrItemAdd
      72  PlatformMgrItemAlloc
     146  PlatformMgrItemGet
      54  PlatformMgrItemGetByName
      26  PlatformMgrItemInitAdd
     140  PlatformMgrItemRem
       4  PlatformMgrPtr
       8  PlatformMgr_InitCfg
       8  PlatformMgr_InitCfgDflt
     152  -- Other

 
     4 bytes in section .bss
     8 bytes in section .data
   368 bytes in section .rodata
 1'084 bytes in section .text
 
 1'084 bytes of CODE  memory
   368 bytes of CONST memory
    12 bytes of DATA  memory

Errors: none
Warnings: none
