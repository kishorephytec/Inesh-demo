###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         29/Mar/2025  15:53:08
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\sl_se_manager_entropy.c
#    Command line      =
#        -f "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\src_10044205007528117694.dir\sl_se_manager_entropy.o.rsp"
#        ("D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\sl_se_manager_entropy.c"
#        -D DEBUG_EFM=1 -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -lC "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\src_10044205007528117694.dir"
#        --diag_suppress Pa050 -o "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\src_10044205007528117694.dir" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M33 --cmse --cmse
#        -e --fpu=VFPv5_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\rail\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\wisun\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\.\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_project_info\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\Core\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\RTOS2\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\device_init\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emlib\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\iostream\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\preset\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\cpu\include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\ports\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\nvm3\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\peripheral\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_psa_driver\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\common\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ble\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ieee802154\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\wmbus\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\zwave\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\chip\efr32\efr32xg2x\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\sidewalk\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\rail_util_pti\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\segger\systemview\SEGGER\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\silicon_labs\silabs_core\memory_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\toolchain\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\system\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ns_list\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ping\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\udp_client\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\sleeptimer\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\plugin\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\socket\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\autogen\\" -On
#        --use_c++_inline) --dependencies=n "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\src_10044205007528117694.dir\sl_se_manager_entropy.o.iar_deps"
#    Locale            =  C
#    List file         =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\src_10044205007528117694.dir\sl_se_manager_entropy.lst
#    Object file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\src_10044205007528117694.dir\sl_se_manager_entropy.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\sl_se_manager_entropy.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Silicon Labs Secure Engine Manager API.
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2020 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * SPDX-License-Identifier: Zlib
     10           *
     11           * The licensor of this software is Silicon Laboratories Inc.
     12           *
     13           * This software is provided 'as-is', without any express or implied
     14           * warranty. In no event will the authors be held liable for any damages
     15           * arising from the use of this software.
     16           *
     17           * Permission is granted to anyone to use this software for any purpose,
     18           * including commercial applications, and to alter it and redistribute it
     19           * freely, subject to the following restrictions:
     20           *
     21           * 1. The origin of this software must not be misrepresented; you must not
     22           *    claim that you wrote the original software. If you use this software
     23           *    in a product, an acknowledgment in the product documentation would be
     24           *    appreciated but is not required.
     25           * 2. Altered source versions must be plainly marked as such, and must not be
     26           *    misrepresented as being the original software.
     27           * 3. This notice may not be removed or altered from any source distribution.
     28           *
     29           ******************************************************************************/
     30          
     31          #include "sl_se_manager.h"
     32          
     33          #if defined(SLI_MAILBOX_COMMAND_SUPPORTED)
     34          
     35          #include "sli_se_manager_internal.h"
     36          #include "em_se.h"
     37          #include <string.h>
     38          
     39          /// @addtogroup sl_se_manager
     40          /// @{
     41          
     42          // -----------------------------------------------------------------------------
     43          // Global Functions
     44          
     45          /***************************************************************************//**
     46           * Get random data from hardware TRNG.
     47           ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
     48          sl_status_t sl_se_get_random(sl_se_command_context_t *cmd_ctx,
     49                                       void * data,
     50                                       uint32_t num_bytes)
     51          {
   \                     sl_se_get_random: (+1)
   \        0x0   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x4   0xB089             SUB      SP,SP,#+36
   \        0x6   0x0005             MOVS     R5,R0
   \        0x8   0x000E             MOVS     R6,R1
     52            SE_Command_t *se_cmd;
     53            sl_status_t ret;
     54            uint32_t surplus_bytes, i;
     55            uint32_t surplus_word = 0;
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0x9001             STR      R0,[SP, #+4]
     56          
     57            if (cmd_ctx == NULL || (num_bytes != 0 && data == NULL)) {
   \        0xE   0x2D00             CMP      R5,#+0
   \       0x10   0xD003             BEQ.N    ??sl_se_get_random_1
   \       0x12   0x2A00             CMP      R2,#+0
   \       0x14   0xD003             BEQ.N    ??sl_se_get_random_2
   \       0x16   0x2E00             CMP      R6,#+0
   \       0x18   0xD101             BNE.N    ??sl_se_get_random_2
     58              return SL_STATUS_INVALID_PARAMETER;
   \                     ??sl_se_get_random_1: (+1)
   \       0x1A   0x2021             MOVS     R0,#+33
   \       0x1C   0xE072             B.N      ??sl_se_get_random_3
     59            }
     60          
     61            se_cmd = &cmd_ctx->command;
   \                     ??sl_se_get_random_2: (+1)
   \       0x1E   0x9500             STR      R5,[SP, #+0]
     62            surplus_bytes = num_bytes & 0x3U;
   \       0x20   0xF012 0x0703      ANDS     R7,R2,#0x3
     63            num_bytes &= ~0x3U;
   \       0x24   0x0892             LSRS     R2,R2,#+2
   \       0x26   0x0092             LSLS     R2,R2,#+2
   \       0x28   0x0014             MOVS     R4,R2
     64          
     65            if (num_bytes > 0U) {
   \       0x2A   0x2C00             CMP      R4,#+0
   \       0x2C   0xD02B             BEQ.N    ??sl_se_get_random_4
     66              sli_se_command_init(cmd_ctx, SLI_SE_COMMAND_TRNG_GET_RANDOM);
   \       0x2E   0xF05F 0x60E0      MOVS     R0,#+117440512
   \       0x32   0x6028             STR      R0,[R5, #+0]
   \       0x34   0x2000             MOVS     R0,#+0
   \       0x36   0x6068             STR      R0,[R5, #+4]
   \       0x38   0x2000             MOVS     R0,#+0
   \       0x3A   0x60A8             STR      R0,[R5, #+8]
   \       0x3C   0x2000             MOVS     R0,#+0
   \       0x3E   0x61E8             STR      R0,[R5, #+28]
     67              SE_DataTransfer_t data_out = SE_DATATRANSFER_DEFAULT(data, num_bytes);
   \       0x40   0xAB03             ADD      R3,SP,#+12
   \       0x42   0x4832             LDR.N    R0,??sl_se_get_random_0
   \       0x44   0xE890 0x1006      LDM      R0,{R1,R2,R12}
   \       0x48   0xE883 0x1006      STM      R3,{R1,R2,R12}
   \       0x4C   0x9603             STR      R6,[SP, #+12]
   \       0x4E   0xF054 0x5000      ORRS     R0,R4,#0x20000000
   \       0x52   0x9005             STR      R0,[SP, #+20]
     68          
     69              SE_addDataOutput(se_cmd, &data_out);
   \       0x54   0xA903             ADD      R1,SP,#+12
   \       0x56   0x9800             LDR      R0,[SP, #+0]
   \       0x58   0x.... 0x....      BL       SE_addDataOutput
     70              SE_addParameter(se_cmd, num_bytes);
   \       0x5C   0x0021             MOVS     R1,R4
   \       0x5E   0x9800             LDR      R0,[SP, #+0]
   \       0x60   0x.... 0x....      BL       SE_addParameter
     71          
     72              // Execute and wait
     73              if ((ret = sli_se_execute_and_wait(cmd_ctx)) != SL_STATUS_OK) {
   \       0x64   0x0028             MOVS     R0,R5
   \       0x66   0x.... 0x....      BL       sli_se_execute_and_wait
   \       0x6A   0x4680             MOV      R8,R0
   \       0x6C   0x2800             CMP      R0,#+0
   \       0x6E   0xD00A             BEQ.N    ??sl_se_get_random_4
     74                memset(data, 0, num_bytes);
   \       0x70   0x9402             STR      R4,[SP, #+8]
   \       0x72   0xF05F 0x0B00      MOVS     R11,#+0
   \       0x76   0x46B2             MOV      R10,R6
   \       0x78   0x465A             MOV      R2,R11
   \       0x7A   0x9902             LDR      R1,[SP, #+8]
   \       0x7C   0x4650             MOV      R0,R10
   \       0x7E   0x.... 0x....      BL       __aeabi_memset
     75                return ret;
   \       0x82   0x4640             MOV      R0,R8
   \       0x84   0xE03E             B.N      ??sl_se_get_random_3
     76              }
     77            }
     78          
     79            if (surplus_bytes > 0) {
   \                     ??sl_se_get_random_4: (+1)
   \       0x86   0x2F00             CMP      R7,#+0
   \       0x88   0xD03B             BEQ.N    ??sl_se_get_random_5
     80              sli_se_command_init(cmd_ctx, SLI_SE_COMMAND_TRNG_GET_RANDOM);
   \       0x8A   0xF05F 0x60E0      MOVS     R0,#+117440512
   \       0x8E   0x6028             STR      R0,[R5, #+0]
   \       0x90   0x2000             MOVS     R0,#+0
   \       0x92   0x6068             STR      R0,[R5, #+4]
   \       0x94   0x2000             MOVS     R0,#+0
   \       0x96   0x60A8             STR      R0,[R5, #+8]
   \       0x98   0x2000             MOVS     R0,#+0
   \       0x9A   0x61E8             STR      R0,[R5, #+28]
     81              SE_DataTransfer_t data_out = SE_DATATRANSFER_DEFAULT(&surplus_word, 4);
   \       0x9C   0xAB06             ADD      R3,SP,#+24
   \       0x9E   0xF8DF 0xC070      LDR.W    R12,??sl_se_get_random_0+4
   \       0xA2   0xE89C 0x0007      LDM      R12,{R0-R2}
   \       0xA6   0xE883 0x0007      STM      R3,{R0-R2}
   \       0xAA   0xA801             ADD      R0,SP,#+4
   \       0xAC   0x9006             STR      R0,[SP, #+24]
     82          
     83              SE_addDataOutput(se_cmd, &data_out);
   \       0xAE   0xA906             ADD      R1,SP,#+24
   \       0xB0   0x9800             LDR      R0,[SP, #+0]
   \       0xB2   0x.... 0x....      BL       SE_addDataOutput
     84              SE_addParameter(se_cmd, 4);
   \       0xB6   0x2104             MOVS     R1,#+4
   \       0xB8   0x9800             LDR      R0,[SP, #+0]
   \       0xBA   0x.... 0x....      BL       SE_addParameter
     85          
     86              // Execute and wait
     87              if ((ret = sli_se_execute_and_wait(cmd_ctx)) != SL_STATUS_OK) {
   \       0xBE   0x0028             MOVS     R0,R5
   \       0xC0   0x.... 0x....      BL       sli_se_execute_and_wait
   \       0xC4   0x4680             MOV      R8,R0
   \       0xC6   0x2800             CMP      R0,#+0
   \       0xC8   0xD00B             BEQ.N    ??sl_se_get_random_6
     88                memset(data, 0, num_bytes + surplus_bytes);
   \       0xCA   0x1938             ADDS     R0,R7,R4
   \       0xCC   0x9002             STR      R0,[SP, #+8]
   \       0xCE   0xF05F 0x0B00      MOVS     R11,#+0
   \       0xD2   0x46B2             MOV      R10,R6
   \       0xD4   0x465A             MOV      R2,R11
   \       0xD6   0x9902             LDR      R1,[SP, #+8]
   \       0xD8   0x4650             MOV      R0,R10
   \       0xDA   0x.... 0x....      BL       __aeabi_memset
     89                return ret;
   \       0xDE   0x4640             MOV      R0,R8
   \       0xE0   0xE010             B.N      ??sl_se_get_random_3
     90              }
     91          
     92              uint8_t *output = (uint8_t*)data + num_bytes;
   \                     ??sl_se_get_random_6: (+1)
   \       0xE2   0xEB06 0x0004      ADD      R0,R6,R4
     93              for (i = 0; i < surplus_bytes; i++) {
   \       0xE6   0x2100             MOVS     R1,#+0
   \       0xE8   0x4689             MOV      R9,R1
   \                     ??sl_se_get_random_7: (+1)
   \       0xEA   0x45B9             CMP      R9,R7
   \       0xEC   0xD209             BCS.N    ??sl_se_get_random_5
     94                output[i] = (surplus_word >> (i * 8U)) & 0xFFU;
   \       0xEE   0x9901             LDR      R1,[SP, #+4]
   \       0xF0   0x464A             MOV      R2,R9
   \       0xF2   0xB2D2             UXTB     R2,R2
   \       0xF4   0x00D2             LSLS     R2,R2,#+3
   \       0xF6   0x40D1             LSRS     R1,R1,R2
   \       0xF8   0xF800 0x1009      STRB     R1,[R0, R9]
     95              }
   \       0xFC   0xF119 0x0901      ADDS     R9,R9,#+1
   \      0x100   0xE7F3             B.N      ??sl_se_get_random_7
     96            }
     97          
     98            return SL_STATUS_OK;
   \                     ??sl_se_get_random_5: (+1)
   \      0x102   0x2000             MOVS     R0,#+0
   \                     ??sl_se_get_random_3: (+1)
   \      0x104   0xB009             ADD      SP,SP,#+36
   \      0x106   0xE8BD 0x8FF0      POP      {R4-R11,PC}
   \      0x10A   0xBF00             Nop
   \                     ??sl_se_get_random_0:
   \      0x10C   0x....'....        DC32     ?_0
   \      0x110   0x....'....        DC32     ?_1
     99          }

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x0000'0000        DC32 0x0, 0x1, 0
   \              0x0000'0001  
   \              0x0000'0000

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x0000'0000        DC32 0x0, 0x1, 536'870'916
   \              0x0000'0001  
   \              0x2000'0004
    100          
    101          /** @} (end addtogroup sl_se) */
    102          
    103          #endif // defined(SLI_MAILBOX_COMMAND_SUPPORTED)

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      72   sl_se_get_random
        72   -> SE_addDataOutput
        72   -> SE_addParameter
        72   -> __aeabi_memset
        72   -> sli_se_execute_and_wait


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?_0
      12  ?_1
     276  sl_se_get_random

 
  24 bytes in section .rodata
 276 bytes in section .text
 
 276 bytes of CODE  memory
  24 bytes of CONST memory

Errors: none
Warnings: none
