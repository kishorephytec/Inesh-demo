###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         07/Apr/2025  16:44:50
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode                 =  thumb
#    Endian                   =  little
#    Source file              =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\sl_wisun_app_setting.c
#    Command line             =
#        -f "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\app_setting_5891890016616573684.dir\sl_wisun_app_setting.o.rsp"
#        ("D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\sl_wisun_app_setting.c"
#        -D DEBUG_EFM=1 -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -lC "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\app_setting_5891890016616573684.dir"
#        --diag_suppress Pa050 -o "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\app_setting_5891890016616573684.dir"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse --cmse -e --fpu=VFPv5_sp --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\rail\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\wisun\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\.\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_project_info\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\Core\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\RTOS2\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\device_init\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emlib\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\iostream\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\preset\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\cpu\include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\ports\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\nvm3\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\peripheral\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_psa_driver\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\common\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ble\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ieee802154\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\wmbus\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\zwave\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\chip\efr32\efr32xg2x\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\sidewalk\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\rail_util_pti\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\segger\systemview\SEGGER\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\silicon_labs\silabs_core\memory_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\toolchain\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\system\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ns_list\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ping\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\udp_client\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\sleeptimer\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\plugin\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\socket\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\autogen\\" -On
#        --use_c++_inline) --dependencies=n "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\app_setting_5891890016616573684.dir\sl_wisun_app_setting.o.iar_deps"
#    Locale                   =  C
#    List file                =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\app_setting_5891890016616573684.dir\sl_wisun_app_setting.lst
#    Object file              =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\app_setting_5891890016616573684.dir\sl_wisun_app_setting.o
#    Runtime model:              
#      __CPP_Runtime          =  1
#      __SystemLibrary        =  DLib
#      __dlib_file_descriptor =  0
#      __dlib_version         =  6
#      __iar_require _Printf     
#
###############################################################################

D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\sl_wisun_app_setting.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2021 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * SPDX-License-Identifier: Zlib
     10           *
     11           * The licensor of this software is Silicon Laboratories Inc.
     12           *
     13           * This software is provided 'as-is', without any express or implied
     14           * warranty. In no event will the authors be held liable for any damages
     15           * arising from the use of this software.
     16           *
     17           * Permission is granted to anyone to use this software for any purpose,
     18           * including commercial applications, and to alter it and redistribute it
     19           * freely, subject to the following restrictions:
     20           *
     21           * 1. The origin of this software must not be misrepresented; you must not
     22           *    claim that you wrote the original software. If you use this software
     23           *    in a product, an acknowledgment in the product documentation would be
     24           *    appreciated but is not required.
     25           * 2. Altered source versions must be plainly marked as such, and must not be
     26           *    misrepresented as being the original software.
     27           * 3. This notice may not be removed or altered from any source distribution.
     28           *
     29           ******************************************************************************/
     30          
     31          // -----------------------------------------------------------------------------
     32          //                                   Includes
     33          // -----------------------------------------------------------------------------
     34          
     35          #include <stddef.h>
     36          #include <string.h>
     37          #include <assert.h>
     38          #include "sl_status.h"
     39          #include "sl_string.h"
     40          #include "cmsis_os2.h"
     41          #include "sl_cmsis_os2_common.h"
     42          #include "sl_wisun_api.h"
     43          #include "sl_wisun_cli_settings.h"
     44          #include "sl_wisun_app_setting.h"
     45          #include "sl_wisun_trace_util.h"
     46          
     47          // -----------------------------------------------------------------------------
     48          //                              Macros and Typedefs
     49          // -----------------------------------------------------------------------------
     50          
     51          /// Settings notification error bit
     52          #define APP_SETTINGS_NOTIFICATION_ERROR_FLAG_BIT    31U
     53          
     54          /// Settings notification error flag mask
     55          #define APP_SETTINGS_NOTIFICATION_ERROR_FLAG_MSK    (1U << APP_SETTINGS_NOTIFICATION_ERROR_FLAG_BIT)
     56          
     57          /// Default Network name for initialization
     58          #define APP_SETTINGS_DEFAULT_NETWORK_NAME           "Wi-SUN Network"
     59          
     60          /// Setting notification descriptor
     61          typedef struct app_setting_notif_dsc {
     62            /// Event ID
     63            osEventFlagsId_t evt_id;
     64            /// Notification type
     65            app_setting_notification_t type;
     66            /// Subscribed channels
     67            uint32_t subscribed_chs;
     68          } app_setting_notif_dsc_t;
     69          
     70          /// Count of available notifications
     71          #define APP_SETTINGS_NOTIFICATION_COUNT             4UL
     72          
     73          // -----------------------------------------------------------------------------
     74          //                          Static Function Declarations
     75          // -----------------------------------------------------------------------------
     76          
     77          /**************************************************************************//**
     78           * @brief Acquire application mutex
     79           * @details Internal mutex lock
     80           *****************************************************************************/
     81          __STATIC_INLINE void _app_wisun_mutex_acquire(void);
     82          
     83          /**************************************************************************//**
     84           * @brief Release application mutex
     85           * @details Internal mutex release
     86           *****************************************************************************/
     87          __STATIC_INLINE void _app_wisun_mutex_release(void);
     88          
     89          /**************************************************************************//**
     90           * @brief Helper function for checking the name of the Wi-SUN network
     91           * @param [in] *name is the network name that are wanted to check
     92           * @param [out] *name_len is the length of the name that calculated by the function.
     93           * @return char* const char pointer that points to checked name or to the default
     94           *          one if the checked one is incorrect.
     95           *****************************************************************************/
     96          static const char* _app_check_nw_name(const char *name, size_t *const name_len);
     97          
     98          /**************************************************************************//**
     99           * @brief Get notification entry from table
    100           * @details Helper function
    101           * @param[in] type Notification type
    102           * @return app_setting_notif_dsc_t* Notification entry on success or NULL on error
    103           *****************************************************************************/
    104          static app_setting_notif_dsc_t *_get_notification_entry(app_setting_notification_t type);
    105          
    106          /**************************************************************************//**
    107           * @brief App setting notify
    108           * @details Notify subsribed channels about settings calls
    109           * @param[in] notif Notification type
    110           * @return sl_status_t SL_STATUS_OK on success, otherwise SL_STATUS_FAIL
    111           *****************************************************************************/
    112          static sl_status_t _setting_notify(app_setting_notification_t notif);
    113          
    114          // -----------------------------------------------------------------------------
    115          //                                Static Variables
    116          // -----------------------------------------------------------------------------
    117          
    118          /// App settings mutex

   \                                 In section .bss, align 4
    119          static osMutexId_t _app_wisun_setting_mtx;
   \                     _app_wisun_setting_mtx:
   \        0x0                      DS8 4
    120          
    121          ///  App settings mutex attribute

   \                                 In section .rodata, align 4
    122          static const osMutexAttr_t _app_wisun_setting_mtx_attr = {
   \                     _app_wisun_setting_mtx_attr:
   \        0x0   0x....'....        DC32 ?_0, 1, 0x0, 0
   \              0x0000'0001  
   \              0x0000'0000  
   \              0x0000'0000
    123            .name      = "AppWisunSettingMutex",
    124            .attr_bits = osMutexRecursive,
    125            .cb_mem    = NULL,
    126            .cb_size   = 0
    127          };
    128          
    129          /// Settings event flags attributes

   \                                 In section .rodata, align 4
    130          static const osEventFlagsAttr_t _wisun_setting_evt_attr = {
   \                     _wisun_setting_evt_attr:
   \        0x0   0x....'....        DC32 ?_1, 0, 0x0, 0
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000
    131            .name      = "AppWisunSettingEvtFlags",
    132            .attr_bits = 0,
    133            .cb_mem    = NULL,
    134            .cb_size   = 0
    135          };
    136          
    137          /// Wi-SUN application settings

   \                                 In section .bss, align 4
    138          static app_setting_wisun_t _wisun_app_settings = { 0 };
   \                     _wisun_app_settings:
   \        0x0                      DS8 56
    139          
    140          /// Default settings structure

   \                                 In section .rodata, align 4
    141          static const app_setting_wisun_t wisun_app_settings_default = {
   \                     wisun_app_settings_default:
   \        0x0   0x49 0x6E          DC8 "Inesh_1"
   \              0x65 0x73    
   \              0x68 0x5F    
   \              0x31 0x00
   \        0x8                      DS8 25
   \       0x21   0x01 0x14          DC8 1, 20, 0, 0, 1
   \              0x00 0x00    
   \              0x01
   \       0x26   0x0000'0000        DC32 0
   \       0x2A   0x05 0x02          DC8 5, 2, 3
   \              0x03
   \       0x2D                      DS8 1
   \       0x2E                      DS8 8
   \       0x36                      DS8 2
    142          #if defined(WISUN_CONFIG_NETWORK_NAME)
    143            .network_name = WISUN_CONFIG_NETWORK_NAME,
    144          #else
    145            .network_name = APP_SETTINGS_DEFAULT_NETWORK_NAME,
    146          #endif
    147          #if defined(WISUN_CONFIG_NETWORK_SIZE)
    148            .network_size = WISUN_CONFIG_NETWORK_SIZE,
    149          #else
    150            .network_size = SL_WISUN_NETWORK_SIZE_SMALL,
    151          #endif
    152          #if defined(WISUN_CONFIG_TX_POWER)
    153            .tx_power = WISUN_CONFIG_TX_POWER,
    154          #else
    155            .tx_power = 20U,
    156          #endif
    157            .is_default_phy = true,
    158          #if defined(WISUN_CONFIG_DEVICE_TYPE)
    159            .device_type = WISUN_CONFIG_DEVICE_TYPE,
    160          #else
    161            .device_type = SL_WISUN_ROUTER,
    162          #endif
    163          #if defined(WISUN_CONFIG_DEVICE_PROFILE)
    164            .lfn_profile = WISUN_CONFIG_DEVICE_PROFILE,
    165          #else
    166            .lfn_profile = SL_WISUN_LFN_PROFILE_TEST,
    167          #endif
    168          #if defined(WISUN_CONFIG_DEFAULT_PHY_FAN10)
    169            .phy = {
    170              .type = SL_WISUN_PHY_CONFIG_FAN10,
    171              .config.fan10.reg_domain = WISUN_CONFIG_REGULATORY_DOMAIN,
    172              .config.fan10.op_class = WISUN_CONFIG_OPERATING_CLASS,
    173              .config.fan10.op_mode = WISUN_CONFIG_OPERATING_MODE,
    174            },
    175          #elif defined(WISUN_CONFIG_DEFAULT_PHY_FAN11)
    176            .phy = {
    177              .type = SL_WISUN_PHY_CONFIG_FAN11,
    178              .config.fan11.reg_domain = WISUN_CONFIG_REGULATORY_DOMAIN,
    179              .config.fan11.chan_plan_id = WISUN_CONFIG_CHANNEL_PLAN_ID,
    180              .config.fan11.phy_mode_id = WISUN_CONFIG_PHY_MODE_ID,
    181            },
    182          #else
    183            .phy = { 0 },
    184          #endif
    185          };
    186          
    187          /// Notifications

   \                                 In section .data, align 4
    188          static app_setting_notif_dsc_t _notifications[APP_SETTINGS_NOTIFICATION_COUNT] = {
   \                     _notifications:
   \        0x0   0x0000'0000        DC32 0x0
   \        0x4   0x00               DC8 0
   \        0x5                      DS8 3
   \        0x8   0x0000'0001        DC32 1, 0x0
   \              0x0000'0000
   \       0x10   0x01               DC8 1
   \       0x11                      DS8 3
   \       0x14   0x0000'0001        DC32 1, 0x0
   \              0x0000'0000
   \       0x1C   0x02               DC8 2
   \       0x1D                      DS8 3
   \       0x20   0x0000'0001        DC32 1, 0x0
   \              0x0000'0000
   \       0x28   0x03               DC8 3
   \       0x29                      DS8 3
   \       0x2C   0x0000'0001        DC32 1
    189            {
    190              .type = APP_SETTING_NOTIFICATION_SET_NETWORK_NAME,
    191              .evt_id = NULL,
    192              .subscribed_chs = (1U << APP_SETTING_DEFAULT_SUBSCRIPT_CH),
    193            },
    194            {
    195              .type = APP_SETTING_NOTIFICATION_SET_NETWORK_SIZE,
    196              .evt_id = NULL,
    197              .subscribed_chs = (1U << APP_SETTING_DEFAULT_SUBSCRIPT_CH),
    198            },
    199            {
    200              .type = APP_SETTING_NOTIFICATION_SET_TX_POWER,
    201              .evt_id = NULL,
    202              .subscribed_chs = (1U << APP_SETTING_DEFAULT_SUBSCRIPT_CH),
    203            },
    204            {
    205              .type = APP_SETTING_NOTIFICATION_SET_PHY_CFG,
    206              .evt_id = NULL,
    207              .subscribed_chs = (1U << APP_SETTING_DEFAULT_SUBSCRIPT_CH),
    208            }
    209          };
    210          
    211          // -----------------------------------------------------------------------------
    212          //                                Global Variables
    213          // -----------------------------------------------------------------------------
    214          
    215          ///  Wi-SUN application network saving settings

   \                                 In section .rodata, align 4
    216          const app_saving_item_t network_saving_settings = {
   \                     network_saving_settings:
   \        0x0   0x....'....        DC32 _wisun_app_settings, 54, wisun_app_settings_default
   \              0x0000'0036  
   \              0x....'....
    217            .data = &_wisun_app_settings,
    218            .data_size = sizeof(_wisun_app_settings),
    219            .default_val = &wisun_app_settings_default
    220          };
    221          
    222          /// Wi-SUN application all saved data

   \                                 In section .data, align 4
    223          const app_saving_item_t *saving_settings[] = {
   \                     saving_settings:
   \        0x0   0x....'....        DC32 network_saving_settings, 0x0
   \              0x0000'0000
    224            &network_saving_settings,
    225            NULL
    226          };
    227          
    228          // -----------------------------------------------------------------------------
    229          //                          Public Function Definitions
    230          // -----------------------------------------------------------------------------
    231          
    232          /* Initialization of Wi-SUN setting */

   \                                 In section .text, align 2, keep-with-next
    233          void app_wisun_setting_init(void)
    234          {
   \                     app_wisun_setting_init: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
    235            // init wisun settings mutex
    236            _app_wisun_setting_mtx = osMutexNew(&_app_wisun_setting_mtx_attr);
   \        0x2   0x.... 0x....      LDR.W    R4,??DataTable14
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \        0xA   0x.... 0x....      BL       osMutexNew
   \        0xE   0x6020             STR      R0,[R4, #+0]
    237            assert(_app_wisun_setting_mtx != NULL);
   \       0x10   0x6820             LDR      R0,[R4, #+0]
   \       0x12   0x2800             CMP      R0,#+0
   \       0x14   0xD108             BNE.N    ??app_wisun_setting_init_0
   \       0x16   0x22ED             MOVS     R2,#+237
   \       0x18   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \       0x1C   0x.... 0x....      LDR.W    R0,??DataTable14_3
   \       0x20   0x.... 0x....      BL       __aeabi_assert
   \       0x24   0x.... 0x....      BL       __iar_EmptyStepPoint
    238          
    239            // init wisun settings event flags
    240            for (size_t idx = 0; idx < APP_SETTINGS_NOTIFICATION_COUNT; ++idx) {
   \                     ??app_wisun_setting_init_0: (+1)
   \       0x28   0x2400             MOVS     R4,#+0
   \                     ??app_wisun_setting_init_1: (+1)
   \       0x2A   0x2C04             CMP      R4,#+4
   \       0x2C   0xD219             BCS.N    ??app_wisun_setting_init_2
    241              _notifications[idx].evt_id = osEventFlagsNew(&_wisun_setting_evt_attr);
   \       0x2E   0x250C             MOVS     R5,#+12
   \       0x30   0x.... 0x....      LDR.W    R6,??DataTable14_4
   \       0x34   0x.... 0x....      LDR.W    R0,??DataTable14_5
   \       0x38   0x.... 0x....      BL       osEventFlagsNew
   \       0x3C   0xFB05 0xF104      MUL      R1,R5,R4
   \       0x40   0x5070             STR      R0,[R6, R1]
    242              assert(_notifications[idx].evt_id != NULL);
   \       0x42   0xFB05 0xF504      MUL      R5,R5,R4
   \       0x46   0x5970             LDR      R0,[R6, R5]
   \       0x48   0x2800             CMP      R0,#+0
   \       0x4A   0xD108             BNE.N    ??app_wisun_setting_init_3
   \       0x4C   0x22F2             MOVS     R2,#+242
   \       0x4E   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \       0x52   0x.... 0x....      LDR.W    R0,??DataTable14_6
   \       0x56   0x.... 0x....      BL       __aeabi_assert
   \       0x5A   0x.... 0x....      BL       __iar_EmptyStepPoint
    243            }
   \                     ??app_wisun_setting_init_3: (+1)
   \       0x5E   0x1C64             ADDS     R4,R4,#+1
   \       0x60   0xE7E3             B.N      ??app_wisun_setting_init_1
    244          }
   \                     ??app_wisun_setting_init_2: (+1)
   \       0x62   0xBD70             POP      {R4-R6,PC}
    245          
    246          /* Get setting */

   \                                 In section .text, align 2, keep-with-next
    247          sl_status_t app_wisun_setting_get(app_setting_wisun_t *const wisun_setting)
    248          {
   \                     app_wisun_setting_get: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
    249            sl_status_t res = SL_STATUS_OK;
   \        0x6   0xF05F 0x0800      MOVS     R8,#+0
    250          
    251            if (wisun_setting == NULL) {
   \        0xA   0x2C00             CMP      R4,#+0
   \        0xC   0xD101             BNE.N    ??app_wisun_setting_get_0
    252              return SL_STATUS_INVALID_PARAMETER;
   \        0xE   0x2021             MOVS     R0,#+33
   \       0x10   0xE00D             B.N      ??app_wisun_setting_get_1
    253            }
    254          
    255            // create a deepcopy of setting
    256            _app_wisun_mutex_acquire();
   \                     ??app_wisun_setting_get_0: (+1)
   \       0x12   0x.... 0x....      BL       _app_wisun_mutex_acquire
    257            memcpy(wisun_setting, &_wisun_app_settings, sizeof(app_setting_wisun_t));
   \       0x16   0x2536             MOVS     R5,#+54
   \       0x18   0x.... 0x....      LDR.W    R6,??DataTable14_7
   \       0x1C   0x0027             MOVS     R7,R4
   \       0x1E   0x002A             MOVS     R2,R5
   \       0x20   0x0031             MOVS     R1,R6
   \       0x22   0x0038             MOVS     R0,R7
   \       0x24   0x.... 0x....      BL       __aeabi_memcpy
    258            _app_wisun_mutex_release();
   \       0x28   0x.... 0x....      BL       _app_wisun_mutex_release
    259          
    260            return res;
   \       0x2C   0x4640             MOV      R0,R8
   \                     ??app_wisun_setting_get_1: (+1)
   \       0x2E   0xE8BD 0x81F0      POP      {R4-R8,PC}
    261          }
    262          
    263          /* Setting Wi-SUN network name */

   \                                 In section .text, align 2, keep-with-next
    264          sl_status_t app_wisun_setting_set_network_name(const char *const name)
    265          {
   \                     app_wisun_setting_set_network_name: (+1)
   \        0x0   0xE92D 0x43FE      PUSH     {R1-R9,LR}
   \        0x4   0x0004             MOVS     R4,R0
    266            const char *network_name = NULL;
   \        0x6   0x2700             MOVS     R7,#+0
    267            size_t name_len = 0U;
   \        0x8   0x2000             MOVS     R0,#+0
   \        0xA   0x9000             STR      R0,[SP, #+0]
    268            sl_status_t stat = SL_STATUS_FAIL;
   \        0xC   0x2501             MOVS     R5,#+1
    269          
    270            if (name == NULL) {
   \        0xE   0x2C00             CMP      R4,#+0
   \       0x10   0xD101             BNE.N    ??app_wisun_setting_set_network_name_0
    271              return SL_STATUS_INVALID_PARAMETER;
   \       0x12   0x2021             MOVS     R0,#+33
   \       0x14   0xE023             B.N      ??app_wisun_setting_set_network_name_1
    272            }
    273          
    274            _app_wisun_mutex_acquire();
   \                     ??app_wisun_setting_set_network_name_0: (+1)
   \       0x16   0x.... 0x....      BL       _app_wisun_mutex_acquire
    275            // check the network name, and return checked name.
    276            network_name = _app_check_nw_name(name, &name_len);
   \       0x1A   0x4669             MOV      R1,SP
   \       0x1C   0x0020             MOVS     R0,R4
   \       0x1E   0x.... 0x....      BL       _app_check_nw_name
   \       0x22   0x0006             MOVS     R6,R0
    277          
    278            if (name_len < MAX_SIZE_OF_NETWORK_NAME) {
   \       0x24   0x9800             LDR      R0,[SP, #+0]
   \       0x26   0x2821             CMP      R0,#+33
   \       0x28   0xD216             BCS.N    ??app_wisun_setting_set_network_name_2
    279              memcpy(_wisun_app_settings.network_name, network_name, name_len);
   \       0x2A   0x9800             LDR      R0,[SP, #+0]
   \       0x2C   0x9001             STR      R0,[SP, #+4]
   \       0x2E   0x0037             MOVS     R7,R6
   \       0x30   0x.... 0x....      LDR.W    R8,??DataTable14_7
   \       0x34   0x46C1             MOV      R9,R8
   \       0x36   0x9A01             LDR      R2,[SP, #+4]
   \       0x38   0x0039             MOVS     R1,R7
   \       0x3A   0x4648             MOV      R0,R9
   \       0x3C   0x.... 0x....      BL       __aeabi_memcpy
    280              _wisun_app_settings.network_name[name_len] = 0U;
   \       0x40   0x2100             MOVS     R1,#+0
   \       0x42   0x9800             LDR      R0,[SP, #+0]
   \       0x44   0xF808 0x1000      STRB     R1,[R8, R0]
    281            } else {
    282              _app_wisun_mutex_release();
    283              return SL_STATUS_FAIL;
    284            }
    285          
    286            stat = _setting_notify(APP_SETTING_NOTIFICATION_SET_NETWORK_NAME);
   \       0x48   0x2000             MOVS     R0,#+0
   \       0x4A   0x.... 0x....      BL       _setting_notify
   \       0x4E   0x4680             MOV      R8,R0
    287            _app_wisun_mutex_release();
   \       0x50   0x.... 0x....      BL       _app_wisun_mutex_release
    288          
    289            return stat;
   \       0x54   0x4640             MOV      R0,R8
   \       0x56   0xE002             B.N      ??app_wisun_setting_set_network_name_1
   \                     ??app_wisun_setting_set_network_name_2: (+1)
   \       0x58   0x.... 0x....      BL       _app_wisun_mutex_release
   \       0x5C   0x2001             MOVS     R0,#+1
   \                     ??app_wisun_setting_set_network_name_1: (+1)
   \       0x5E   0xE8BD 0x83FE      POP      {R1-R9,PC}
    290          }
    291          
    292          /* Setting Wi-SUN network size */

   \                                 In section .text, align 2, keep-with-next
    293          sl_status_t app_wisun_setting_set_network_size(const uint8_t *const size)
    294          {
   \                     app_wisun_setting_set_network_size: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
    295            sl_status_t stat = SL_STATUS_FAIL;
   \        0x4   0x2501             MOVS     R5,#+1
    296          
    297            if (size == NULL) {
   \        0x6   0x2C00             CMP      R4,#+0
   \        0x8   0xD101             BNE.N    ??app_wisun_setting_set_network_size_0
    298              return SL_STATUS_INVALID_PARAMETER;
   \        0xA   0x2021             MOVS     R0,#+33
   \        0xC   0xE00D             B.N      ??app_wisun_setting_set_network_size_1
    299            }
    300            _app_wisun_mutex_acquire();
   \                     ??app_wisun_setting_set_network_size_0: (+1)
   \        0xE   0x.... 0x....      BL       _app_wisun_mutex_acquire
    301            _wisun_app_settings.network_size = *size;
   \       0x12   0x7821             LDRB     R1,[R4, #+0]
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable14_7
   \       0x18   0xF880 0x1021      STRB     R1,[R0, #+33]
    302            stat = _setting_notify(APP_SETTING_NOTIFICATION_SET_NETWORK_SIZE);
   \       0x1C   0x2001             MOVS     R0,#+1
   \       0x1E   0x.... 0x....      BL       _setting_notify
   \       0x22   0x0006             MOVS     R6,R0
    303            _app_wisun_mutex_release();
   \       0x24   0x.... 0x....      BL       _app_wisun_mutex_release
    304          
    305            return stat;
   \       0x28   0x0030             MOVS     R0,R6
   \                     ??app_wisun_setting_set_network_size_1: (+1)
   \       0x2A   0xBD70             POP      {R4-R6,PC}
    306          }
    307          
    308          /* Setting Wi-SUN TX power */

   \                                 In section .text, align 2, keep-with-next
    309          sl_status_t app_wisun_setting_set_tx_power(const int8_t *const tx_power)
    310          {
   \                     app_wisun_setting_set_tx_power: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
    311            sl_status_t stat = SL_STATUS_FAIL;
   \        0x4   0x2501             MOVS     R5,#+1
    312          
    313            if (tx_power == NULL) {
   \        0x6   0x2C00             CMP      R4,#+0
   \        0x8   0xD101             BNE.N    ??app_wisun_setting_set_tx_power_0
    314              return SL_STATUS_INVALID_PARAMETER;
   \        0xA   0x2021             MOVS     R0,#+33
   \        0xC   0xE00D             B.N      ??app_wisun_setting_set_tx_power_1
    315            }
    316          
    317            _app_wisun_mutex_acquire();
   \                     ??app_wisun_setting_set_tx_power_0: (+1)
   \        0xE   0x.... 0x....      BL       _app_wisun_mutex_acquire
    318          
    319            _wisun_app_settings.tx_power = *tx_power;
   \       0x12   0x7821             LDRB     R1,[R4, #+0]
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable14_7
   \       0x18   0xF880 0x1022      STRB     R1,[R0, #+34]
    320          
    321            stat = _setting_notify(APP_SETTING_NOTIFICATION_SET_TX_POWER);
   \       0x1C   0x2002             MOVS     R0,#+2
   \       0x1E   0x.... 0x....      BL       _setting_notify
   \       0x22   0x0006             MOVS     R6,R0
    322          
    323            _app_wisun_mutex_release();
   \       0x24   0x.... 0x....      BL       _app_wisun_mutex_release
    324          
    325            return stat;
   \       0x28   0x0030             MOVS     R0,R6
   \                     ??app_wisun_setting_set_tx_power_1: (+1)
   \       0x2A   0xBD70             POP      {R4-R6,PC}
    326          }
    327          
    328          /* Setting Wi-SUN PHY */

   \                                 In section .text, align 2, keep-with-next
    329          sl_status_t app_wisun_setting_set_phy(const sl_wisun_phy_config_t *const phy)
    330          {
   \                     app_wisun_setting_set_phy: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
    331            sl_status_t stat = SL_STATUS_FAIL;
   \        0x6   0x2501             MOVS     R5,#+1
    332          
    333            if (phy == NULL) {
   \        0x8   0x2C00             CMP      R4,#+0
   \        0xA   0xD101             BNE.N    ??app_wisun_setting_set_phy_0
    334              return SL_STATUS_INVALID_PARAMETER;
   \        0xC   0x2021             MOVS     R0,#+33
   \        0xE   0xE015             B.N      ??app_wisun_setting_set_phy_1
    335            }
    336          
    337            _app_wisun_mutex_acquire();
   \                     ??app_wisun_setting_set_phy_0: (+1)
   \       0x10   0x.... 0x....      BL       _app_wisun_mutex_acquire
    338            _wisun_app_settings.is_default_phy = false;
   \       0x14   0x....             LDR.N    R0,??DataTable14_7
   \       0x16   0x2100             MOVS     R1,#+0
   \       0x18   0xF880 0x1025      STRB     R1,[R0, #+37]
    339            memcpy(&_wisun_app_settings.phy, phy, sizeof(sl_wisun_phy_config_t));
   \       0x1C   0x2610             MOVS     R6,#+16
   \       0x1E   0x0027             MOVS     R7,R4
   \       0x20   0xF110 0x0826      ADDS     R8,R0,#+38
   \       0x24   0x0032             MOVS     R2,R6
   \       0x26   0x0039             MOVS     R1,R7
   \       0x28   0x4640             MOV      R0,R8
   \       0x2A   0x.... 0x....      BL       __aeabi_memcpy
    340          
    341            // Set notifiication
    342            stat = _setting_notify(APP_SETTING_NOTIFICATION_SET_PHY_CFG);
   \       0x2E   0x2003             MOVS     R0,#+3
   \       0x30   0x.... 0x....      BL       _setting_notify
   \       0x34   0x4680             MOV      R8,R0
    343          
    344            _app_wisun_mutex_release();
   \       0x36   0x.... 0x....      BL       _app_wisun_mutex_release
    345          
    346            return stat;
   \       0x3A   0x4640             MOV      R0,R8
   \                     ??app_wisun_setting_set_phy_1: (+1)
   \       0x3C   0xE8BD 0x81F0      POP      {R4-R8,PC}
    347          }
    348          
    349          /* Getting network name */

   \                                 In section .text, align 2, keep-with-next
    350          sl_status_t app_wisun_setting_get_network_name(char *const name, uint8_t size)
    351          {
   \                     app_wisun_setting_get_network_name: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x468A             MOV      R10,R1
    352            uint8_t name_len = 0U;
   \        0x8   0x2700             MOVS     R7,#+0
    353          
    354            if ((name == NULL) || (size < MAX_SIZE_OF_NETWORK_NAME)) {
   \        0xA   0x2C00             CMP      R4,#+0
   \        0xC   0xD003             BEQ.N    ??app_wisun_setting_get_network_name_0
   \        0xE   0x4650             MOV      R0,R10
   \       0x10   0xB2C0             UXTB     R0,R0
   \       0x12   0x2821             CMP      R0,#+33
   \       0x14   0xDA01             BGE.N    ??app_wisun_setting_get_network_name_1
    355              return SL_STATUS_INVALID_PARAMETER;
   \                     ??app_wisun_setting_get_network_name_0: (+1)
   \       0x16   0x2021             MOVS     R0,#+33
   \       0x18   0xE021             B.N      ??app_wisun_setting_get_network_name_2
    356            }
    357          
    358            _app_wisun_mutex_acquire();
   \                     ??app_wisun_setting_get_network_name_1: (+1)
   \       0x1A   0x.... 0x....      BL       _app_wisun_mutex_acquire
    359          
    360            name_len = (uint8_t)sl_strlen(_wisun_app_settings.network_name);
   \       0x1E   0x....             LDR.N    R5,??DataTable14_7
   \       0x20   0x0028             MOVS     R0,R5
   \       0x22   0x.... 0x....      BL       sl_strlen
   \       0x26   0x0006             MOVS     R6,R0
    361          
    362            if (name_len < MAX_SIZE_OF_NETWORK_NAME) {
   \       0x28   0x0030             MOVS     R0,R6
   \       0x2A   0xB2C0             UXTB     R0,R0
   \       0x2C   0x2821             CMP      R0,#+33
   \       0x2E   0xDA15             BGE.N    ??app_wisun_setting_get_network_name_3
    363              memset(name, 0U, MAX_SIZE_OF_NETWORK_NAME);
   \       0x30   0x2721             MOVS     R7,#+33
   \       0x32   0xF05F 0x0800      MOVS     R8,#+0
   \       0x36   0x46A1             MOV      R9,R4
   \       0x38   0x4642             MOV      R2,R8
   \       0x3A   0x0039             MOVS     R1,R7
   \       0x3C   0x4648             MOV      R0,R9
   \       0x3E   0x.... 0x....      BL       __aeabi_memset
    364              memcpy(name, _wisun_app_settings.network_name, name_len);
   \       0x42   0x46B1             MOV      R9,R6
   \       0x44   0xFA5F 0xF989      UXTB     R9,R9
   \       0x48   0x46A3             MOV      R11,R4
   \       0x4A   0x464A             MOV      R2,R9
   \       0x4C   0x0029             MOVS     R1,R5
   \       0x4E   0x4658             MOV      R0,R11
   \       0x50   0x.... 0x....      BL       __aeabi_memcpy
    365            } else {
    366              return SL_STATUS_FAIL;
    367            }
    368          
    369            _app_wisun_mutex_release();
   \       0x54   0x.... 0x....      BL       _app_wisun_mutex_release
    370            return SL_STATUS_OK;
   \       0x58   0x2000             MOVS     R0,#+0
   \       0x5A   0xE000             B.N      ??app_wisun_setting_get_network_name_2
   \                     ??app_wisun_setting_get_network_name_3: (+1)
   \       0x5C   0x2001             MOVS     R0,#+1
   \                     ??app_wisun_setting_get_network_name_2: (+1)
   \       0x5E   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}
    371          }
    372          
    373          /* Getting network size */

   \                                 In section .text, align 2, keep-with-next
    374          sl_status_t app_wisun_setting_get_network_size(uint8_t *const size)
    375          {
   \                     app_wisun_setting_get_network_size: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    376            if (size == NULL) {
   \        0x4   0x2C00             CMP      R4,#+0
   \        0x6   0xD101             BNE.N    ??app_wisun_setting_get_network_size_0
    377              return SL_STATUS_INVALID_PARAMETER;
   \        0x8   0x2021             MOVS     R0,#+33
   \        0xA   0xE008             B.N      ??app_wisun_setting_get_network_size_1
    378            }
    379          
    380            _app_wisun_mutex_acquire();
   \                     ??app_wisun_setting_get_network_size_0: (+1)
   \        0xC   0x.... 0x....      BL       _app_wisun_mutex_acquire
    381            *size = _wisun_app_settings.network_size;
   \       0x10   0x....             LDR.N    R0,??DataTable14_7
   \       0x12   0xF890 0x0021      LDRB     R0,[R0, #+33]
   \       0x16   0x7020             STRB     R0,[R4, #+0]
    382            _app_wisun_mutex_release();
   \       0x18   0x.... 0x....      BL       _app_wisun_mutex_release
    383          
    384            return SL_STATUS_OK;
   \       0x1C   0x2000             MOVS     R0,#+0
   \                     ??app_wisun_setting_get_network_size_1: (+1)
   \       0x1E   0xBD10             POP      {R4,PC}
    385          }
    386          
    387          /* Getting TX power */

   \                                 In section .text, align 2, keep-with-next
    388          sl_status_t app_wisun_setting_get_tx_power(int8_t *const tx_power)
    389          {
   \                     app_wisun_setting_get_tx_power: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    390            if (tx_power == NULL) {
   \        0x4   0x2C00             CMP      R4,#+0
   \        0x6   0xD101             BNE.N    ??app_wisun_setting_get_tx_power_0
    391              return SL_STATUS_INVALID_PARAMETER;
   \        0x8   0x2021             MOVS     R0,#+33
   \        0xA   0xE008             B.N      ??app_wisun_setting_get_tx_power_1
    392            }
    393          
    394            _app_wisun_mutex_acquire();
   \                     ??app_wisun_setting_get_tx_power_0: (+1)
   \        0xC   0x.... 0x....      BL       _app_wisun_mutex_acquire
    395            *tx_power = _wisun_app_settings.tx_power;
   \       0x10   0x....             LDR.N    R0,??DataTable14_7
   \       0x12   0xF890 0x0022      LDRB     R0,[R0, #+34]
   \       0x16   0x7020             STRB     R0,[R4, #+0]
    396            _app_wisun_mutex_release();
   \       0x18   0x.... 0x....      BL       _app_wisun_mutex_release
    397          
    398            return SL_STATUS_OK;
   \       0x1C   0x2000             MOVS     R0,#+0
   \                     ??app_wisun_setting_get_tx_power_1: (+1)
   \       0x1E   0xBD10             POP      {R4,PC}
    399          }
    400          
    401          /* Getting PHY */

   \                                 In section .text, align 2, keep-with-next
    402          sl_status_t app_wisun_setting_get_phy(sl_wisun_phy_config_t *const phy)
    403          {
   \                     app_wisun_setting_get_phy: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
    404            if (phy == NULL) {
   \        0x4   0x2C00             CMP      R4,#+0
   \        0x6   0xD101             BNE.N    ??app_wisun_setting_get_phy_0
    405              return SL_STATUS_INVALID_PARAMETER;
   \        0x8   0x2021             MOVS     R0,#+33
   \        0xA   0xE00C             B.N      ??app_wisun_setting_get_phy_1
    406            }
    407          
    408            _app_wisun_mutex_acquire();
   \                     ??app_wisun_setting_get_phy_0: (+1)
   \        0xC   0x.... 0x....      BL       _app_wisun_mutex_acquire
    409            memcpy(phy, &_wisun_app_settings.phy, sizeof(sl_wisun_phy_config_t));
   \       0x10   0x2710             MOVS     R7,#+16
   \       0x12   0x....             LDR.N    R5,??DataTable14_8
   \       0x14   0x0026             MOVS     R6,R4
   \       0x16   0x003A             MOVS     R2,R7
   \       0x18   0x0029             MOVS     R1,R5
   \       0x1A   0x0030             MOVS     R0,R6
   \       0x1C   0x.... 0x....      BL       __aeabi_memcpy
    410            _app_wisun_mutex_release();
   \       0x20   0x.... 0x....      BL       _app_wisun_mutex_release
    411          
    412            return SL_STATUS_OK;
   \       0x24   0x2000             MOVS     R0,#+0
   \                     ??app_wisun_setting_get_phy_1: (+1)
   \       0x26   0xBDF2             POP      {R1,R4-R7,PC}
    413          }
    414          

   \                                 In section .text, align 2, keep-with-next
    415          sl_status_t app_wisun_setting_init_phy_cfg(void)
    416          {
   \                     app_wisun_setting_init_phy_cfg: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
    417            sl_status_t stat = SL_STATUS_OK;
   \        0x2   0x2400             MOVS     R4,#+0
    418          
    419            if (_wisun_app_settings.is_default_phy) {
   \        0x4   0x....             LDR.N    R1,??DataTable14_7
   \        0x6   0xF891 0x0025      LDRB     R0,[R1, #+37]
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD008             BEQ.N    ??app_wisun_setting_init_phy_cfg_0
    420              // Full radio config: create a copy of already prepared phy config with default settings
    421              memcpy(&_wisun_app_settings.phy, &wisun_app_settings_default.phy, sizeof(sl_wisun_phy_config_t));
   \        0xE   0x2510             MOVS     R5,#+16
   \       0x10   0x....             LDR.N    R6,??DataTable14_9
   \       0x12   0xF111 0x0726      ADDS     R7,R1,#+38
   \       0x16   0x002A             MOVS     R2,R5
   \       0x18   0x0031             MOVS     R1,R6
   \       0x1A   0x0038             MOVS     R0,R7
   \       0x1C   0x.... 0x....      BL       __aeabi_memcpy
    422            }
    423          
    424            // Set notifiications
    425            stat  = _setting_notify(APP_SETTING_NOTIFICATION_SET_PHY_CFG);
   \                     ??app_wisun_setting_init_phy_cfg_0: (+1)
   \       0x20   0x2003             MOVS     R0,#+3
   \       0x22   0x.... 0x....      BL       _setting_notify
    426          
    427            return stat;
   \       0x26   0xBDF2             POP      {R1,R4-R7,PC}
    428          }
    429          

   \                                 In section .text, align 2, keep-with-next
    430          sl_status_t app_wisun_setting_subscribe_notification(const app_setting_notification_t type,
    431                                                               uint8_t * const channel)
    432          {
   \                     app_wisun_setting_subscribe_notification: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0006             MOVS     R6,R0
   \        0x6   0x000C             MOVS     R4,R1
    433            sl_status_t stat = SL_STATUS_FAIL;
   \        0x8   0x2701             MOVS     R7,#+1
    434            app_setting_notif_dsc_t *notif = NULL;
   \        0xA   0xF05F 0x0900      MOVS     R9,#+0
    435            uint32_t mask = 0UL;
   \        0xE   0xF05F 0x0800      MOVS     R8,#+0
    436            notif = _get_notification_entry(type);
   \       0x12   0x0030             MOVS     R0,R6
   \       0x14   0xB2C0             UXTB     R0,R0
   \       0x16   0x.... 0x....      BL       _get_notification_entry
   \       0x1A   0x0005             MOVS     R5,R0
    437            if (notif == NULL || channel == NULL) {
   \       0x1C   0x2D00             CMP      R5,#+0
   \       0x1E   0xD001             BEQ.N    ??app_wisun_setting_subscribe_notification_0
   \       0x20   0x2C00             CMP      R4,#+0
   \       0x22   0xD101             BNE.N    ??app_wisun_setting_subscribe_notification_1
    438              return stat;
   \                     ??app_wisun_setting_subscribe_notification_0: (+1)
   \       0x24   0x0038             MOVS     R0,R7
   \       0x26   0xE01E             B.N      ??app_wisun_setting_subscribe_notification_2
    439            }
    440          
    441            _app_wisun_mutex_acquire();
   \                     ??app_wisun_setting_subscribe_notification_1: (+1)
   \       0x28   0x.... 0x....      BL       _app_wisun_mutex_acquire
    442            for (uint8_t i = 0U; i < sizeof(notif->subscribed_chs) * 8U; ++i) {
   \       0x2C   0x2000             MOVS     R0,#+0
   \                     ??app_wisun_setting_subscribe_notification_3: (+1)
   \       0x2E   0x0001             MOVS     R1,R0
   \       0x30   0xB2C9             UXTB     R1,R1
   \       0x32   0x2920             CMP      R1,#+32
   \       0x34   0xD214             BCS.N    ??app_wisun_setting_subscribe_notification_4
    443              mask = (1U << i);
   \       0x36   0x2101             MOVS     R1,#+1
   \       0x38   0x4081             LSLS     R1,R1,R0
   \       0x3A   0x4688             MOV      R8,R1
    444              if (i != APP_SETTINGS_NOTIFICATION_ERROR_FLAG_BIT
    445                  && !(notif->subscribed_chs & mask)) {
   \       0x3C   0x0001             MOVS     R1,R0
   \       0x3E   0xB2C9             UXTB     R1,R1
   \       0x40   0x291F             CMP      R1,#+31
   \       0x42   0xD00B             BEQ.N    ??app_wisun_setting_subscribe_notification_5
   \       0x44   0x68A9             LDR      R1,[R5, #+8]
   \       0x46   0xEA11 0x0F08      TST      R1,R8
   \       0x4A   0xD107             BNE.N    ??app_wisun_setting_subscribe_notification_5
    446                *channel = i;
   \       0x4C   0x7020             STRB     R0,[R4, #+0]
    447                notif->subscribed_chs |= mask;
   \       0x4E   0x68A9             LDR      R1,[R5, #+8]
   \       0x50   0xEA58 0x0101      ORRS     R1,R8,R1
   \       0x54   0x60A9             STR      R1,[R5, #+8]
    448                stat = SL_STATUS_OK;
   \       0x56   0x2100             MOVS     R1,#+0
   \       0x58   0x000F             MOVS     R7,R1
    449                break;
   \       0x5A   0xE001             B.N      ??app_wisun_setting_subscribe_notification_4
    450              }
    451            }
   \                     ??app_wisun_setting_subscribe_notification_5: (+1)
   \       0x5C   0x1C40             ADDS     R0,R0,#+1
   \       0x5E   0xE7E6             B.N      ??app_wisun_setting_subscribe_notification_3
    452            _app_wisun_mutex_release();
   \                     ??app_wisun_setting_subscribe_notification_4: (+1)
   \       0x60   0x.... 0x....      BL       _app_wisun_mutex_release
    453          
    454            return stat;
   \       0x64   0x0038             MOVS     R0,R7
   \                     ??app_wisun_setting_subscribe_notification_2: (+1)
   \       0x66   0xE8BD 0x83F2      POP      {R1,R4-R9,PC}
    455          }
    456          

   \                                 In section .text, align 2, keep-with-next
    457          bool app_wisun_setting_is_notified(const app_setting_notification_t type,
    458                                             const uint8_t channel)
    459          {
   \                     app_wisun_setting_is_notified: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0005             MOVS     R5,R0
   \        0x6   0x000E             MOVS     R6,R1
    460            uint32_t flags = 0UL;
   \        0x8   0x2700             MOVS     R7,#+0
    461            app_setting_notif_dsc_t *notif = NULL;
   \        0xA   0xF05F 0x0800      MOVS     R8,#+0
    462          
    463            notif = _get_notification_entry(type);
   \        0xE   0x0028             MOVS     R0,R5
   \       0x10   0xB2C0             UXTB     R0,R0
   \       0x12   0x.... 0x....      BL       _get_notification_entry
   \       0x16   0x0004             MOVS     R4,R0
    464            if (notif == NULL) {
   \       0x18   0x2C00             CMP      R4,#+0
   \       0x1A   0xD101             BNE.N    ??app_wisun_setting_is_notified_0
    465              return false;
   \       0x1C   0x2000             MOVS     R0,#+0
   \       0x1E   0xE013             B.N      ??app_wisun_setting_is_notified_1
    466            }
    467            flags = osEventFlagsWait(notif->evt_id, (1U << channel), osFlagsNoClear, 0UL);
   \                     ??app_wisun_setting_is_notified_0: (+1)
   \       0x20   0x2300             MOVS     R3,#+0
   \       0x22   0x2202             MOVS     R2,#+2
   \       0x24   0x2101             MOVS     R1,#+1
   \       0x26   0x40B1             LSLS     R1,R1,R6
   \       0x28   0x6820             LDR      R0,[R4, #+0]
   \       0x2A   0x.... 0x....      BL       osEventFlagsWait
    468          
    469            return (flags & APP_SETTINGS_NOTIFICATION_ERROR_FLAG_MSK)
    470                   ? false : (bool) (flags & (1U << channel));
   \       0x2E   0x2800             CMP      R0,#+0
   \       0x30   0xD501             BPL.N    ??app_wisun_setting_is_notified_2
   \       0x32   0x2000             MOVS     R0,#+0
   \       0x34   0xE002             B.N      ??app_wisun_setting_is_notified_3
   \                     ??app_wisun_setting_is_notified_2: (+1)
   \       0x36   0x40F0             LSRS     R0,R0,R6
   \       0x38   0xF010 0x0001      ANDS     R0,R0,#0x1
   \                     ??app_wisun_setting_is_notified_3: (+1)
   \       0x3C   0x2800             CMP      R0,#+0
   \       0x3E   0xD001             BEQ.N    ??app_wisun_setting_is_notified_4
   \       0x40   0x2001             MOVS     R0,#+1
   \       0x42   0xE000             B.N      ??app_wisun_setting_is_notified_5
   \                     ??app_wisun_setting_is_notified_4: (+1)
   \       0x44   0x2000             MOVS     R0,#+0
   \                     ??app_wisun_setting_is_notified_5: (+1)
   \       0x46   0xB2C0             UXTB     R0,R0
   \                     ??app_wisun_setting_is_notified_1: (+1)
   \       0x48   0xE8BD 0x81F0      POP      {R4-R8,PC}
    471          }
    472          

   \                                 In section .text, align 2, keep-with-next
    473          void app_wisun_setting_unsubscribe(const app_setting_notification_t type,
    474                                             const uint8_t channel)
    475          {
   \                     app_wisun_setting_unsubscribe: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0005             MOVS     R5,R0
   \        0x4   0x000E             MOVS     R6,R1
    476            app_setting_notif_dsc_t *notif = NULL;
   \        0x6   0x2700             MOVS     R7,#+0
    477          
    478            notif = _get_notification_entry(type);
   \        0x8   0x0028             MOVS     R0,R5
   \        0xA   0xB2C0             UXTB     R0,R0
   \        0xC   0x.... 0x....      BL       _get_notification_entry
   \       0x10   0x0004             MOVS     R4,R0
    479            if (notif == NULL) {
   \       0x12   0x2C00             CMP      R4,#+0
   \       0x14   0xD008             BEQ.N    ??app_wisun_setting_unsubscribe_0
    480              return;
    481            }
    482          
    483            _app_wisun_mutex_acquire();
   \                     ??app_wisun_setting_unsubscribe_1: (+1)
   \       0x16   0x.... 0x....      BL       _app_wisun_mutex_acquire
    484            notif->subscribed_chs &= ~(1U << channel);
   \       0x1A   0x68A1             LDR      R1,[R4, #+8]
   \       0x1C   0x2001             MOVS     R0,#+1
   \       0x1E   0x40B0             LSLS     R0,R0,R6
   \       0x20   0x4381             BICS     R1,R1,R0
   \       0x22   0x60A1             STR      R1,[R4, #+8]
    485            _app_wisun_mutex_release();
   \       0x24   0x.... 0x....      BL       _app_wisun_mutex_release
    486          }
   \                     ??app_wisun_setting_unsubscribe_0: (+1)
   \       0x28   0xBDF1             POP      {R0,R4-R7,PC}
    487          

   \                                 In section .text, align 2, keep-with-next
    488          void app_wisun_setting_ack_notification(const app_setting_notification_t type,
    489                                                  const uint8_t channel)
    490          {
   \                     app_wisun_setting_ack_notification: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0007             MOVS     R7,R0
   \        0x4   0x000D             MOVS     R5,R1
    491            app_setting_notif_dsc_t *notif = NULL;
   \        0x6   0x2600             MOVS     R6,#+0
    492          
    493            notif = _get_notification_entry(type);
   \        0x8   0x0038             MOVS     R0,R7
   \        0xA   0xB2C0             UXTB     R0,R0
   \        0xC   0x.... 0x....      BL       _get_notification_entry
   \       0x10   0x0004             MOVS     R4,R0
    494            if (notif == NULL) {
   \       0x12   0x2C00             CMP      R4,#+0
   \       0x14   0xD004             BEQ.N    ??app_wisun_setting_ack_notification_0
    495              return;
    496            }
    497          
    498            (void) osEventFlagsClear(notif->evt_id, 1U << channel);
   \                     ??app_wisun_setting_ack_notification_1: (+1)
   \       0x16   0x2101             MOVS     R1,#+1
   \       0x18   0x40A9             LSLS     R1,R1,R5
   \       0x1A   0x6820             LDR      R0,[R4, #+0]
   \       0x1C   0x.... 0x....      BL       osEventFlagsClear
    499          }
   \                     ??app_wisun_setting_ack_notification_0: (+1)
   \       0x20   0xBDF1             POP      {R0,R4-R7,PC}
    500          

   \                                 In section .text, align 2, keep-with-next
    501          static sl_status_t _setting_notify(const app_setting_notification_t type)
    502          {
   \                     _setting_notify: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0005             MOVS     R5,R0
    503            app_setting_notif_dsc_t *notif = NULL;
   \        0x4   0x2700             MOVS     R7,#+0
    504            uint32_t flags = 0UL;
   \        0x6   0x2600             MOVS     R6,#+0
    505          
    506            notif = _get_notification_entry(type);
   \        0x8   0x0028             MOVS     R0,R5
   \        0xA   0xB2C0             UXTB     R0,R0
   \        0xC   0x.... 0x....      BL       _get_notification_entry
   \       0x10   0x0004             MOVS     R4,R0
    507            if (notif == NULL) {
   \       0x12   0x2C00             CMP      R4,#+0
   \       0x14   0xD101             BNE.N    ??_setting_notify_0
    508              return SL_STATUS_FAIL;
   \       0x16   0x2001             MOVS     R0,#+1
   \       0x18   0xE009             B.N      ??_setting_notify_1
    509            }
    510            flags = osEventFlagsSet(notif->evt_id, notif->subscribed_chs);
   \                     ??_setting_notify_0: (+1)
   \       0x1A   0x68A1             LDR      R1,[R4, #+8]
   \       0x1C   0x6820             LDR      R0,[R4, #+0]
   \       0x1E   0x.... 0x....      BL       osEventFlagsSet
   \       0x22   0x0001             MOVS     R1,R0
    511            if (flags & APP_SETTINGS_NOTIFICATION_ERROR_FLAG_MSK) {
   \       0x24   0x2900             CMP      R1,#+0
   \       0x26   0xD501             BPL.N    ??_setting_notify_2
    512              return SL_STATUS_FAIL;
   \       0x28   0x2001             MOVS     R0,#+1
   \       0x2A   0xE000             B.N      ??_setting_notify_1
    513            }
    514            return SL_STATUS_OK;
   \                     ??_setting_notify_2: (+1)
   \       0x2C   0x2000             MOVS     R0,#+0
   \                     ??_setting_notify_1: (+1)
   \       0x2E   0xBDF2             POP      {R1,R4-R7,PC}
    515          }
    516          
    517          // -----------------------------------------------------------------------------
    518          //                          Static Function Definitions
    519          // -----------------------------------------------------------------------------
    520          
    521          /* Mutex acquire */

   \                                 In section .text, align 2, keep-with-next
    522          __STATIC_INLINE void _app_wisun_mutex_acquire(void)
    523          {
   \                     _app_wisun_mutex_acquire: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    524            assert(osMutexAcquire(_app_wisun_setting_mtx, osWaitForever) == osOK);
   \        0x2   0xF05F 0x31FF      MOVS     R1,#+4294967295
   \        0x6   0x....             LDR.N    R0,??DataTable14
   \        0x8   0x6800             LDR      R0,[R0, #+0]
   \        0xA   0x.... 0x....      BL       osMutexAcquire
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD007             BEQ.N    ??_app_wisun_mutex_acquire_0
   \       0x12   0xF44F 0x7203      MOV      R2,#+524
   \       0x16   0x....             LDR.N    R1,??DataTable14_2
   \       0x18   0x....             LDR.N    R0,??DataTable14_10
   \       0x1A   0x.... 0x....      BL       __aeabi_assert
   \       0x1E   0x.... 0x....      BL       __iar_EmptyStepPoint
    525          }
   \                     ??_app_wisun_mutex_acquire_0: (+1)
   \       0x22   0xBD01             POP      {R0,PC}
    526          
    527          /* Mutex release */

   \                                 In section .text, align 2, keep-with-next
    528          __STATIC_INLINE void _app_wisun_mutex_release(void)
    529          {
   \                     _app_wisun_mutex_release: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    530            assert(osMutexRelease(_app_wisun_setting_mtx) == osOK);
   \        0x2   0x....             LDR.N    R0,??DataTable14
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x.... 0x....      BL       osMutexRelease
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD007             BEQ.N    ??_app_wisun_mutex_release_0
   \        0xE   0xF240 0x2212      MOVW     R2,#+530
   \       0x12   0x....             LDR.N    R1,??DataTable14_2
   \       0x14   0x....             LDR.N    R0,??DataTable14_11
   \       0x16   0x.... 0x....      BL       __aeabi_assert
   \       0x1A   0x.... 0x....      BL       __iar_EmptyStepPoint
    531          }
   \                     ??_app_wisun_mutex_release_0: (+1)
   \       0x1E   0xBD01             POP      {R0,PC}
    532          

   \                                 In section .text, align 2, keep-with-next
    533          static const char* _app_check_nw_name(const char *name, size_t *const name_len)
    534          {
   \                     _app_check_nw_name: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
    535            const char* ret_name = APP_SETTINGS_DEFAULT_NETWORK_NAME;
   \        0x8   0x....             LDR.N    R6,??DataTable14_12
   \        0xA   0x0037             MOVS     R7,R6
    536          
    537            *name_len = sl_strnlen((char*)name, SL_WISUN_NETWORK_NAME_SIZE);
   \        0xC   0x2120             MOVS     R1,#+32
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0x.... 0x....      BL       sl_strnlen
   \       0x14   0x6028             STR      R0,[R5, #+0]
    538            if (!(*name_len < SL_WISUN_NETWORK_NAME_SIZE) || (*name_len == 0) ) {
   \       0x16   0x6828             LDR      R0,[R5, #+0]
   \       0x18   0x2820             CMP      R0,#+32
   \       0x1A   0xD202             BCS.N    ??_app_check_nw_name_0
   \       0x1C   0x6828             LDR      R0,[R5, #+0]
   \       0x1E   0x2800             CMP      R0,#+0
   \       0x20   0xD10A             BNE.N    ??_app_check_nw_name_1
    539              // sets the default name and its size
    540              ret_name = APP_SETTINGS_DEFAULT_NETWORK_NAME;
   \                     ??_app_check_nw_name_0: (+1)
   \       0x22   0x46B0             MOV      R8,R6
    541              *name_len = sl_strnlen(APP_SETTINGS_DEFAULT_NETWORK_NAME, SL_WISUN_NETWORK_NAME_SIZE);
   \       0x24   0x2120             MOVS     R1,#+32
   \       0x26   0x0030             MOVS     R0,R6
   \       0x28   0x.... 0x....      BL       sl_strnlen
   \       0x2C   0x6028             STR      R0,[R5, #+0]
    542              printf("\r\n[Warning: The name of Wi-SUN network is incorrect, default name used, \"%s\" ]\r\n", ret_name);
   \       0x2E   0x4641             MOV      R1,R8
   \       0x30   0x....             LDR.N    R0,??DataTable14_13
   \       0x32   0x.... 0x....      BL       printf
   \       0x36   0xE000             B.N      ??_app_check_nw_name_2
    543            } else {
    544              ret_name = name;
   \                     ??_app_check_nw_name_1: (+1)
   \       0x38   0x46A0             MOV      R8,R4
    545            }
    546          
    547            return ret_name;
   \                     ??_app_check_nw_name_2: (+1)
   \       0x3A   0x4640             MOV      R0,R8
   \       0x3C   0xE8BD 0x81F0      POP      {R4-R8,PC}
    548          }
    549          

   \                                 In section .text, align 2, keep-with-next
    550          static app_setting_notif_dsc_t *_get_notification_entry(app_setting_notification_t type)
    551          {
   \                     _get_notification_entry: (+1)
   \        0x0   0xB430             PUSH     {R4,R5}
   \        0x2   0x0001             MOVS     R1,R0
    552            for (size_t idx = 0; idx < APP_SETTINGS_NOTIFICATION_COUNT; ++idx) {
   \        0x4   0x2000             MOVS     R0,#+0
   \                     ??_get_notification_entry_0: (+1)
   \        0x6   0x2804             CMP      R0,#+4
   \        0x8   0xD20E             BCS.N    ??_get_notification_entry_1
    553              if (_notifications[idx].type == type) {
   \        0xA   0x220C             MOVS     R2,#+12
   \        0xC   0x....             LDR.N    R3,??DataTable14_4
   \        0xE   0xFB02 0xF400      MUL      R4,R2,R0
   \       0x12   0x441C             ADD      R4,R3,R4
   \       0x14   0x7925             LDRB     R5,[R4, #+4]
   \       0x16   0x000C             MOVS     R4,R1
   \       0x18   0xB2E4             UXTB     R4,R4
   \       0x1A   0x42A5             CMP      R5,R4
   \       0x1C   0xD102             BNE.N    ??_get_notification_entry_2
    554                return &_notifications[idx];
   \       0x1E   0x4350             MULS     R0,R2,R0
   \       0x20   0x4418             ADD      R0,R3,R0
   \       0x22   0xE002             B.N      ??_get_notification_entry_3
    555              }
    556            }
   \                     ??_get_notification_entry_2: (+1)
   \       0x24   0x1C40             ADDS     R0,R0,#+1
   \       0x26   0xE7EE             B.N      ??_get_notification_entry_0
    557            return NULL;
   \                     ??_get_notification_entry_1: (+1)
   \       0x28   0x2000             MOVS     R0,#+0
   \                     ??_get_notification_entry_3: (+1)
   \       0x2A   0xBC30             POP      {R4,R5}
   \       0x2C   0x4770             BX       LR
    558          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \        0x0   0x....'....        DC32     _app_wisun_setting_mtx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \        0x0   0x....'....        DC32     _app_wisun_setting_mtx_attr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_2:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_3:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_4:
   \        0x0   0x....'....        DC32     _notifications

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_5:
   \        0x0   0x....'....        DC32     _wisun_setting_evt_attr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_6:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_7:
   \        0x0   0x....'....        DC32     _wisun_app_settings

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_8:
   \        0x0   0x....'....        DC32     _wisun_app_settings+38

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_9:
   \        0x0   0x....'....        DC32     wisun_app_settings_default+38

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_10:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_11:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_12:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_13:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x41 0x70          DC8 "AppWisunSettingMutex"
   \              0x70 0x57    
   \              0x69 0x73    
   \              0x75 0x6E    
   \              0x53 0x65    
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x4D    
   \              0x75 0x74    
   \              0x65 0x78    
   \              0x00
   \       0x15                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x41 0x70          DC8 "AppWisunSettingEvtFlags"
   \              0x70 0x57    
   \              0x69 0x73    
   \              0x75 0x6E    
   \              0x53 0x65    
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x45    
   \              0x76 0x74    
   \              0x46 0x6C    
   \              0x61 0x67    
   \              0x73 0x00

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x5F 0x61          DC8 "_app_wisun_setting_mtx != 0"
   \              0x70 0x70    
   \              0x5F 0x77    
   \              0x69 0x73    
   \              0x75 0x6E    
   \              0x5F 0x73    
   \              0x65 0x74    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x5F 0x6D    
   \              0x74 0x78    
   \              0x20 0x21    
   \              0x3D 0x20    
   \              0x30 0x00

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x44 0x3A          DC8 0x44, 0x3A, 0x5C, 0x49, 0x6E, 0x65, 0x73, 0x68
   \              0x5C 0x49    
   \              0x6E 0x65    
   \              0x73 0x68
   \        0x8   0x5F 0x77          DC8 0x5F, 0x77, 0x69, 0x73, 0x75, 0x6E, 0x5C, 0x57
   \              0x69 0x73    
   \              0x75 0x6E    
   \              0x5C 0x57
   \       0x10   0x69 0x73          DC8 0x69, 0x73, 0x75, 0x6E, 0x5F, 0x4E, 0x6F, 0x64
   \              0x75 0x6E    
   \              0x5F 0x4E    
   \              0x6F 0x64
   \       0x18   0x65 0x5F          DC8 0x65, 0x5F, 0x41, 0x70, 0x70, 0x20, 0x31, 0x5C
   \              0x41 0x70    
   \              0x70 0x20    
   \              0x31 0x5C
   \       0x20   0x57 0x69          DC8 0x57, 0x69, 0x73, 0x75, 0x6E, 0x5F, 0x4E, 0x6F
   \              0x73 0x75    
   \              0x6E 0x5F    
   \              0x4E 0x6F
   \       0x28   0x64 0x65          DC8 0x64, 0x65, 0x5F, 0x41, 0x70, 0x70, 0x5C, 0x67
   \              0x5F 0x41    
   \              0x70 0x70    
   \              0x5C 0x67
   \       0x30   0x65 0x63          DC8 0x65, 0x63, 0x6B, 0x6F, 0x5F, 0x73, 0x64, 0x6B
   \              0x6B 0x6F    
   \              0x5F 0x73    
   \              0x64 0x6B
   \       0x38   0x5F 0x34          DC8 0x5F, 0x34, 0x2E, 0x34, 0x2E, 0x35, 0x5C, 0x61
   \              0x2E 0x34    
   \              0x2E 0x35    
   \              0x5C 0x61
   \       0x40   0x70 0x70          DC8 0x70, 0x70, 0x5C, 0x77, 0x69, 0x73, 0x75, 0x6E
   \              0x5C 0x77    
   \              0x69 0x73    
   \              0x75 0x6E
   \       0x48   0x5C 0x63          DC8 0x5C, 0x63, 0x6F, 0x6D, 0x70, 0x6F, 0x6E, 0x65
   \              0x6F 0x6D    
   \              0x70 0x6F    
   \              0x6E 0x65
   \       0x50   0x6E 0x74          DC8 0x6E, 0x74, 0x5C, 0x61, 0x70, 0x70, 0x5F, 0x73
   \              0x5C 0x61    
   \              0x70 0x70    
   \              0x5F 0x73
   \       0x58   0x65 0x74          DC8 0x65, 0x74, 0x74, 0x69, 0x6E, 0x67, 0x5C, 0x73
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x5C 0x73
   \       0x60   0x6C 0x5F          DC8 0x6C, 0x5F, 0x77, 0x69, 0x73, 0x75, 0x6E, 0x5F
   \              0x77 0x69    
   \              0x73 0x75    
   \              0x6E 0x5F
   \       0x68   0x61 0x70          DC8 0x61, 0x70, 0x70, 0x5F, 0x73, 0x65, 0x74, 0x74
   \              0x70 0x5F    
   \              0x73 0x65    
   \              0x74 0x74
   \       0x70   0x69 0x6E          DC8 0x69, 0x6E, 0x67, 0x2E, 0x63, 0
   \              0x67 0x2E    
   \              0x63 0x00
   \       0x76                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x5F 0x6E          DC8 "_notifications[idx].evt_id != 0"
   \              0x6F 0x74    
   \              0x69 0x66    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x73    
   \              0x5B 0x69    
   \              0x64 0x78    
   \              0x5D 0x2E    
   \              0x65 0x76    
   \              0x74 0x5F    
   \              0x69 0x64    
   \              0x20 0x21    
   \              0x3D 0x20    
   \              0x30 0x00

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x6F 0x73          DC8 0x6F, 0x73, 0x4D, 0x75, 0x74, 0x65, 0x78, 0x41
   \              0x4D 0x75    
   \              0x74 0x65    
   \              0x78 0x41
   \        0x8   0x63 0x71          DC8 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x28, 0x5F
   \              0x75 0x69    
   \              0x72 0x65    
   \              0x28 0x5F
   \       0x10   0x61 0x70          DC8 0x61, 0x70, 0x70, 0x5F, 0x77, 0x69, 0x73, 0x75
   \              0x70 0x5F    
   \              0x77 0x69    
   \              0x73 0x75
   \       0x18   0x6E 0x5F          DC8 0x6E, 0x5F, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6E
   \              0x73 0x65    
   \              0x74 0x74    
   \              0x69 0x6E
   \       0x20   0x67 0x5F          DC8 0x67, 0x5F, 0x6D, 0x74, 0x78, 0x2C, 0x20, 0x30
   \              0x6D 0x74    
   \              0x78 0x2C    
   \              0x20 0x30
   \       0x28   0x78 0x46          DC8 0x78, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46
   \              0x46 0x46    
   \              0x46 0x46    
   \              0x46 0x46
   \       0x30   0x46 0x55          DC8 0x46, 0x55, 0x29, 0x20, 0x3D, 0x3D, 0x20, 0x6F
   \              0x29 0x20    
   \              0x3D 0x3D    
   \              0x20 0x6F
   \       0x38   0x73 0x4F          DC8 0x73, 0x4F, 0x4B, 0
   \              0x4B 0x00

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x6F 0x73          DC8 "osMutexRelease(_app_wisun_setting_mtx) == osOK"
   \              0x4D 0x75    
   \              0x74 0x65    
   \              0x78 0x52    
   \              0x65 0x6C    
   \              0x65 0x61    
   \              0x73 0x65    
   \              0x28 0x5F    
   \              0x61 0x70    
   \              0x70 0x5F    
   \              0x77 0x69    
   \              0x73 0x75    
   \              0x6E 0x5F    
   \              0x73 0x65    
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x5F    
   \              0x6D 0x74    
   \              0x78 0x29    
   \              0x20 0x3D    
   \              0x3D 0x20    
   \              0x6F 0x73    
   \              0x4F 0x4B    
   \              0x00
   \       0x2F                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x57 0x69          DC8 "Wi-SUN Network"
   \              0x2D 0x53    
   \              0x55 0x4E    
   \              0x20 0x4E    
   \              0x65 0x74    
   \              0x77 0x6F    
   \              0x72 0x6B    
   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x0D 0x0A          DC8 0x0D, 0x0A, 0x5B, 0x57, 0x61, 0x72, 0x6E, 0x69
   \              0x5B 0x57    
   \              0x61 0x72    
   \              0x6E 0x69
   \        0x8   0x6E 0x67          DC8 0x6E, 0x67, 0x3A, 0x20, 0x54, 0x68, 0x65, 0x20
   \              0x3A 0x20    
   \              0x54 0x68    
   \              0x65 0x20
   \       0x10   0x6E 0x61          DC8 0x6E, 0x61, 0x6D, 0x65, 0x20, 0x6F, 0x66, 0x20
   \              0x6D 0x65    
   \              0x20 0x6F    
   \              0x66 0x20
   \       0x18   0x57 0x69          DC8 0x57, 0x69, 0x2D, 0x53, 0x55, 0x4E, 0x20, 0x6E
   \              0x2D 0x53    
   \              0x55 0x4E    
   \              0x20 0x6E
   \       0x20   0x65 0x74          DC8 0x65, 0x74, 0x77, 0x6F, 0x72, 0x6B, 0x20, 0x69
   \              0x77 0x6F    
   \              0x72 0x6B    
   \              0x20 0x69
   \       0x28   0x73 0x20          DC8 0x73, 0x20, 0x69, 0x6E, 0x63, 0x6F, 0x72, 0x72
   \              0x69 0x6E    
   \              0x63 0x6F    
   \              0x72 0x72
   \       0x30   0x65 0x63          DC8 0x65, 0x63, 0x74, 0x2C, 0x20, 0x64, 0x65, 0x66
   \              0x74 0x2C    
   \              0x20 0x64    
   \              0x65 0x66
   \       0x38   0x61 0x75          DC8 0x61, 0x75, 0x6C, 0x74, 0x20, 0x6E, 0x61, 0x6D
   \              0x6C 0x74    
   \              0x20 0x6E    
   \              0x61 0x6D
   \       0x40   0x65 0x20          DC8 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x2C, 0x20
   \              0x75 0x73    
   \              0x65 0x64    
   \              0x2C 0x20
   \       0x48   0x22 0x25          DC8 0x22, 0x25, 0x73, 0x22, 0x20, 0x5D, 0x0D, 0x0A
   \              0x73 0x22    
   \              0x20 0x5D    
   \              0x0D 0x0A
   \       0x50   0x00               DC8 0
   \       0x51                      DS8 3

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   _app_check_nw_name
        24   -> printf
        24   -> sl_strnlen
       8   _app_wisun_mutex_acquire
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
         8   -> osMutexAcquire
       8   _app_wisun_mutex_release
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
         8   -> osMutexRelease
       8   _get_notification_entry
      24   _setting_notify
        24   -> _get_notification_entry
        24   -> osEventFlagsSet
      24   app_wisun_setting_ack_notification
        24   -> _get_notification_entry
        24   -> osEventFlagsClear
      24   app_wisun_setting_get
        24   -> __aeabi_memcpy
        24   -> _app_wisun_mutex_acquire
        24   -> _app_wisun_mutex_release
      40   app_wisun_setting_get_network_name
        40   -> __aeabi_memcpy
        40   -> __aeabi_memset
        40   -> _app_wisun_mutex_acquire
        40   -> _app_wisun_mutex_release
        40   -> sl_strlen
       8   app_wisun_setting_get_network_size
         8   -> _app_wisun_mutex_acquire
         8   -> _app_wisun_mutex_release
      24   app_wisun_setting_get_phy
        24   -> __aeabi_memcpy
        24   -> _app_wisun_mutex_acquire
        24   -> _app_wisun_mutex_release
       8   app_wisun_setting_get_tx_power
         8   -> _app_wisun_mutex_acquire
         8   -> _app_wisun_mutex_release
      16   app_wisun_setting_init
        16   -> __aeabi_assert
        16   -> __iar_EmptyStepPoint
        16   -> osEventFlagsNew
        16   -> osMutexNew
      24   app_wisun_setting_init_phy_cfg
        24   -> __aeabi_memcpy
        24   -> _setting_notify
      24   app_wisun_setting_is_notified
        24   -> _get_notification_entry
        24   -> osEventFlagsWait
      40   app_wisun_setting_set_network_name
        40   -> __aeabi_memcpy
        40   -> _app_check_nw_name
        40   -> _app_wisun_mutex_acquire
        40   -> _app_wisun_mutex_release
        40   -> _setting_notify
      16   app_wisun_setting_set_network_size
        16   -> _app_wisun_mutex_acquire
        16   -> _app_wisun_mutex_release
        16   -> _setting_notify
      24   app_wisun_setting_set_phy
        24   -> __aeabi_memcpy
        24   -> _app_wisun_mutex_acquire
        24   -> _app_wisun_mutex_release
        24   -> _setting_notify
      16   app_wisun_setting_set_tx_power
        16   -> _app_wisun_mutex_acquire
        16   -> _app_wisun_mutex_release
        16   -> _setting_notify
      32   app_wisun_setting_subscribe_notification
        32   -> _app_wisun_mutex_acquire
        32   -> _app_wisun_mutex_release
        32   -> _get_notification_entry
      24   app_wisun_setting_unsubscribe
        24   -> _app_wisun_mutex_acquire
        24   -> _app_wisun_mutex_release
        24   -> _get_notification_entry


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_10
       4  ??DataTable14_11
       4  ??DataTable14_12
       4  ??DataTable14_13
       4  ??DataTable14_2
       4  ??DataTable14_3
       4  ??DataTable14_4
       4  ??DataTable14_5
       4  ??DataTable14_6
       4  ??DataTable14_7
       4  ??DataTable14_8
       4  ??DataTable14_9
      24  ?_0
      24  ?_1
      28  ?_2
     120  ?_3
      32  ?_4
      60  ?_5
      48  ?_6
      16  ?_7
      84  ?_8
      64  _app_check_nw_name
      36  _app_wisun_mutex_acquire
      32  _app_wisun_mutex_release
       4  _app_wisun_setting_mtx
      16  _app_wisun_setting_mtx_attr
      46  _get_notification_entry
      48  _notifications
      48  _setting_notify
      56  _wisun_app_settings
      16  _wisun_setting_evt_attr
      34  app_wisun_setting_ack_notification
      50  app_wisun_setting_get
      98  app_wisun_setting_get_network_name
      32  app_wisun_setting_get_network_size
      40  app_wisun_setting_get_phy
      32  app_wisun_setting_get_tx_power
     100  app_wisun_setting_init
      40  app_wisun_setting_init_phy_cfg
      76  app_wisun_setting_is_notified
      98  app_wisun_setting_set_network_name
      44  app_wisun_setting_set_network_size
      64  app_wisun_setting_set_phy
      44  app_wisun_setting_set_tx_power
     106  app_wisun_setting_subscribe_notification
      42  app_wisun_setting_unsubscribe
      12  network_saving_settings
       8  saving_settings
      56  wisun_app_settings_default

 
    60 bytes in section .bss
    56 bytes in section .data
   536 bytes in section .rodata
 1'182 bytes in section .text
 
 1'182 bytes of CODE  memory
   536 bytes of CONST memory
   116 bytes of DATA  memory

Errors: none
Warnings: none
