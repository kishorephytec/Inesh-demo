###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         07/Apr/2025  16:44:49
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode                 =  thumb
#    Endian                   =  little
#    Source file              =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\sl_wisun_app_core.c
#    Command line             =
#        -f "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\app_core_3182371549707509704.dir\sl_wisun_app_core.o.rsp"
#        ("D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\sl_wisun_app_core.c"
#        -D DEBUG_EFM=1 -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -lC "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\app_core_3182371549707509704.dir"
#        --diag_suppress Pa050 -o "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\app_core_3182371549707509704.dir"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse --cmse -e --fpu=VFPv5_sp --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\rail\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\wisun\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\.\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_project_info\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\Core\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\RTOS2\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\device_init\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emlib\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\iostream\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\preset\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\cpu\include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\ports\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\nvm3\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\peripheral\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_psa_driver\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\common\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ble\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ieee802154\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\wmbus\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\zwave\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\chip\efr32\efr32xg2x\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\sidewalk\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\rail_util_pti\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\segger\systemview\SEGGER\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\silicon_labs\silabs_core\memory_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\toolchain\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\system\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ns_list\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ping\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\udp_client\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\sleeptimer\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\plugin\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\socket\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\autogen\\" -On
#        --use_c++_inline) --dependencies=n "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\app_core_3182371549707509704.dir\sl_wisun_app_core.o.iar_deps"
#    Locale                   =  C
#    List file                =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\app_core_3182371549707509704.dir\sl_wisun_app_core.lst
#    Object file              =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\app_core_3182371549707509704.dir\sl_wisun_app_core.o
#    Runtime model:              
#      __CPP_Runtime          =  1
#      __SystemLibrary        =  DLib
#      __dlib_file_descriptor =  0
#      __dlib_version         =  6
#      __iar_require _Printf  =  flags,int_specials,qualifiers,widths
#
###############################################################################

D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\sl_wisun_app_core.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Wi-SUN Application Core Component
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2021 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * SPDX-License-Identifier: Zlib
     10           *
     11           * The licensor of this software is Silicon Laboratories Inc.
     12           *
     13           * This software is provided 'as-is', without any express or implied
     14           * warranty. In no event will the authors be held liable for any damages
     15           * arising from the use of this software.
     16           *
     17           * Permission is granted to anyone to use this software for any purpose,
     18           * including commercial applications, and to alter it and redistribute it
     19           * freely, subject to the following restrictions:
     20           *
     21           * 1. The origin of this software must not be misrepresented; you must not
     22           *    claim that you wrote the original software. If you use this software
     23           *    in a product, an acknowledgment in the product documentation would be
     24           *    appreciated but is not required.
     25           * 2. Altered source versions must be plainly marked as such, and must not be
     26           *    misrepresented as being the original software.
     27           * 3. This notice may not be removed or altered from any source distribution.
     28           *
     29           ******************************************************************************/
     30          
     31          // -----------------------------------------------------------------------------
     32          //                                   Includes
     33          // -----------------------------------------------------------------------------
     34          #include <stdio.h>
     35          #include <assert.h>
     36          #include <string.h>
     37          #include "sl_status.h"
     38          #include "sl_wisun_app_core.h"
     39          #include "sl_wisun_app_core_config.h"
     40          #include "cmsis_os2.h"
     41          #include "sl_cmsis_os2_common.h"
     42          #include "sl_status.h"
     43          #include "sl_wisun_types.h"
     44          #include "sl_wisun_api.h"
     45          #include "sl_wisun_config.h"
     46          #include "sl_wisun_event_mgr.h"
     47          #include "sl_wisun_trace_util.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __vfp void app_wisun_trace_util_destroy_ip_str(char const *const)
   \                     app_wisun_trace_util_destroy_ip_str: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x.... 0x....      BL       app_wisun_free
   \        0xA   0xBD10             POP      {R4,PC}

   \                                 In section .text, align 2, keep-with-next
   \   static __vfp void app_wisun_trace_util_destroy_time_str(char const *)
   \                     app_wisun_trace_util_destroy_time_str: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x.... 0x....      BL       app_wisun_free
   \        0xA   0xBD10             POP      {R4,PC}
     48          #include "sl_sleeptimer.h"
     49          
     50          #if defined(SL_CATALOG_WISUN_APP_SETTING_PRESENT)
     51            #include "sl_wisun_app_setting.h"
     52          #endif
     53          
     54          #if defined(SL_CATALOG_POWER_MANAGER_PRESENT)
     55            #warning Power Manager component is presented. Features/peripherals are constrained.
     56          #endif
     57          
     58          // -----------------------------------------------------------------------------
     59          //                              Macros and Typedefs
     60          // -----------------------------------------------------------------------------
     61          
     62          /// MDR capability
     63          #define APP_WISUN_MDR_COMMAND_CAPABILITY                  0U
     64          
     65          /// Eventflag error mask
     66          #define APP_WISUN_EVTFLAG_ERROR_MSK                       (0x00000001UL << 31UL)
     67          
     68          ///  Release mutex and return
     69          #define _return_and_mtx_release() \
     70            do {                            \
     71              _app_wisun_mutex_release();   \
     72              return;                       \
     73            } while (0)
     74          
     75          /// Release mutex and return value
     76          #define _return_val_and_mtx_release(retval) \
     77            do {                                      \
     78              _app_wisun_mutex_release();             \
     79              return (retval);                        \
     80            } while (0)
     81          
     82          /// Synthetize app settings if it's not available
     83          #if !defined(SL_CATALOG_WISUN_APP_SETTING_PRESENT)
     84          typedef struct app_setting_wisun{
     85            char network_name[SL_WISUN_NETWORK_NAME_SIZE + 1];
     86            uint8_t network_size;
     87            int8_t tx_power;
     88            uint8_t device_type;
     89            uint8_t lfn_profile;
     90            bool is_default_phy;
     91            sl_wisun_phy_config_t phy;
     92          } app_setting_wisun_t;
     93          #endif
     94          
     95          // -----------------------------------------------------------------------------
     96          //                          Static Function Declarations
     97          // -----------------------------------------------------------------------------
     98          /**************************************************************************//**
     99           * @brief Application setting
    100           * @details It setup Wi-SUN with application related configuration.
    101           * @param[in] setting setting structure that contains basic configuration
    102           * @return sl_status_t SL_STATUS_OK if it is successful.
    103           *****************************************************************************/
    104          static sl_status_t _app_wisun_application_setting(const app_setting_wisun_t * const setting);
    105          
    106          /**************************************************************************//**
    107           * @brief Security setting
    108           * @details It setup Wi-SUN with security related configuration.
    109           * @return sl_status_t SL_STATUS_OK if it is successful.
    110           *****************************************************************************/
    111          sl_status_t _app_wisun_security_setting(void);
    112          
    113          #if (SL_WISUN_APP_CORE_REGULATION != SL_WISUN_APP_CORE_REGULATION_NONE)
    114          /**************************************************************************//**
    115           * @brief Regulation setting
    116           * @details It setup Wi-SUN with regulation related parameters.
    117           * @return sl_status_t SL_STATUS_OK if it is successful.
    118           *****************************************************************************/
    119          __STATIC_INLINE sl_status_t _app_wisun_regulation_setting(void);
    120          #endif
    121          
    122          /**************************************************************************//**
    123           * @brief Acquire application mutex
    124           * @details Internal mutex lock
    125           *****************************************************************************/
    126          __STATIC_INLINE void _app_wisun_mutex_acquire(void);
    127          
    128          /**************************************************************************//**
    129           * @brief Release application mutex
    130           * @details Internal mutex release
    131           *****************************************************************************/
    132          __STATIC_INLINE void _app_wisun_mutex_release(void);
    133          
    134          /**************************************************************************//**
    135           * @brief Storing address to the current address
    136           * @details helper function
    137           * @param[in] addr_name address name
    138           * @param[in] addr_type address type
    139           * @param[in] addr address
    140           *****************************************************************************/
    141          static void _store_address(const char *addr_name,
    142                                     const sl_wisun_ip_address_type_t addr_type,
    143                                     in6_addr_t *addr);
    144          
    145          /**************************************************************************//**
    146           * @brief Setting state flag
    147           * @details It sets the state by a flag
    148           * @param[in] flag is a flag bit
    149           *****************************************************************************/
    150          __STATIC_INLINE void _app_wisun_core_set_state(const sl_wisun_app_core_state_t flag);
    151          
    152          /**************************************************************************//**
    153           * @brief Clear state flag
    154           * @details It clears the state by a flag
    155           * @param[in] flag is a flag bit
    156           *****************************************************************************/
    157          __STATIC_INLINE void _app_wisun_core_clear_state(const sl_wisun_app_core_state_t flag);
    158          
    159          /**************************************************************************//**
    160           * @brief Storing the current address
    161           * @details Helper function
    162           *****************************************************************************/
    163          static void _store_current_addresses(void);
    164          
    165          /**************************************************************************//**
    166           * @brief Get Length of certifacete string
    167           * @details special port of strnlen with different types
    168           * @param[in] cert Certificate ptr
    169           * @param[in] max_cert_len certificate buffer max length
    170           * @return uint16_t length of certificate string
    171           *****************************************************************************/
    172          static uint16_t _get_cert_str_len(const uint8_t *cert, const uint16_t max_cert_len);
    173          
    174          // -----------------------------------------------------------------------------
    175          //                                Static Variables
    176          // -----------------------------------------------------------------------------
    177          
    178          /// Create default setting if app settings is not available
    179          #if !defined(SL_CATALOG_WISUN_APP_SETTING_PRESENT)
    180          static const app_setting_wisun_t _app_default_settings = {
    181          #if defined(WISUN_CONFIG_NETWORK_NAME)
    182            .network_name = WISUN_CONFIG_NETWORK_NAME,
    183          #else
    184            .network_name = "Wi-SUN Network",
    185          #endif
    186          #if defined(WISUN_CONFIG_NETWORK_SIZE)
    187            .network_size = WISUN_CONFIG_NETWORK_SIZE,
    188          #else
    189            .network_size = SL_WISUN_NETWORK_SIZE_SMALL,
    190          #endif
    191          #if defined(WISUN_CONFIG_TX_POWER)
    192            .tx_power = WISUN_CONFIG_TX_POWER,
    193          #else
    194            .tx_power = 20U,
    195          #endif
    196            .is_default_phy = true,
    197          #if defined(WISUN_CONFIG_DEVICE_TYPE)
    198            .device_type = WISUN_CONFIG_DEVICE_TYPE,
    199          #else
    200            .device_type = SL_WISUN_ROUTER,
    201          #endif
    202          #if defined(WISUN_CONFIG_DEVICE_PROFILE)
    203            .lfn_profile = WISUN_CONFIG_DEVICE_PROFILE,
    204          #else
    205            .lfn_profile = SL_WISUN_LFN_PROFILE_TEST,
    206          #endif
    207          #if defined(WISUN_CONFIG_DEFAULT_PHY_FAN10)
    208            .phy = {
    209              .type = SL_WISUN_PHY_CONFIG_FAN10,
    210              .config.fan10.reg_domain = WISUN_CONFIG_REGULATORY_DOMAIN,
    211              .config.fan10.op_class = WISUN_CONFIG_OPERATING_CLASS,
    212              .config.fan10.op_mode = WISUN_CONFIG_OPERATING_MODE,
    213            },
    214          #elif defined(WISUN_CONFIG_DEFAULT_PHY_FAN11)
    215            .phy = {
    216              .type = SL_WISUN_PHY_CONFIG_FAN11,
    217              .config.fan11.reg_domain = WISUN_CONFIG_REGULATORY_DOMAIN,
    218              .config.fan11.chan_plan_id = WISUN_CONFIG_CHANNEL_PLAN_ID,
    219              .config.fan11.phy_mode_id = WISUN_CONFIG_PHY_MODE_ID,
    220            },
    221          #else
    222            .phy = { 0 },
    223          #endif
    224          };
    225          #endif
    226          
    227          /// Here we track if regional regulation is active or not

   \                                 In section .bss, align 1
    228          static bool _regional_regulation_active = false;
   \                     _regional_regulation_active:
   \        0x0                      DS8 1
    229          

   \                                 In section .data, align 2
    230          static sl_wisun_app_core_reg_thresholds_t _tresholds = {
   \                     _tresholds:
   \        0x0   0x55 0x5F          DC8 85, 95
    231            .warning_threshold = SL_WISUN_APP_CORE_DEFAULT_REGULATION_WARNING_THRESHOLD,
    232            .alert_threshold = SL_WISUN_APP_CORE_DEFAULT_REGULATION_ALERT_THRESHOLD,
    233          };
    234          
    235          /// App framework mutex

   \                                 In section .bss, align 4
    236          static osMutexId_t _app_core_mtx = NULL;
   \                     _app_core_mtx:
   \        0x0                      DS8 4
    237          
    238          ///  App framework mutex attribute

   \                                 In section .rodata, align 4
    239          static const osMutexAttr_t _app_wisun_mtx_attr = {
   \                     _app_wisun_mtx_attr:
   \        0x0   0x....'....        DC32 ?_0, 1, 0x0, 0
   \              0x0000'0001  
   \              0x0000'0000  
   \              0x0000'0000
    240            .name      = "AppWisunkMutex",
    241            .attr_bits = osMutexRecursive,
    242            .cb_mem    = NULL,
    243            .cb_size   = 0
    244          };
    245          
    246          /// Current address storage

   \                                 In section .bss, align 4
    247          static sl_wisun_app_core_current_addr_t _current_addr = { 0U };
   \                     _current_addr:
   \        0x0                      DS8 80
    248          
    249          /// error flag for errors

   \                                 In section .bss, align 4
    250          static osEventFlagsId_t _app_core_state = NULL;
   \                     _app_core_state:
   \        0x0                      DS8 4
    251          
    252          /// Sate event flags attributes

   \                                 In section .rodata, align 4
    253          static const osEventFlagsAttr_t _app_wisun_evt_attr = {
   \                     _app_wisun_evt_attr:
   \        0x0   0x....'....        DC32 ?_1, 0, 0x0, 0
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000
    254            .name      = "AppWisunEvtFlags",
    255            .attr_bits = 0,
    256            .cb_mem    = NULL,
    257            .cb_size   = 0
    258          };
    259          
    260          /// Internal join state

   \                                 In section .bss, align 1
    261          static sl_wisun_join_state_t _join_state = SL_WISUN_JOIN_STATE_DISCONNECTED;
   \                     _join_state:
   \        0x0                      DS8 1
    262          
    263          /// Internal setting storage

   \                                 In section .bss, align 4
    264          static app_setting_wisun_t _setting = { 0U };
   \                     _setting:
   \        0x0                      DS8 56
    265          
    266          /// Time statistic storage

   \                                 In section .bss, align 8
    267          static sl_wisun_app_core_time_stat_t _time_stat = { 0U };
   \                     _time_stat:
   \        0x0                      DS8 48
    268          
    269          // -----------------------------------------------------------------------------
    270          //                          Public Function Definitions
    271          // -----------------------------------------------------------------------------
    272          
    273          /* Network update event handler */

   \                                 In section .text, align 2, keep-with-next
    274          void sl_wisun_network_update_event_hnd(sl_wisun_evt_t *evt)
    275          {
   \                     sl_wisun_network_update_event_hnd: (+1)
   \        0x0   0xB5FE             PUSH     {R1-R7,LR}
   \        0x2   0x0006             MOVS     R6,R0
    276            const char *ip_str = NULL;
   \        0x4   0x2500             MOVS     R5,#+0
    277            const char *time_str = NULL;
   \        0x6   0x2700             MOVS     R7,#+0
    278            static sl_wisun_trace_util_time_t time = { 0U };
    279            uint64_t time_ms = 0ULL;
   \        0x8   0x2000             MOVS     R0,#+0
   \        0xA   0x2100             MOVS     R1,#+0
   \        0xC   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
    280          
    281            sl_sleeptimer_tick64_to_ms(sl_sleeptimer_get_tick_count64(), &time_ms);
   \       0x10   0x.... 0x....      BL       sl_sleeptimer_get_tick_count64
   \       0x14   0x466A             MOV      R2,SP
   \       0x16   0x.... 0x....      BL       sl_sleeptimer_tick64_to_ms
    282            time_ms = time_ms - _time_stat.connected_ms;
   \       0x1A   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \       0x1E   0x.... 0x....      LDR.W    R2,??DataTable28
   \       0x22   0xE9D2 0x2302      LDRD     R2,R3,[R2, #+8]
   \       0x26   0x1A80             SUBS     R0,R0,R2
   \       0x28   0x4199             SBCS     R1,R1,R3
   \       0x2A   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
    283            app_wisun_trace_util_timestamp_init(time_ms, &time);
   \       0x2E   0x.... 0x....      LDR.W    R4,??DataTable28_1
   \       0x32   0x0022             MOVS     R2,R4
   \       0x34   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \       0x38   0x.... 0x....      BL       app_wisun_trace_util_timestamp_init
    284            time_str = app_wisun_trace_util_time_to_str(&time);
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x.... 0x....      BL       app_wisun_trace_util_time_to_str
   \       0x42   0x0004             MOVS     R4,R0
    285            if (time_str == NULL) {
   \       0x44   0x2C00             CMP      R4,#+0
   \       0x46   0xD101             BNE.N    ??sl_wisun_network_update_event_hnd_0
    286              time_str = "";
   \       0x48   0x....             ADR.N    R0,??DataTable7
   \       0x4A   0x0004             MOVS     R4,R0
    287            }
    288          
    289            if (evt->evt.network_update.status == SL_STATUS_OK) {
   \                     ??sl_wisun_network_update_event_hnd_0: (+1)
   \       0x4C   0x6870             LDR      R0,[R6, #+4]
   \       0x4E   0x2800             CMP      R0,#+0
   \       0x50   0xD13E             BNE.N    ??sl_wisun_network_update_event_hnd_1
    290              if (evt->evt.network_update.flags & (1 << SL_WISUN_NETWORK_UPDATE_FLAGS_GLOBAL_IP)) {
   \       0x52   0x68B0             LDR      R0,[R6, #+8]
   \       0x54   0x07C0             LSLS     R0,R0,#+31
   \       0x56   0xD511             BPL.N    ??sl_wisun_network_update_event_hnd_2
    291                _store_address("GLOBAL", SL_WISUN_IP_ADDRESS_TYPE_GLOBAL, &_current_addr.global);
   \       0x58   0x.... 0x....      LDR.W    R7,??DataTable28_2
   \       0x5C   0x003A             MOVS     R2,R7
   \       0x5E   0x2101             MOVS     R1,#+1
   \       0x60   0x.... 0x....      LDR.W    R0,??DataTable28_3
   \       0x64   0x.... 0x....      BL       _store_address
    292                ip_str = app_wisun_trace_util_get_ip_str(&_current_addr.global);
   \       0x68   0x0038             MOVS     R0,R7
   \       0x6A   0x.... 0x....      BL       app_wisun_trace_util_get_ip_str
   \       0x6E   0x0005             MOVS     R5,R0
    293                printf("[%s Network update: Global %s]\n", time_str, ip_str);
   \       0x70   0x002A             MOVS     R2,R5
   \       0x72   0x0021             MOVS     R1,R4
   \       0x74   0x.... 0x....      LDR.W    R0,??DataTable28_4
   \       0x78   0x.... 0x....      BL       printf
    294              }
    295              if (evt->evt.network_update.flags & (1 << SL_WISUN_NETWORK_UPDATE_FLAGS_PRIMARY_PARENT)) {
   \                     ??sl_wisun_network_update_event_hnd_2: (+1)
   \       0x7C   0x68B0             LDR      R0,[R6, #+8]
   \       0x7E   0x0780             LSLS     R0,R0,#+30
   \       0x80   0xD511             BPL.N    ??sl_wisun_network_update_event_hnd_3
    296                _store_address("PRIM_PARENT", SL_WISUN_IP_ADDRESS_TYPE_PRIMARY_PARENT, &_current_addr.primary_parent);
   \       0x82   0x.... 0x....      LDR.W    R7,??DataTable28_5
   \       0x86   0x003A             MOVS     R2,R7
   \       0x88   0x2103             MOVS     R1,#+3
   \       0x8A   0x.... 0x....      LDR.W    R0,??DataTable28_6
   \       0x8E   0x.... 0x....      BL       _store_address
    297                ip_str = app_wisun_trace_util_get_ip_str(&_current_addr.primary_parent);
   \       0x92   0x0038             MOVS     R0,R7
   \       0x94   0x.... 0x....      BL       app_wisun_trace_util_get_ip_str
   \       0x98   0x0005             MOVS     R5,R0
    298                printf("[%s Network update: Primary Parent %s]\n", time_str, ip_str);
   \       0x9A   0x002A             MOVS     R2,R5
   \       0x9C   0x0021             MOVS     R1,R4
   \       0x9E   0x.... 0x....      LDR.W    R0,??DataTable28_7
   \       0xA2   0x.... 0x....      BL       printf
    299              }
    300              if (evt->evt.network_update.flags & (1 << SL_WISUN_NETWORK_UPDATE_FLAGS_SECONDARY_PARENT)) {
   \                     ??sl_wisun_network_update_event_hnd_3: (+1)
   \       0xA6   0x68B0             LDR      R0,[R6, #+8]
   \       0xA8   0x0740             LSLS     R0,R0,#+29
   \       0xAA   0xD511             BPL.N    ??sl_wisun_network_update_event_hnd_1
    301                _store_address("SEC_PARENT", SL_WISUN_IP_ADDRESS_TYPE_SECONDARY_PARENT, &_current_addr.secondary_parent);
   \       0xAC   0x.... 0x....      LDR.W    R7,??DataTable28_8
   \       0xB0   0x003A             MOVS     R2,R7
   \       0xB2   0x2104             MOVS     R1,#+4
   \       0xB4   0x.... 0x....      LDR.W    R0,??DataTable28_9
   \       0xB8   0x.... 0x....      BL       _store_address
    302                ip_str = app_wisun_trace_util_get_ip_str(&_current_addr.secondary_parent);
   \       0xBC   0x0038             MOVS     R0,R7
   \       0xBE   0x.... 0x....      BL       app_wisun_trace_util_get_ip_str
   \       0xC2   0x0005             MOVS     R5,R0
    303                printf("[%s Network update: Secondary Parent %s]\n", time_str, ip_str);
   \       0xC4   0x002A             MOVS     R2,R5
   \       0xC6   0x0021             MOVS     R1,R4
   \       0xC8   0x.... 0x....      LDR.W    R0,??DataTable28_10
   \       0xCC   0x.... 0x....      BL       printf
    304              }
    305            }
    306          
    307            app_wisun_trace_util_destroy_ip_str(ip_str);
   \                     ??sl_wisun_network_update_event_hnd_1: (+1)
   \       0xD0   0x0028             MOVS     R0,R5
   \       0xD2   0x.... 0x....      BL       app_wisun_trace_util_destroy_ip_str
    308            app_wisun_trace_util_destroy_time_str(time_str);
   \       0xD6   0x0020             MOVS     R0,R4
   \       0xD8   0x.... 0x....      BL       app_wisun_trace_util_destroy_time_str
    309            __CHECK_FOR_STATUS(evt->evt.error.status);
   \       0xDC   0x6870             LDR      R0,[R6, #+4]
   \       0xDE   0x2800             CMP      R0,#+0
   \       0xE0   0xD006             BEQ.N    ??sl_wisun_network_update_event_hnd_4
   \       0xE2   0x6872             LDR      R2,[R6, #+4]
   \       0xE4   0x.... 0x....      LDR.W    R1,??DataTable28_11
   \       0xE8   0x.... 0x....      LDR.W    R0,??DataTable28_12
   \       0xEC   0x.... 0x....      BL       printf
    310          }
   \                     ??sl_wisun_network_update_event_hnd_4: (+1)
   \       0xF0   0xBDF7             POP      {R0-R2,R4-R7,PC}

   \                                 In section .bss, align 8
   \                     `sl_wisun_network_update_event_hnd::time`:
   \        0x0                      DS8 16
    311          
    312          /* Connected event handler */

   \                                 In section .text, align 2, keep-with-next
    313          void sl_wisun_connected_event_hnd(sl_wisun_evt_t *evt)
    314          {
   \                     sl_wisun_connected_event_hnd: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
    315            uint64_t time_ms = 0;
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x2100             MOVS     R1,#+0
   \        0x8   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
    316          
    317            if (evt->evt.connected.status != SL_STATUS_OK) {
   \        0xC   0x6860             LDR      R0,[R4, #+4]
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD00B             BEQ.N    ??sl_wisun_connected_event_hnd_0
    318              printf("[Connection failed. Status: %lu]\n", evt->evt.connected.status);
   \       0x12   0x6861             LDR      R1,[R4, #+4]
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable28_13
   \       0x18   0x.... 0x....      BL       printf
    319              _app_wisun_core_set_state(SL_WISUN_APP_CORE_STATE_NETWORK_DISCONNECTED);
   \       0x1C   0x2001             MOVS     R0,#+1
   \       0x1E   0x.... 0x....      BL       _app_wisun_core_set_state
    320              _app_wisun_core_clear_state(SL_WISUN_APP_CORE_STATE_NETWORK_CONNECTED);
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0x.... 0x....      BL       _app_wisun_core_clear_state
    321              return;
   \       0x28   0xE041             B.N      ??sl_wisun_connected_event_hnd_1
    322            }
    323            // store the current addresses
    324            _store_current_addresses();
   \                     ??sl_wisun_connected_event_hnd_0: (+1)
   \       0x2A   0x.... 0x....      BL       _store_current_addresses
    325          
    326            // update internal time stat
    327            sl_sleeptimer_tick64_to_ms(sl_sleeptimer_get_tick_count64(), &time_ms);
   \       0x2E   0x.... 0x....      BL       sl_sleeptimer_get_tick_count64
   \       0x32   0x466A             MOV      R2,SP
   \       0x34   0x.... 0x....      BL       sl_sleeptimer_tick64_to_ms
    328            _time_stat.tot_disconnected_ms += (time_ms  - _time_stat.connected_ms);
   \       0x38   0x.... 0x....      LDR.W    R5,??DataTable28
   \       0x3C   0xE9D5 0x0108      LDRD     R0,R1,[R5, #+32]
   \       0x40   0xE9DD 0x2300      LDRD     R2,R3,[SP, #+0]
   \       0x44   0x1880             ADDS     R0,R0,R2
   \       0x46   0x4159             ADCS     R1,R1,R3
   \       0x48   0xE9D5 0x2302      LDRD     R2,R3,[R5, #+8]
   \       0x4C   0x1A80             SUBS     R0,R0,R2
   \       0x4E   0x4199             SBCS     R1,R1,R3
   \       0x50   0xE9C5 0x0108      STRD     R0,R1,[R5, #+32]
    329            _time_stat.curr_ms = time_ms;
   \       0x54   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \       0x58   0xE9C5 0x0100      STRD     R0,R1,[R5, #+0]
    330            _time_stat.connected_ms = time_ms;
   \       0x5C   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \       0x60   0xE9C5 0x0102      STRD     R0,R1,[R5, #+8]
    331            ++_time_stat.conn_cnt;
   \       0x64   0x6AA8             LDR      R0,[R5, #+40]
   \       0x66   0x1C40             ADDS     R0,R0,#+1
   \       0x68   0x62A8             STR      R0,[R5, #+40]
    332          
    333            time_ms = time_ms - _time_stat.disconnected_ms;
   \       0x6A   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \       0x6E   0xE9D5 0x2306      LDRD     R2,R3,[R5, #+24]
   \       0x72   0x1A80             SUBS     R0,R0,R2
   \       0x74   0x4199             SBCS     R1,R1,R3
   \       0x76   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
    334          
    335            printf("[%lu s]\n", (uint32_t)time_ms / 1000U);
   \       0x7A   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \       0x7E   0xF44F 0x717A      MOV      R1,#+1000
   \       0x82   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \       0x86   0x.... 0x....      LDR.W    R0,??DataTable28_14
   \       0x8A   0x.... 0x....      BL       printf
    336            _app_wisun_core_set_state(SL_WISUN_APP_CORE_STATE_NETWORK_CONNECTED);
   \       0x8E   0x2000             MOVS     R0,#+0
   \       0x90   0x.... 0x....      BL       _app_wisun_core_set_state
    337            _app_wisun_core_clear_state(SL_WISUN_APP_CORE_STATE_NETWORK_DISCONNECTED);
   \       0x94   0x2001             MOVS     R0,#+1
   \       0x96   0x.... 0x....      BL       _app_wisun_core_clear_state
    338            __CHECK_FOR_STATUS(evt->evt.error.status);
   \       0x9A   0x6860             LDR      R0,[R4, #+4]
   \       0x9C   0x2800             CMP      R0,#+0
   \       0x9E   0xD006             BEQ.N    ??sl_wisun_connected_event_hnd_2
   \       0xA0   0x6862             LDR      R2,[R4, #+4]
   \       0xA2   0x.... 0x....      LDR.W    R1,??DataTable28_15
   \       0xA6   0x.... 0x....      LDR.W    R0,??DataTable28_12
   \       0xAA   0x.... 0x....      BL       printf
    339          }
   \                     ??sl_wisun_connected_event_hnd_2: (+1)
   \                     ??sl_wisun_connected_event_hnd_1: (+1)
   \       0xAE   0xBD37             POP      {R0-R2,R4,R5,PC}
    340          
    341          /* Socket disconnected event handler */

   \                                 In section .text, align 2, keep-with-next
    342          void sl_wisun_disconnected_event_hnd(sl_wisun_evt_t *evt)
    343          {
   \                     sl_wisun_disconnected_event_hnd: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
    344            uint64_t time_ms = 0;
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x2100             MOVS     R1,#+0
   \        0x8   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
    345          
    346            printf("[Disconnected]\n");
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable28_16
   \       0x10   0x.... 0x....      BL       printf
    347          
    348            // update internal time stat
    349            sl_sleeptimer_tick64_to_ms(sl_sleeptimer_get_tick_count64(), &time_ms);
   \       0x14   0x.... 0x....      BL       sl_sleeptimer_get_tick_count64
   \       0x18   0x466A             MOV      R2,SP
   \       0x1A   0x.... 0x....      BL       sl_sleeptimer_tick64_to_ms
    350            _time_stat.tot_connected_ms += (time_ms  - _time_stat.disconnected_ms);
   \       0x1E   0x.... 0x....      LDR.W    R5,??DataTable28
   \       0x22   0xE9D5 0x0104      LDRD     R0,R1,[R5, #+16]
   \       0x26   0xE9DD 0x2300      LDRD     R2,R3,[SP, #+0]
   \       0x2A   0x1880             ADDS     R0,R0,R2
   \       0x2C   0x4159             ADCS     R1,R1,R3
   \       0x2E   0xE9D5 0x2306      LDRD     R2,R3,[R5, #+24]
   \       0x32   0x1A80             SUBS     R0,R0,R2
   \       0x34   0x4199             SBCS     R1,R1,R3
   \       0x36   0xE9C5 0x0104      STRD     R0,R1,[R5, #+16]
    351            _time_stat.curr_ms = time_ms;
   \       0x3A   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \       0x3E   0xE9C5 0x0100      STRD     R0,R1,[R5, #+0]
    352            _time_stat.disconnected_ms = time_ms;
   \       0x42   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \       0x46   0xE9C5 0x0106      STRD     R0,R1,[R5, #+24]
    353          
    354            __CHECK_FOR_STATUS(evt->evt.error.status);
   \       0x4A   0x6860             LDR      R0,[R4, #+4]
   \       0x4C   0x2800             CMP      R0,#+0
   \       0x4E   0xD006             BEQ.N    ??sl_wisun_disconnected_event_hnd_0
   \       0x50   0x6862             LDR      R2,[R4, #+4]
   \       0x52   0x.... 0x....      LDR.W    R1,??DataTable28_17
   \       0x56   0x.... 0x....      LDR.W    R0,??DataTable28_12
   \       0x5A   0x.... 0x....      BL       printf
    355            _app_wisun_core_set_state(SL_WISUN_APP_CORE_STATE_NETWORK_DISCONNECTED);
   \                     ??sl_wisun_disconnected_event_hnd_0: (+1)
   \       0x5E   0x2001             MOVS     R0,#+1
   \       0x60   0x.... 0x....      BL       _app_wisun_core_set_state
    356            _join_state = SL_WISUN_JOIN_STATE_DISCONNECTED;
   \       0x64   0x2100             MOVS     R1,#+0
   \       0x66   0x.... 0x....      LDR.W    R0,??DataTable28_18
   \       0x6A   0x7001             STRB     R1,[R0, #+0]
    357          }
   \       0x6C   0xBD37             POP      {R0-R2,R4,R5,PC}
    358          
    359          /* Socket connection lost event handler*/

   \                                 In section .text, align 2, keep-with-next
    360          void sl_wisun_connection_lost_event_hnd(sl_wisun_evt_t *evt)
    361          {
   \                     sl_wisun_connection_lost_event_hnd: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0005             MOVS     R5,R0
    362            sl_status_t stat;
    363          
    364            // connect to network (using the PHY settings)
    365            stat = sl_wisun_join((const uint8_t *)_setting.network_name, &_setting.phy);
   \        0x4   0x.... 0x....      LDR.W    R6,??DataTable28_19
   \        0x8   0xF116 0x0126      ADDS     R1,R6,#+38
   \        0xC   0x0030             MOVS     R0,R6
   \        0xE   0x.... 0x....      BL       sl_wisun_join
   \       0x12   0x0004             MOVS     R4,R0
    366          
    367            if (stat == SL_STATUS_OK) {
   \       0x14   0x2C00             CMP      R4,#+0
   \       0x16   0xD104             BNE.N    ??sl_wisun_connection_lost_event_hnd_0
    368              printf("[Connection lost, connecting to \"%s\"]\n", _setting.network_name);
   \       0x18   0x0031             MOVS     R1,R6
   \       0x1A   0x.... 0x....      LDR.W    R0,??DataTable28_20
   \       0x1E   0x.... 0x....      BL       printf
    369            }
    370            _app_wisun_core_set_state(SL_WISUN_APP_CORE_STATE_NETWORK_CONNECTION_LOST);
   \                     ??sl_wisun_connection_lost_event_hnd_0: (+1)
   \       0x22   0x2002             MOVS     R0,#+2
   \       0x24   0x.... 0x....      BL       _app_wisun_core_set_state
    371            _app_wisun_core_set_state(SL_WISUN_APP_CORE_STATE_NETWORK_DISCONNECTED);
   \       0x28   0x2001             MOVS     R0,#+1
   \       0x2A   0x.... 0x....      BL       _app_wisun_core_set_state
    372            _app_wisun_core_clear_state(SL_WISUN_APP_CORE_STATE_NETWORK_CONNECTED);
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0x.... 0x....      BL       _app_wisun_core_clear_state
    373            __CHECK_FOR_STATUS(evt->evt.error.status);
   \       0x34   0x6868             LDR      R0,[R5, #+4]
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD006             BEQ.N    ??sl_wisun_connection_lost_event_hnd_1
   \       0x3A   0x686A             LDR      R2,[R5, #+4]
   \       0x3C   0x.... 0x....      LDR.W    R1,??DataTable28_21
   \       0x40   0x.... 0x....      LDR.W    R0,??DataTable28_12
   \       0x44   0x.... 0x....      BL       printf
    374          }
   \                     ??sl_wisun_connection_lost_event_hnd_1: (+1)
   \       0x48   0xBD70             POP      {R4-R6,PC}
    375          
    376          /* Error event handler */

   \                                 In section .text, align 2, keep-with-next
    377          void sl_wisun_error_event_hnd(sl_wisun_evt_t *evt)
    378          {
   \                     sl_wisun_error_event_hnd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    379            printf("[Wi-SUN network error occured. Status: %lu\n",
    380                   evt->evt.error.status);
   \        0x4   0x6861             LDR      R1,[R4, #+4]
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable28_22
   \        0xA   0x.... 0x....      BL       printf
    381          }
   \        0xE   0xBD10             POP      {R4,PC}
    382          
    383          /* Join state event handler */

   \                                 In section .text, align 2, keep-with-next
    384          void sl_wisun_join_state_event_hnd(sl_wisun_evt_t *evt)
    385          {
   \                     sl_wisun_join_state_event_hnd: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0005             MOVS     R5,R0
    386            _join_state = (sl_wisun_join_state_t)evt->evt.join_state.join_state;
   \        0x4   0x68A9             LDR      R1,[R5, #+8]
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable28_18
   \        0xA   0x7001             STRB     R1,[R0, #+0]
    387          #if HEARTBEAT_ENABLED
    388            (void) evt;
    389          #else
    390            const char *join_state_str = NULL;
   \        0xC   0x2600             MOVS     R6,#+0
    391            // if heartbeat not enabled, print join state
    392            join_state_str = app_wisun_trace_util_conn_state_to_str(_join_state);
   \        0xE   0x7800             LDRB     R0,[R0, #+0]
   \       0x10   0x.... 0x....      BL       app_wisun_trace_util_conn_state_to_str
   \       0x14   0x0004             MOVS     R4,R0
    393            if (join_state_str != NULL) {
   \       0x16   0x2C00             CMP      R4,#+0
   \       0x18   0xD005             BEQ.N    ??sl_wisun_join_state_event_hnd_0
    394              printf("[Join state: %s (%lu)]\n", join_state_str, evt->evt.join_state.join_state);
   \       0x1A   0x68AA             LDR      R2,[R5, #+8]
   \       0x1C   0x0021             MOVS     R1,R4
   \       0x1E   0x.... 0x....      LDR.W    R0,??DataTable28_23
   \       0x22   0x.... 0x....      BL       printf
    395            }
    396          #endif
    397            __CHECK_FOR_STATUS(evt->evt.error.status);
   \                     ??sl_wisun_join_state_event_hnd_0: (+1)
   \       0x26   0x6868             LDR      R0,[R5, #+4]
   \       0x28   0x2800             CMP      R0,#+0
   \       0x2A   0xD006             BEQ.N    ??sl_wisun_join_state_event_hnd_1
   \       0x2C   0x686A             LDR      R2,[R5, #+4]
   \       0x2E   0x.... 0x....      LDR.W    R1,??DataTable28_24
   \       0x32   0x.... 0x....      LDR.W    R0,??DataTable28_12
   \       0x36   0x.... 0x....      BL       printf
    398          }
   \                     ??sl_wisun_join_state_event_hnd_1: (+1)
   \       0x3A   0xBD70             POP      {R4-R6,PC}
    399          

   \                                 In section .text, align 2, keep-with-next
    400          void sl_wisun_lfn_wake_up_hnd(sl_wisun_evt_t *evt)
    401          {
   \                     sl_wisun_lfn_wake_up_hnd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    402            __CHECK_FOR_STATUS(evt->evt.error.status);
   \        0x4   0x6860             LDR      R0,[R4, #+4]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD006             BEQ.N    ??sl_wisun_lfn_wake_up_hnd_0
   \        0xA   0x6862             LDR      R2,[R4, #+4]
   \        0xC   0x.... 0x....      LDR.W    R1,??DataTable28_25
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable28_12
   \       0x14   0x.... 0x....      BL       printf
    403          }
   \                     ??sl_wisun_lfn_wake_up_hnd_0: (+1)
   \       0x18   0xBD10             POP      {R4,PC}
    404          

   \                                 In section .text, align 2, keep-with-next
    405          void sl_wisun_multicast_reg_finish_hnd(sl_wisun_evt_t *evt)
    406          {
   \                     sl_wisun_multicast_reg_finish_hnd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    407            __CHECK_FOR_STATUS(evt->evt.error.status);
   \        0x4   0x6860             LDR      R0,[R4, #+4]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD006             BEQ.N    ??sl_wisun_multicast_reg_finish_hnd_0
   \        0xA   0x6862             LDR      R2,[R4, #+4]
   \        0xC   0x.... 0x....      LDR.W    R1,??DataTable28_26
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable28_12
   \       0x14   0x.... 0x....      BL       printf
    408          }
   \                     ??sl_wisun_multicast_reg_finish_hnd_0: (+1)
   \       0x18   0xBD10             POP      {R4,PC}
    409          
    410          /* Wisun app core init */

   \                                 In section .text, align 2, keep-with-next
    411          void sl_wisun_app_core_init(void)
    412          {
   \                     sl_wisun_app_core_init: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    413            // init wisun network mutex
    414            _app_core_mtx = osMutexNew(&_app_wisun_mtx_attr);
   \        0x2   0x.... 0x....      LDR.W    R4,??DataTable28_27
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable28_28
   \        0xA   0x.... 0x....      BL       osMutexNew
   \        0xE   0x6020             STR      R0,[R4, #+0]
    415            assert(_app_core_mtx != NULL);
   \       0x10   0x6820             LDR      R0,[R4, #+0]
   \       0x12   0x2800             CMP      R0,#+0
   \       0x14   0xD109             BNE.N    ??sl_wisun_app_core_init_0
   \       0x16   0xF240 0x129F      MOVW     R2,#+415
   \       0x1A   0x.... 0x....      LDR.W    R1,??DataTable28_29
   \       0x1E   0x.... 0x....      LDR.W    R0,??DataTable28_30
   \       0x22   0x.... 0x....      BL       __aeabi_assert
   \       0x26   0x.... 0x....      BL       __iar_EmptyStepPoint
    416          
    417            _app_core_state = osEventFlagsNew(&_app_wisun_evt_attr);
   \                     ??sl_wisun_app_core_init_0: (+1)
   \       0x2A   0x.... 0x....      LDR.W    R4,??DataTable28_31
   \       0x2E   0x.... 0x....      LDR.W    R0,??DataTable28_32
   \       0x32   0x.... 0x....      BL       osEventFlagsNew
   \       0x36   0x6020             STR      R0,[R4, #+0]
    418            assert(_app_core_state != NULL);
   \       0x38   0x6820             LDR      R0,[R4, #+0]
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD109             BNE.N    ??sl_wisun_app_core_init_1
   \       0x3E   0xF44F 0x72D1      MOV      R2,#+418
   \       0x42   0x.... 0x....      LDR.W    R1,??DataTable28_29
   \       0x46   0x.... 0x....      LDR.W    R0,??DataTable28_33
   \       0x4A   0x.... 0x....      BL       __aeabi_assert
   \       0x4E   0x.... 0x....      BL       __iar_EmptyStepPoint
    419          }
   \                     ??sl_wisun_app_core_init_1: (+1)
   \       0x52   0xBD10             POP      {R4,PC}
    420          
    421          /* App core get error */

   \                                 In section .text, align 2, keep-with-next
    422          sl_status_t sl_wisun_app_core_get_state(uint32_t * const state)
    423          {
   \                     sl_wisun_app_core_get_state: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    424            *state = osEventFlagsGet(_app_core_state);
   \        0x4   0x.... 0x....      LDR.W    R0,??DataTable28_31
   \        0x8   0x6800             LDR      R0,[R0, #+0]
   \        0xA   0x.... 0x....      BL       osEventFlagsGet
   \        0xE   0x6020             STR      R0,[R4, #+0]
    425            // Check error flag
    426            if (*state & APP_WISUN_EVTFLAG_ERROR_MSK) {
   \       0x10   0x6820             LDR      R0,[R4, #+0]
   \       0x12   0x2800             CMP      R0,#+0
   \       0x14   0xD501             BPL.N    ??sl_wisun_app_core_get_state_0
    427              return SL_STATUS_FAIL;
   \       0x16   0x2001             MOVS     R0,#+1
   \       0x18   0xE000             B.N      ??sl_wisun_app_core_get_state_1
    428            }
    429            return SL_STATUS_OK;
   \                     ??sl_wisun_app_core_get_state_0: (+1)
   \       0x1A   0x2000             MOVS     R0,#+0
   \                     ??sl_wisun_app_core_get_state_1: (+1)
   \       0x1C   0xBD10             POP      {R4,PC}
    430          }
    431          

   \                                 In section .text, align 2, keep-with-next
    432          sl_status_t sl_wisun_app_core_wait_state(const uint32_t state, const uint32_t timeout)
    433          {
   \                     sl_wisun_app_core_wait_state: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    434            uint32_t ret = 0UL;
   \        0x6   0x2600             MOVS     R6,#+0
    435            ret = osEventFlagsWait(_app_core_state, state, osFlagsWaitAll | osFlagsNoClear, timeout);
   \        0x8   0x002B             MOVS     R3,R5
   \        0xA   0x2203             MOVS     R2,#+3
   \        0xC   0x0021             MOVS     R1,R4
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable28_31
   \       0x12   0x6800             LDR      R0,[R0, #+0]
   \       0x14   0x.... 0x....      BL       osEventFlagsWait
    436            return (ret & APP_WISUN_EVTFLAG_ERROR_MSK) ? SL_STATUS_FAIL : SL_STATUS_OK;
   \       0x18   0x0FC0             LSRS     R0,R0,#+31
   \       0x1A   0xBD70             POP      {R4-R6,PC}
    437          }
    438          
    439          /*Connecting to the wisun network*/

   \                                 In section .text, align 2, keep-with-next
    440          void sl_wisun_app_core_network_connect(void)
    441          {
   \                     sl_wisun_app_core_network_connect: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB084             SUB      SP,SP,#+16
    442            sl_status_t ret = SL_STATUS_FAIL;
   \        0x4   0x2501             MOVS     R5,#+1
    443            sl_wisun_join_state_t join_state = SL_WISUN_JOIN_STATE_DISCONNECTED;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0xF88D 0x0000      STRB     R0,[SP, #+0]
    444            uint64_t time_ms = 0ULL;
   \        0xC   0x2000             MOVS     R0,#+0
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0xE9CD 0x0102      STRD     R0,R1,[SP, #+8]
    445          
    446            _app_wisun_mutex_acquire(); // get mutex
   \       0x14   0x.... 0x....      BL       _app_wisun_mutex_acquire
    447          
    448          #if defined(SL_CATALOG_WISUN_APP_SETTING_PRESENT)
    449            // Init app PHY config
    450            ret = app_wisun_setting_init_phy_cfg();
   \       0x18   0x.... 0x....      BL       app_wisun_setting_init_phy_cfg
   \       0x1C   0x0007             MOVS     R7,R0
    451          
    452            // get full settings (PHY, network name, network size and TX power)
    453            ret = app_wisun_setting_get(&_setting);
   \       0x1E   0x.... 0x....      LDR.W    R6,??DataTable28_19
   \       0x22   0x0030             MOVS     R0,R6
   \       0x24   0x.... 0x....      BL       app_wisun_setting_get
   \       0x28   0x0004             MOVS     R4,R0
    454            if (ret != SL_STATUS_OK) {
   \       0x2A   0x2C00             CMP      R4,#+0
   \       0x2C   0xD009             BEQ.N    ??sl_wisun_app_core_network_connect_0
    455              printf("[Failed: unable to get settings\n");
   \       0x2E   0x.... 0x....      LDR.W    R0,??DataTable28_34
   \       0x32   0x.... 0x....      BL       printf
    456              _app_wisun_core_set_state(SL_WISUN_APP_CORE_STATE_SETTING_ERROR);
   \       0x36   0x2003             MOVS     R0,#+3
   \       0x38   0x.... 0x....      BL       _app_wisun_core_set_state
    457              _return_and_mtx_release();
   \       0x3C   0x.... 0x....      BL       _app_wisun_mutex_release
   \       0x40   0xE053             B.N      ??sl_wisun_app_core_network_connect_1
    458            }
    459          #else
    460            memcpy(&_setting, &_app_default_settings, sizeof(app_setting_wisun_t));
    461          #endif
    462          
    463            // check join state before connection progress.
    464            ret = sl_wisun_get_join_state(&join_state);
   \                     ??sl_wisun_app_core_network_connect_0: (+1)
   \       0x42   0x4668             MOV      R0,SP
   \       0x44   0x.... 0x....      BL       sl_wisun_get_join_state
   \       0x48   0x0005             MOVS     R5,R0
    465            __CHECK_FOR_STATUS(ret);
   \       0x4A   0x2D00             CMP      R5,#+0
   \       0x4C   0xD006             BEQ.N    ??sl_wisun_app_core_network_connect_2
   \       0x4E   0x002A             MOVS     R2,R5
   \       0x50   0x.... 0x....      LDR.W    R1,??DataTable28_35
   \       0x54   0x.... 0x....      LDR.W    R0,??DataTable28_12
   \       0x58   0x.... 0x....      BL       printf
    466            if (join_state != SL_WISUN_JOIN_STATE_DISCONNECTED) {
   \                     ??sl_wisun_app_core_network_connect_2: (+1)
   \       0x5C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x60   0x2800             CMP      R0,#+0
   \       0x62   0xD006             BEQ.N    ??sl_wisun_app_core_network_connect_3
    467              printf("[Failed: already connecting or connected]\n");
   \       0x64   0x.... 0x....      LDR.W    R0,??DataTable28_36
   \       0x68   0x.... 0x....      BL       printf
    468              _return_and_mtx_release();
   \       0x6C   0x.... 0x....      BL       _app_wisun_mutex_release
   \       0x70   0xE03B             B.N      ??sl_wisun_app_core_network_connect_1
    469            }
    470          
    471            // application settings
    472            ret = _app_wisun_application_setting(&_setting);
   \                     ??sl_wisun_app_core_network_connect_3: (+1)
   \       0x72   0x0030             MOVS     R0,R6
   \       0x74   0x.... 0x....      BL       _app_wisun_application_setting
   \       0x78   0x0004             MOVS     R4,R0
    473            if (ret != SL_STATUS_OK) {
   \       0x7A   0x2C00             CMP      R4,#+0
   \       0x7C   0xD002             BEQ.N    ??sl_wisun_app_core_network_connect_4
    474              _return_and_mtx_release();
   \       0x7E   0x.... 0x....      BL       _app_wisun_mutex_release
   \       0x82   0xE032             B.N      ??sl_wisun_app_core_network_connect_1
    475            }
    476          
    477            // security settings
    478            ret = _app_wisun_security_setting();
   \                     ??sl_wisun_app_core_network_connect_4: (+1)
   \       0x84   0x.... 0x....      BL       _app_wisun_security_setting
   \       0x88   0x0005             MOVS     R5,R0
    479            if (ret != SL_STATUS_OK) {
   \       0x8A   0x2D00             CMP      R5,#+0
   \       0x8C   0xD002             BEQ.N    ??sl_wisun_app_core_network_connect_5
    480              _return_and_mtx_release();
   \       0x8E   0x.... 0x....      BL       _app_wisun_mutex_release
   \       0x92   0xE02A             B.N      ??sl_wisun_app_core_network_connect_1
    481            }
    482          
    483          #if (SL_WISUN_APP_CORE_REGULATION != SL_WISUN_APP_CORE_REGULATION_NONE)
    484            ret = _app_wisun_regulation_setting();
    485            if (ret != SL_STATUS_OK) {
    486              _return_and_mtx_release();
    487            }
    488          #endif
    489          
    490            ret = sl_wisun_join((const uint8_t *)_setting.network_name, &_setting.phy);
   \                     ??sl_wisun_app_core_network_connect_5: (+1)
   \       0x94   0xF116 0x0126      ADDS     R1,R6,#+38
   \       0x98   0x0030             MOVS     R0,R6
   \       0x9A   0x.... 0x....      BL       sl_wisun_join
   \       0x9E   0x0004             MOVS     R4,R0
    491          
    492            if (ret == SL_STATUS_OK) {
   \       0xA0   0x2C00             CMP      R4,#+0
   \       0xA2   0xD118             BNE.N    ??sl_wisun_app_core_network_connect_6
    493              // update internal time stat
    494              sl_sleeptimer_tick64_to_ms(sl_sleeptimer_get_tick_count64(), &time_ms);
   \       0xA4   0x.... 0x....      BL       sl_sleeptimer_get_tick_count64
   \       0xA8   0xAA02             ADD      R2,SP,#+8
   \       0xAA   0x.... 0x....      BL       sl_sleeptimer_tick64_to_ms
    495              _time_stat.curr_ms = time_ms;
   \       0xAE   0x.... 0x....      LDR.W    R2,??DataTable28
   \       0xB2   0xE9DD 0x0102      LDRD     R0,R1,[SP, #+8]
   \       0xB6   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    496              _time_stat.connected_ms = time_ms;
   \       0xBA   0xE9DD 0x0102      LDRD     R0,R1,[SP, #+8]
   \       0xBE   0xE9C2 0x0102      STRD     R0,R1,[R2, #+8]
    497              _time_stat.disconnected_ms = time_ms;
   \       0xC2   0xE9DD 0x0102      LDRD     R0,R1,[SP, #+8]
   \       0xC6   0xE9C2 0x0106      STRD     R0,R1,[R2, #+24]
    498          
    499              printf("\n[Connecting to \"%s\"]\n", _setting.network_name);
   \       0xCA   0x0031             MOVS     R1,R6
   \       0xCC   0x.... 0x....      LDR.W    R0,??DataTable28_37
   \       0xD0   0x.... 0x....      BL       printf
   \       0xD4   0xE007             B.N      ??sl_wisun_app_core_network_connect_7
    500            } else {
    501              _app_wisun_core_set_state(SL_WISUN_APP_CORE_STATE_CONNECTION_ERROR);
   \                     ??sl_wisun_app_core_network_connect_6: (+1)
   \       0xD6   0x2004             MOVS     R0,#+4
   \       0xD8   0x.... 0x....      BL       _app_wisun_core_set_state
    502              printf("\n[Connection failed: %lu]\n", ret);
   \       0xDC   0x0021             MOVS     R1,R4
   \       0xDE   0x.... 0x....      LDR.W    R0,??DataTable28_38
   \       0xE2   0x.... 0x....      BL       printf
    503            }
    504            _app_wisun_mutex_release();
   \                     ??sl_wisun_app_core_network_connect_7: (+1)
   \       0xE6   0x.... 0x....      BL       _app_wisun_mutex_release
    505          }
   \                     ??sl_wisun_app_core_network_connect_1: (+1)
   \       0xEA   0xB005             ADD      SP,SP,#+20
   \       0xEC   0xBDF0             POP      {R4-R7,PC}
    506          

   \                                 In section .text, align 2, keep-with-next
    507          void sl_wisun_regulation_tx_level_hnd(sl_wisun_evt_t *evt)
    508          {
    509            (void)*evt;
    510          }
   \                     sl_wisun_regulation_tx_level_hnd: (+1)
   \        0x0   0x4770             BX       LR
    511          

   \                                 In section .text, align 2, keep-with-next
    512          void sl_wisun_app_core_get_current_addresses(sl_wisun_app_core_current_addr_t * const dest_addresses)
    513          {
   \                     sl_wisun_app_core_get_current_addresses: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB084             SUB      SP,SP,#+16
   \        0x6   0x0004             MOVS     R4,R0
    514            _app_wisun_mutex_acquire();
   \        0x8   0x.... 0x....      BL       _app_wisun_mutex_acquire
    515            memcpy(&dest_addresses->global, &_current_addr.global, sizeof(in6_addr_t));
   \        0xC   0x2510             MOVS     R5,#+16
   \        0xE   0x.... 0x....      LDR.W    R6,??DataTable28_39
   \       0x12   0xF116 0x0010      ADDS     R0,R6,#+16
   \       0x16   0x9003             STR      R0,[SP, #+12]
   \       0x18   0xF114 0x0710      ADDS     R7,R4,#+16
   \       0x1C   0x002A             MOVS     R2,R5
   \       0x1E   0x9903             LDR      R1,[SP, #+12]
   \       0x20   0x0038             MOVS     R0,R7
   \       0x22   0x.... 0x....      BL       __aeabi_memcpy
    516            memcpy(&dest_addresses->border_router, &_current_addr.border_router, sizeof(in6_addr_t));
   \       0x26   0x2710             MOVS     R7,#+16
   \       0x28   0xF116 0x0020      ADDS     R0,R6,#+32
   \       0x2C   0x9002             STR      R0,[SP, #+8]
   \       0x2E   0xF114 0x0820      ADDS     R8,R4,#+32
   \       0x32   0x003A             MOVS     R2,R7
   \       0x34   0x9902             LDR      R1,[SP, #+8]
   \       0x36   0x4640             MOV      R0,R8
   \       0x38   0x.... 0x....      BL       __aeabi_memcpy
    517            memcpy(&dest_addresses->link_local, &_current_addr.link_local, sizeof(in6_addr_t));
   \       0x3C   0xF05F 0x0810      MOVS     R8,#+16
   \       0x40   0x9601             STR      R6,[SP, #+4]
   \       0x42   0x46A1             MOV      R9,R4
   \       0x44   0x4642             MOV      R2,R8
   \       0x46   0x9901             LDR      R1,[SP, #+4]
   \       0x48   0x4648             MOV      R0,R9
   \       0x4A   0x.... 0x....      BL       __aeabi_memcpy
    518            memcpy(&dest_addresses->primary_parent, &_current_addr.primary_parent, sizeof(in6_addr_t));
   \       0x4E   0xF05F 0x0910      MOVS     R9,#+16
   \       0x52   0xF116 0x0030      ADDS     R0,R6,#+48
   \       0x56   0x9000             STR      R0,[SP, #+0]
   \       0x58   0xF114 0x0A30      ADDS     R10,R4,#+48
   \       0x5C   0x464A             MOV      R2,R9
   \       0x5E   0x9900             LDR      R1,[SP, #+0]
   \       0x60   0x4650             MOV      R0,R10
   \       0x62   0x.... 0x....      BL       __aeabi_memcpy
    519            memcpy(&dest_addresses->secondary_parent, &_current_addr.secondary_parent, sizeof(in6_addr_t));
   \       0x66   0xF05F 0x0A10      MOVS     R10,#+16
   \       0x6A   0xF116 0x0B40      ADDS     R11,R6,#+64
   \       0x6E   0xF114 0x0640      ADDS     R6,R4,#+64
   \       0x72   0x4652             MOV      R2,R10
   \       0x74   0x4659             MOV      R1,R11
   \       0x76   0x0030             MOVS     R0,R6
   \       0x78   0x.... 0x....      BL       __aeabi_memcpy
    520            _app_wisun_mutex_release();
   \       0x7C   0x.... 0x....      BL       _app_wisun_mutex_release
    521          }
   \       0x80   0xB005             ADD      SP,SP,#+20
   \       0x82   0xE8BD 0x8FF0      POP      {R4-R11,PC}
    522          

   \                                 In section .text, align 2, keep-with-next
    523          void sl_wisun_app_core_set_regulation_active(bool enabled)
    524          {
   \                     sl_wisun_app_core_set_regulation_active: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    525            _app_wisun_mutex_acquire();
   \        0x4   0x.... 0x....      BL       _app_wisun_mutex_acquire
    526            _regional_regulation_active = enabled;
   \        0x8   0x.... 0x....      LDR.W    R0,??DataTable28_40
   \        0xC   0x7004             STRB     R4,[R0, #+0]
    527            _app_wisun_mutex_release();
   \        0xE   0x.... 0x....      BL       _app_wisun_mutex_release
    528          }
   \       0x12   0xBD10             POP      {R4,PC}
    529          

   \                                 In section .text, align 2, keep-with-next
    530          bool sl_wisun_app_core_get_regulation_active(void)
    531          {
   \                     sl_wisun_app_core_get_regulation_active: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    532            bool retval;
    533            _app_wisun_mutex_acquire();
   \        0x2   0x.... 0x....      BL       _app_wisun_mutex_acquire
    534            retval = _regional_regulation_active;
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable28_40
   \        0xA   0x7804             LDRB     R4,[R0, #+0]
    535            _app_wisun_mutex_release();
   \        0xC   0x.... 0x....      BL       _app_wisun_mutex_release
    536            return retval;
   \       0x10   0x0020             MOVS     R0,R4
   \       0x12   0xB2C0             UXTB     R0,R0
   \       0x14   0xBD10             POP      {R4,PC}
    537          }
    538          

   \                                 In section .text, align 2, keep-with-next
    539          void sl_wisun_app_core_set_regulation_thresholds(const int8_t warning_level, const  int8_t alert_level)
    540          {
   \                     sl_wisun_app_core_set_regulation_thresholds: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    541            _app_wisun_mutex_acquire();
   \        0x6   0x.... 0x....      BL       _app_wisun_mutex_acquire
    542            _tresholds.warning_threshold = warning_level;
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable28_41
   \        0xE   0x7004             STRB     R4,[R0, #+0]
    543            _tresholds.alert_threshold = alert_level;
   \       0x10   0x7045             STRB     R5,[R0, #+1]
    544            _app_wisun_mutex_release();
   \       0x12   0x.... 0x....      BL       _app_wisun_mutex_release
    545          }
   \       0x16   0xBD31             POP      {R0,R4,R5,PC}
    546          

   \                                 In section .text, align 2, keep-with-next
    547          sl_status_t sl_wisun_app_core_get_regulation_thresholds(sl_wisun_app_core_reg_thresholds_t* thresholds_out)
    548          {
   \                     sl_wisun_app_core_get_regulation_thresholds: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    549            if (thresholds_out == NULL) {
   \        0x4   0x2C00             CMP      R4,#+0
   \        0x6   0xD101             BNE.N    ??sl_wisun_app_core_get_regulation_thresholds_0
    550              return SL_STATUS_FAIL;
   \        0x8   0x2001             MOVS     R0,#+1
   \        0xA   0xE00A             B.N      ??sl_wisun_app_core_get_regulation_thresholds_1
    551            }
    552          
    553            _app_wisun_mutex_acquire();
   \                     ??sl_wisun_app_core_get_regulation_thresholds_0: (+1)
   \        0xC   0x.... 0x....      BL       _app_wisun_mutex_acquire
    554            thresholds_out->warning_threshold = _tresholds.warning_threshold;
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable28_41
   \       0x14   0x7808             LDRB     R0,[R1, #+0]
   \       0x16   0x7020             STRB     R0,[R4, #+0]
    555            thresholds_out->alert_threshold = _tresholds.alert_threshold;
   \       0x18   0x7848             LDRB     R0,[R1, #+1]
   \       0x1A   0x7060             STRB     R0,[R4, #+1]
    556            _app_wisun_mutex_release();
   \       0x1C   0x.... 0x....      BL       _app_wisun_mutex_release
    557            return SL_STATUS_OK;
   \       0x20   0x2000             MOVS     R0,#+0
   \                     ??sl_wisun_app_core_get_regulation_thresholds_1: (+1)
   \       0x22   0xBD10             POP      {R4,PC}
    558          }
    559          

   \                                 In section .text, align 2, keep-with-next
    560          sl_status_t sl_wisun_app_core_get_remaining_tx_budget(uint32_t* const budget_out)
    561          {
   \                     sl_wisun_app_core_get_remaining_tx_budget: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB09A             SUB      SP,SP,#+104
   \        0x4   0x0004             MOVS     R4,R0
    562            sl_wisun_statistics_t stat;
    563            sl_status_t ret = SL_STATUS_FAIL;
   \        0x6   0x2501             MOVS     R5,#+1
    564          
    565            if (!_regional_regulation_active || budget_out == NULL) {
   \        0x8   0x.... 0x....      LDR.W    R0,??DataTable28_40
   \        0xC   0x7800             LDRB     R0,[R0, #+0]
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD001             BEQ.N    ??sl_wisun_app_core_get_remaining_tx_budget_0
   \       0x12   0x2C00             CMP      R4,#+0
   \       0x14   0xD101             BNE.N    ??sl_wisun_app_core_get_remaining_tx_budget_1
    566              return ret;
   \                     ??sl_wisun_app_core_get_remaining_tx_budget_0: (+1)
   \       0x16   0x0028             MOVS     R0,R5
   \       0x18   0xE017             B.N      ??sl_wisun_app_core_get_remaining_tx_budget_2
    567            }
    568          
    569            _app_wisun_mutex_acquire();
   \                     ??sl_wisun_app_core_get_remaining_tx_budget_1: (+1)
   \       0x1A   0x.... 0x....      BL       _app_wisun_mutex_acquire
    570          
    571            if (sl_wisun_get_statistics(SL_WISUN_STATISTICS_TYPE_REGULATION, &stat) == SL_STATUS_OK) {
   \       0x1E   0x4669             MOV      R1,SP
   \       0x20   0x2005             MOVS     R0,#+5
   \       0x22   0x.... 0x....      BL       sl_wisun_get_statistics
   \       0x26   0x2800             CMP      R0,#+0
   \       0x28   0xD10B             BNE.N    ??sl_wisun_app_core_get_remaining_tx_budget_3
    572              // return a meaningful value (budget remaning) or zero (exceeded)
    573              *budget_out = (stat.regulation.arib.tx_duration_ms < SL_WISUN_APP_CORE_TX_BUDGET)
    574                            ? (SL_WISUN_APP_CORE_TX_BUDGET - stat.regulation.arib.tx_duration_ms) : 0UL;
   \       0x2A   0x.... 0x....      LDR.W    R1,??DataTable28_42
   \       0x2E   0x9800             LDR      R0,[SP, #+0]
   \       0x30   0x4288             CMP      R0,R1
   \       0x32   0xD202             BCS.N    ??sl_wisun_app_core_get_remaining_tx_budget_4
   \       0x34   0x9800             LDR      R0,[SP, #+0]
   \       0x36   0x1A09             SUBS     R1,R1,R0
   \       0x38   0xE000             B.N      ??sl_wisun_app_core_get_remaining_tx_budget_5
   \                     ??sl_wisun_app_core_get_remaining_tx_budget_4: (+1)
   \       0x3A   0x2100             MOVS     R1,#+0
   \                     ??sl_wisun_app_core_get_remaining_tx_budget_5: (+1)
   \       0x3C   0x6021             STR      R1,[R4, #+0]
    575              ret = SL_STATUS_OK;
   \       0x3E   0x2600             MOVS     R6,#+0
   \       0x40   0xE000             B.N      ??sl_wisun_app_core_get_remaining_tx_budget_6
    576            } else {
    577              ret = SL_STATUS_FAIL;
   \                     ??sl_wisun_app_core_get_remaining_tx_budget_3: (+1)
   \       0x42   0x2601             MOVS     R6,#+1
    578            }
    579            _app_wisun_mutex_release();
   \                     ??sl_wisun_app_core_get_remaining_tx_budget_6: (+1)
   \       0x44   0x.... 0x....      BL       _app_wisun_mutex_release
    580          
    581            return ret;
   \       0x48   0x0030             MOVS     R0,R6
   \                     ??sl_wisun_app_core_get_remaining_tx_budget_2: (+1)
   \       0x4A   0xB01A             ADD      SP,SP,#+104
   \       0x4C   0xBD70             POP      {R4-R6,PC}
    582          }
    583          

   \                                 In section .text, align 2, keep-with-next
    584          sl_wisun_join_state_t sl_wisun_app_core_get_join_state(void)
    585          {
   \                     sl_wisun_app_core_get_join_state: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    586            sl_wisun_join_state_t join_state = SL_WISUN_JOIN_STATE_DISCONNECTED;
   \        0x2   0x2400             MOVS     R4,#+0
    587            _app_wisun_mutex_acquire();
   \        0x4   0x.... 0x....      BL       _app_wisun_mutex_acquire
    588            join_state = _join_state;
   \        0x8   0x....             LDR.N    R0,??DataTable28_18
   \        0xA   0x7805             LDRB     R5,[R0, #+0]
    589            _app_wisun_mutex_release();
   \        0xC   0x.... 0x....      BL       _app_wisun_mutex_release
    590            return join_state;
   \       0x10   0x0028             MOVS     R0,R5
   \       0x12   0xB2C0             UXTB     R0,R0
   \       0x14   0xBD32             POP      {R1,R4,R5,PC}
    591          }
    592          

   \                                 In section .text, align 2, keep-with-next
    593          void sl_wisun_app_core_get_time_stat(sl_wisun_app_core_time_stat_t * const tstat)
    594          {
   \                     sl_wisun_app_core_get_time_stat: (+1)
   \        0x0   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
    595            uint64_t time_ms = 0ULL;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x2100             MOVS     R1,#+0
   \        0xA   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
    596          
    597            _app_wisun_mutex_acquire();
   \        0xE   0x.... 0x....      BL       _app_wisun_mutex_acquire
    598          
    599            // update current time
    600            sl_sleeptimer_tick64_to_ms(sl_sleeptimer_get_tick_count64(), &time_ms);
   \       0x12   0x.... 0x....      BL       sl_sleeptimer_get_tick_count64
   \       0x16   0x466A             MOV      R2,SP
   \       0x18   0x.... 0x....      BL       sl_sleeptimer_tick64_to_ms
    601          
    602            memcpy(tstat, &_time_stat, sizeof(sl_wisun_app_core_time_stat_t));
   \       0x1C   0x2530             MOVS     R5,#+48
   \       0x1E   0x....             LDR.N    R7,??DataTable28
   \       0x20   0x003E             MOVS     R6,R7
   \       0x22   0x46A0             MOV      R8,R4
   \       0x24   0x002A             MOVS     R2,R5
   \       0x26   0x0031             MOVS     R1,R6
   \       0x28   0x4640             MOV      R0,R8
   \       0x2A   0x.... 0x....      BL       __aeabi_memcpy
    603          
    604            // add diff beetween current time and last update time to the actual state
    605            tstat->curr_ms = time_ms;
   \       0x2E   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \       0x32   0xE9C4 0x0100      STRD     R0,R1,[R4, #+0]
    606            time_ms = tstat->curr_ms - _time_stat.curr_ms;
   \       0x36   0xE9D4 0x0100      LDRD     R0,R1,[R4, #+0]
   \       0x3A   0xE9D7 0x2300      LDRD     R2,R3,[R7, #+0]
   \       0x3E   0x1A80             SUBS     R0,R0,R2
   \       0x40   0x4199             SBCS     R1,R1,R3
   \       0x42   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
    607            if (_join_state != SL_WISUN_JOIN_STATE_OPERATIONAL) {
   \       0x46   0x....             LDR.N    R0,??DataTable28_18
   \       0x48   0x7800             LDRB     R0,[R0, #+0]
   \       0x4A   0x2805             CMP      R0,#+5
   \       0x4C   0xD008             BEQ.N    ??sl_wisun_app_core_get_time_stat_0
    608              tstat->tot_disconnected_ms += time_ms;
   \       0x4E   0xE9D4 0x2308      LDRD     R2,R3,[R4, #+32]
   \       0x52   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \       0x56   0x1810             ADDS     R0,R2,R0
   \       0x58   0x4159             ADCS     R1,R3,R1
   \       0x5A   0xE9C4 0x0108      STRD     R0,R1,[R4, #+32]
   \       0x5E   0xE007             B.N      ??sl_wisun_app_core_get_time_stat_1
    609            } else {
    610              tstat->tot_connected_ms += time_ms;
   \                     ??sl_wisun_app_core_get_time_stat_0: (+1)
   \       0x60   0xE9D4 0x2304      LDRD     R2,R3,[R4, #+16]
   \       0x64   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \       0x68   0x1810             ADDS     R0,R2,R0
   \       0x6A   0x4159             ADCS     R1,R3,R1
   \       0x6C   0xE9C4 0x0104      STRD     R0,R1,[R4, #+16]
    611            }
    612          
    613            _app_wisun_mutex_release();
   \                     ??sl_wisun_app_core_get_time_stat_1: (+1)
   \       0x70   0x.... 0x....      BL       _app_wisun_mutex_release
    614          }
   \       0x74   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}
    615          #if defined(SL_CATALOG_WISUN_LFN_DEVICE_SUPPORT_PRESENT)
    616          
    617          sl_wisun_device_type_t sl_wisun_app_core_get_device_type(void)
    618          {
    619            return (sl_wisun_device_type_t)_setting.device_type;
    620          }
    621          
    622          sl_wisun_lfn_profile_t sl_wisun_app_core_get_lfn_profile(void)
    623          {
    624            return (sl_wisun_lfn_profile_t)_setting.lfn_profile;
    625          }
    626          
    627          const sl_wisun_lfn_params_t *sl_wisun_app_core_get_lfn_params(void)
    628          {
    629            // Not lfn device
    630            if (_setting.device_type != SL_WISUN_LFN) {
    631              return NULL;
    632            }
    633          
    634            switch (_setting.lfn_profile) {
    635              case SL_WISUN_LFN_PROFILE_TEST:
    636                return &SL_WISUN_PARAMS_LFN_TEST;
    637              case SL_WISUN_LFN_PROFILE_BALANCED:
    638                return &SL_WISUN_PARAMS_LFN_BALANCED;
    639              case SL_WISUN_LFN_PROFILE_ECO:
    640                return &SL_WISUN_PARAMS_LFN_ECO;
    641              default:
    642                return NULL;
    643            }
    644          }
    645          #endif
    646          
    647          // -----------------------------------------------------------------------------
    648          //                          Static Function Definitions
    649          // -----------------------------------------------------------------------------
    650          

   \                                 In section .text, align 2, keep-with-next
    651          static sl_status_t _app_wisun_application_setting(const app_setting_wisun_t * const setting)
    652          {
   \                     _app_wisun_application_setting: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0xB09C             SUB      SP,SP,#+112
   \        0x6   0x0006             MOVS     R6,R0
    653            sl_status_t ret = SL_STATUS_FAIL;
   \        0x8   0x2401             MOVS     R4,#+1
    654            const sl_wisun_connection_params_t *conn_param = NULL;
   \        0xA   0x2700             MOVS     R7,#+0
   \        0xC   0x2170             MOVS     R1,#+112
   \        0xE   0x2200             MOVS     R2,#+0
   \       0x10   0x466D             MOV      R5,SP
   \       0x12   0x0028             MOVS     R0,R5
   \       0x14   0x.... 0x....      BL       __aeabi_memset
    655          #if defined(WISUN_CONFIG_BROADCAST_RETRIES)
    656            sl_wisun_connection_params_t update_param = { 0 };
    657          #endif
    658          
    659            conn_param = sl_wisun_get_conn_param_by_nw_size((sl_wisun_network_size_t) setting->network_size);
   \       0x18   0xF896 0x0021      LDRB     R0,[R6, #+33]
   \       0x1C   0x.... 0x....      BL       sl_wisun_get_conn_param_by_nw_size
   \       0x20   0x4682             MOV      R10,R0
    660          
    661            ret = sl_wisun_set_device_type((sl_wisun_device_type_t)setting->device_type);
   \       0x22   0xF896 0x0023      LDRB     R0,[R6, #+35]
   \       0x26   0x.... 0x....      BL       sl_wisun_set_device_type
   \       0x2A   0x0005             MOVS     R5,R0
    662            if (ret != SL_STATUS_OK) {
   \       0x2C   0x2D00             CMP      R5,#+0
   \       0x2E   0xD005             BEQ.N    ??_app_wisun_application_setting_0
    663              printf("[Failed: unable to set device type: %lu]\n", ret);
   \       0x30   0x0029             MOVS     R1,R5
   \       0x32   0x....             LDR.N    R0,??DataTable28_43
   \       0x34   0x.... 0x....      BL       printf
    664              return ret;
   \       0x38   0x0028             MOVS     R0,R5
   \       0x3A   0xE038             B.N      ??_app_wisun_application_setting_1
    665            }
    666          #if defined(SL_CATALOG_WISUN_LFN_DEVICE_SUPPORT_PRESENT)
    667            if (setting->device_type == SL_WISUN_LFN) {
    668              // Store LFN profile based on wisun config
    669              ret = sl_wisun_set_lfn_parameters(sl_wisun_app_core_get_lfn_params());
    670              if (ret != SL_STATUS_OK) {
    671                printf("[Failed: unable to set device type: %lu]\n", ret);
    672                return ret;
    673              }
    674            }
    675          #endif
    676          
    677          #if defined(WISUN_CONFIG_BROADCAST_RETRIES)
    678            memcpy(&update_param, conn_param, sizeof(sl_wisun_connection_params_t));
   \                     ??_app_wisun_application_setting_0: (+1)
   \       0x3C   0xF05F 0x0870      MOVS     R8,#+112
   \       0x40   0x46D1             MOV      R9,R10
   \       0x42   0x466C             MOV      R4,SP
   \       0x44   0x4642             MOV      R2,R8
   \       0x46   0x4649             MOV      R1,R9
   \       0x48   0x0020             MOVS     R0,R4
   \       0x4A   0x.... 0x....      BL       __aeabi_memcpy
    679            update_param.mpl.trickle_expirations = WISUN_CONFIG_BROADCAST_RETRIES;
   \       0x4E   0x2002             MOVS     R0,#+2
   \       0x50   0xF88D 0x006A      STRB     R0,[SP, #+106]
    680            conn_param = &update_param;
   \       0x54   0x466F             MOV      R7,SP
    681          #endif
    682          
    683            // sets the network name
    684            ret = sl_wisun_set_connection_parameters(conn_param);
   \       0x56   0x0038             MOVS     R0,R7
   \       0x58   0x.... 0x....      BL       sl_wisun_set_connection_parameters
   \       0x5C   0x0004             MOVS     R4,R0
    685            if (ret != SL_STATUS_OK) {
   \       0x5E   0x2C00             CMP      R4,#+0
   \       0x60   0xD008             BEQ.N    ??_app_wisun_application_setting_2
    686              printf("[Failed: unable to set network size: %lu]\n", ret);
   \       0x62   0x0021             MOVS     R1,R4
   \       0x64   0x....             LDR.N    R0,??DataTable28_44
   \       0x66   0x.... 0x....      BL       printf
    687              _app_wisun_core_set_state(SL_WISUN_APP_CORE_STATE_SET_NETWORK_SIZE_ERROR);
   \       0x6A   0x2005             MOVS     R0,#+5
   \       0x6C   0x.... 0x....      BL       _app_wisun_core_set_state
    688              return ret;
   \       0x70   0x0020             MOVS     R0,R4
   \       0x72   0xE01C             B.N      ??_app_wisun_application_setting_1
    689            }
    690          
    691            // sets the TX power
    692            ret = sl_wisun_set_tx_power(setting->tx_power);
   \                     ??_app_wisun_application_setting_2: (+1)
   \       0x74   0xF996 0x0022      LDRSB    R0,[R6, #+34]
   \       0x78   0x.... 0x....      BL       sl_wisun_set_tx_power
   \       0x7C   0x0005             MOVS     R5,R0
    693            if (ret != SL_STATUS_OK) {
   \       0x7E   0x2D00             CMP      R5,#+0
   \       0x80   0xD008             BEQ.N    ??_app_wisun_application_setting_3
    694              printf("[Failed: unable to set TX power: %lu]\n", ret);
   \       0x82   0x0029             MOVS     R1,R5
   \       0x84   0x....             LDR.N    R0,??DataTable28_45
   \       0x86   0x.... 0x....      BL       printf
    695              _app_wisun_core_set_state(SL_WISUN_APP_CORE_STATE_SET_TX_POWER_ERROR);
   \       0x8A   0x2006             MOVS     R0,#+6
   \       0x8C   0x.... 0x....      BL       _app_wisun_core_set_state
    696              return ret;
   \       0x90   0x0028             MOVS     R0,R5
   \       0x92   0xE00C             B.N      ??_app_wisun_application_setting_1
    697            }
    698          #if defined(WISUN_CONFIG_ALLOWED_CHANNELS)
    699            ret = sl_wisun_set_channel_mask(&wisun_config_allowed_channels_mask);
   \                     ??_app_wisun_application_setting_3: (+1)
   \       0x94   0x....             LDR.N    R0,??DataTable28_46
   \       0x96   0x.... 0x....      BL       sl_wisun_set_channel_mask
   \       0x9A   0x0004             MOVS     R4,R0
    700            if (ret != SL_STATUS_OK) {
   \       0x9C   0x2C00             CMP      R4,#+0
   \       0x9E   0xD005             BEQ.N    ??_app_wisun_application_setting_4
    701              printf("[Failed: unable to set allowed channels: %lu]\n", ret);
   \       0xA0   0x0021             MOVS     R1,R4
   \       0xA2   0x....             LDR.N    R0,??DataTable28_47
   \       0xA4   0x.... 0x....      BL       printf
    702              return ret;
   \       0xA8   0x0020             MOVS     R0,R4
   \       0xAA   0xE000             B.N      ??_app_wisun_application_setting_1
    703            }
    704          #endif
    705          #if defined(WISUN_CONFIG_MODE_SWITCH_PHYS_NUMBER)
    706            ret = sl_wisun_set_pom_ie(WISUN_CONFIG_MODE_SWITCH_PHYS_NUMBER,
    707                                      (uint8_t *)wisun_config_ms_phys,
    708                                      APP_WISUN_MDR_COMMAND_CAPABILITY);
    709            if (ret != SL_STATUS_OK) {
    710              printf("[Failed: unable to set mode switch phys: %lu]\n", ret);
    711              return ret;
    712            }
    713          #endif
    714          
    715          #if defined(WISUN_CONFIG_DWELL_INTERVAL)
    716            // sets unicast
    717            ret = sl_wisun_set_unicast_settings(WISUN_CONFIG_DWELL_INTERVAL);
    718          
    719            if (ret != SL_STATUS_OK) {
    720              printf("[Failed: unable to set dwell interval: %lu]\n", ret);
    721              _app_wisun_core_set_state(SL_WISUN_APP_CORE_STATE_SET_DWELL_INTERVAL_ERROR);
    722              return ret;
    723            }
    724          #endif
    725          
    726          #if defined(WISUN_CONFIG_MAC_ADDRESS_PRESENT)
    727            // set mac address
    728            ret = sl_wisun_set_mac_address(&wisun_config_mac_address);
    729            if (ret != SL_STATUS_OK) {
    730              printf("[Failed: unable to set MAC address: %lu]\n", ret);
    731              _app_wisun_core_set_state(SL_WISUN_APP_CORE_STATE_SET_MAC_ADDR_ERROR);
    732              return ret;
    733            }
    734          #endif
    735          
    736          #if defined(WISUN_CONFIG_MAC_ALLOW_LIST_PRESENT)
    737            // set allow mac addresses
    738            for (uint8_t index = 0U; index < wisun_config_mac_allow_list.mac_list_num; index++) {
    739              ret = sl_wisun_allow_mac_address(&wisun_config_mac_allow_list.mac_list[index]);
    740              if (ret != SL_STATUS_OK) {
    741                printf("[Failed: unable to set allow address: %lu]\n", ret);
    742                _app_wisun_core_set_state(SL_WISUN_APP_CORE_STATE_SET_ALLOW_MAC_ADDR_ERROR);
    743                return ret;
    744              }
    745            }
    746          #endif
    747          #if defined(WISUN_CONFIG_MAC_DENY_LIST_PRESENT)
    748            // set deny mac addresses
    749            for (uint8_t index = 0U; index < wisun_config_mac_deny_list.mac_list_num; index++) {
    750              ret = sl_wisun_deny_mac_address(&wisun_config_mac_deny_list.mac_list[index]);
    751              if (ret != SL_STATUS_OK) {
    752                printf("[Failed: unable to set allow address: %lu]\n", ret);
    753                _app_wisun_core_set_state(SL_WISUN_APP_CORE_SET_DENY_MAC_ADDR_ERROR);
    754                return ret;
    755              }
    756            }
    757          #endif
    758          
    759            return ret;
   \                     ??_app_wisun_application_setting_4: (+1)
   \       0xAC   0x0020             MOVS     R0,R4
   \                     ??_app_wisun_application_setting_1: (+1)
   \       0xAE   0xB01C             ADD      SP,SP,#+112
   \       0xB0   0xE8BD 0x87F0      POP      {R4-R10,PC}
    760          }
    761          

   \                                 In section .text, align 2, keep-with-next
    762          sl_status_t _app_wisun_security_setting(void)
    763          {
   \                     _app_wisun_security_setting: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
    764            sl_status_t ret = SL_STATUS_FAIL;
   \        0x2   0x2401             MOVS     R4,#+1
    765            const uint32_t max_cert_str_len = 2048U;
   \        0x4   0xF44F 0x6600      MOV      R6,#+2048
    766          
    767            // sets the trusted certificate
    768            ret = sl_wisun_set_trusted_certificate(SL_WISUN_CERTIFICATE_OPTION_IS_REF,
    769                                                   _get_cert_str_len(wisun_config_ca_certificate, max_cert_str_len) + 1,
    770                                                   wisun_config_ca_certificate);
   \        0x8   0x....             LDR.N    R5,??DataTable28_48
   \        0xA   0x0031             MOVS     R1,R6
   \        0xC   0xB289             UXTH     R1,R1
   \        0xE   0x0028             MOVS     R0,R5
   \       0x10   0x.... 0x....      BL       _get_cert_str_len
   \       0x14   0x0001             MOVS     R1,R0
   \       0x16   0x002A             MOVS     R2,R5
   \       0x18   0x1C49             ADDS     R1,R1,#+1
   \       0x1A   0xB289             UXTH     R1,R1
   \       0x1C   0x2002             MOVS     R0,#+2
   \       0x1E   0x.... 0x....      BL       sl_wisun_set_trusted_certificate
   \       0x22   0x0005             MOVS     R5,R0
    771            if (ret != SL_STATUS_OK) {
   \       0x24   0x2D00             CMP      R5,#+0
   \       0x26   0xD008             BEQ.N    ??_app_wisun_security_setting_0
    772              printf("[Failed: unable to set the trusted certificate: %lu]\n", ret);
   \       0x28   0x0029             MOVS     R1,R5
   \       0x2A   0x....             LDR.N    R0,??DataTable28_49
   \       0x2C   0x.... 0x....      BL       printf
    773              _app_wisun_core_set_state(SL_WISUN_APP_CORE_STATE_SET_TRUSTED_CERTIFICATE_ERROR);
   \       0x30   0x200B             MOVS     R0,#+11
   \       0x32   0x.... 0x....      BL       _app_wisun_core_set_state
    774              return ret;
   \       0x36   0x0028             MOVS     R0,R5
   \       0x38   0xE032             B.N      ??_app_wisun_security_setting_1
    775            }
    776          
    777            // sets the device certificate
    778            ret = sl_wisun_set_device_certificate(SL_WISUN_CERTIFICATE_OPTION_IS_REF | SL_WISUN_CERTIFICATE_OPTION_HAS_KEY,
    779                                                  _get_cert_str_len(wisun_config_device_certificate, max_cert_str_len) + 1,
    780                                                  wisun_config_device_certificate);
   \                     ??_app_wisun_security_setting_0: (+1)
   \       0x3A   0x....             LDR.N    R4,??DataTable28_50
   \       0x3C   0x0031             MOVS     R1,R6
   \       0x3E   0xB289             UXTH     R1,R1
   \       0x40   0x0020             MOVS     R0,R4
   \       0x42   0x.... 0x....      BL       _get_cert_str_len
   \       0x46   0x0022             MOVS     R2,R4
   \       0x48   0x1C40             ADDS     R0,R0,#+1
   \       0x4A   0x0001             MOVS     R1,R0
   \       0x4C   0xB289             UXTH     R1,R1
   \       0x4E   0x2006             MOVS     R0,#+6
   \       0x50   0x.... 0x....      BL       sl_wisun_set_device_certificate
   \       0x54   0x0004             MOVS     R4,R0
    781            if (ret != SL_STATUS_OK) {
   \       0x56   0x2C00             CMP      R4,#+0
   \       0x58   0xD008             BEQ.N    ??_app_wisun_security_setting_2
    782              printf("[Failed: unable to set the device certificate: %lu]\n", ret);
   \       0x5A   0x0021             MOVS     R1,R4
   \       0x5C   0x....             LDR.N    R0,??DataTable28_51
   \       0x5E   0x.... 0x....      BL       printf
    783              _app_wisun_core_set_state(SL_WISUN_APP_CORE_STATE_SET_DEVICE_CERTIFICATE_ERROR);
   \       0x62   0x200C             MOVS     R0,#+12
   \       0x64   0x.... 0x....      BL       _app_wisun_core_set_state
    784              return ret;
   \       0x68   0x0020             MOVS     R0,R4
   \       0x6A   0xE019             B.N      ??_app_wisun_security_setting_1
    785            }
    786          
    787            // sets the device private key
    788            // NOTE: to use a wrapped PSA private key, the app needs to import the key
    789            // and use the API sl_wisun_set_device_private_key_id() instead of the one below
    790            ret = sl_wisun_set_device_private_key(SL_WISUN_PRIVATE_KEY_OPTION_IS_REF,
    791                                                  _get_cert_str_len(wisun_config_device_private_key, max_cert_str_len) + 1,
    792                                                  wisun_config_device_private_key);
   \                     ??_app_wisun_security_setting_2: (+1)
   \       0x6C   0x....             LDR.N    R5,??DataTable28_52
   \       0x6E   0x0031             MOVS     R1,R6
   \       0x70   0xB289             UXTH     R1,R1
   \       0x72   0x0028             MOVS     R0,R5
   \       0x74   0x.... 0x....      BL       _get_cert_str_len
   \       0x78   0x002A             MOVS     R2,R5
   \       0x7A   0x1C40             ADDS     R0,R0,#+1
   \       0x7C   0x0001             MOVS     R1,R0
   \       0x7E   0xB289             UXTH     R1,R1
   \       0x80   0x2001             MOVS     R0,#+1
   \       0x82   0x.... 0x....      BL       sl_wisun_set_device_private_key
   \       0x86   0x0005             MOVS     R5,R0
    793            if (ret != SL_STATUS_OK) {
   \       0x88   0x2D00             CMP      R5,#+0
   \       0x8A   0xD008             BEQ.N    ??_app_wisun_security_setting_3
    794              printf("[Failed: unable to set the device private key: %lu]\n", ret);
   \       0x8C   0x0029             MOVS     R1,R5
   \       0x8E   0x....             LDR.N    R0,??DataTable28_53
   \       0x90   0x.... 0x....      BL       printf
    795              _app_wisun_core_set_state(SL_WISUN_APP_CORE_STATE_SET_DEVICE_PRIVATE_KEY_ERROR);
   \       0x94   0x200D             MOVS     R0,#+13
   \       0x96   0x.... 0x....      BL       _app_wisun_core_set_state
    796              return ret;
   \       0x9A   0x0028             MOVS     R0,R5
   \       0x9C   0xE000             B.N      ??_app_wisun_security_setting_1
    797            }
    798          
    799            return ret;
   \                     ??_app_wisun_security_setting_3: (+1)
   \       0x9E   0x0028             MOVS     R0,R5
   \                     ??_app_wisun_security_setting_1: (+1)
   \       0xA0   0xBD70             POP      {R4-R6,PC}
    800          }
    801          
    802          #if (SL_WISUN_APP_CORE_REGULATION != SL_WISUN_APP_CORE_REGULATION_NONE)
    803          __STATIC_INLINE sl_status_t _app_wisun_regulation_setting(void)
    804          {
    805            sl_status_t ret = SL_STATUS_FAIL;
    806          
    807            // regulation thresholds
    808            sl_wisun_app_core_reg_thresholds_t thresholds;
    809            // name of the regulation type to print upon connection
    810            char* regulation_name;
    811          
    812            (void)sl_wisun_app_core_get_regulation_thresholds(&thresholds);
    813            ret = sl_wisun_set_regulation_tx_thresholds(thresholds.warning_threshold,
    814                                                        thresholds.alert_threshold);
    815            if (ret == SL_STATUS_OK) {
    816              ret = sl_wisun_set_regulation(SL_WISUN_APP_CORE_REGULATION);
    817              if (ret != SL_STATUS_OK) {
    818                printf("[Failed: unable to set regulation: %lu]\n", ret);
    819              } else {
    820                switch (SL_WISUN_APP_CORE_REGULATION) {
    821                  case SL_WISUN_REGULATION_ARIB:
    822                    regulation_name = "ARIB";
    823                    break;
    824                  case SL_WISUN_REGULATION_WPC:
    825                    regulation_name = "WPC";
    826                    break;
    827                  default:
    828                    regulation_name = "UNKNOWN";
    829                    break;
    830                }
    831                printf("\n[Regional regulation set to %s]\n", regulation_name);
    832                _regional_regulation_active = true;
    833              }
    834            } else {
    835              printf("\n[Failed: unable to set regulation TX thresholds]\n");
    836            }
    837          
    838            return ret;
    839          }
    840          #endif
    841          
    842          /* Mutex acquire */

   \                                 In section .text, align 2, keep-with-next
    843          __STATIC_INLINE void _app_wisun_mutex_acquire(void)
    844          {
   \                     _app_wisun_mutex_acquire: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    845            assert(osMutexAcquire(_app_core_mtx, osWaitForever) == osOK);
   \        0x2   0xF05F 0x31FF      MOVS     R1,#+4294967295
   \        0x6   0x....             LDR.N    R0,??DataTable28_27
   \        0x8   0x6800             LDR      R0,[R0, #+0]
   \        0xA   0x.... 0x....      BL       osMutexAcquire
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD007             BEQ.N    ??_app_wisun_mutex_acquire_0
   \       0x12   0xF240 0x324D      MOVW     R2,#+845
   \       0x16   0x....             LDR.N    R1,??DataTable28_29
   \       0x18   0x....             LDR.N    R0,??DataTable28_54
   \       0x1A   0x.... 0x....      BL       __aeabi_assert
   \       0x1E   0x.... 0x....      BL       __iar_EmptyStepPoint
    846          }
   \                     ??_app_wisun_mutex_acquire_0: (+1)
   \       0x22   0xBD01             POP      {R0,PC}
    847          
    848          /* Mutex release */

   \                                 In section .text, align 2, keep-with-next
    849          __STATIC_INLINE void _app_wisun_mutex_release(void)
    850          {
   \                     _app_wisun_mutex_release: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    851            assert(osMutexRelease(_app_core_mtx) == osOK);
   \        0x2   0x....             LDR.N    R0,??DataTable28_27
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x.... 0x....      BL       osMutexRelease
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD007             BEQ.N    ??_app_wisun_mutex_release_0
   \        0xE   0xF240 0x3253      MOVW     R2,#+851
   \       0x12   0x....             LDR.N    R1,??DataTable28_29
   \       0x14   0x....             LDR.N    R0,??DataTable28_55
   \       0x16   0x.... 0x....      BL       __aeabi_assert
   \       0x1A   0x.... 0x....      BL       __iar_EmptyStepPoint
    852          }
   \                     ??_app_wisun_mutex_release_0: (+1)
   \       0x1E   0xBD01             POP      {R0,PC}
    853          
    854          /* Storing address */

   \                                 In section .text, align 2, keep-with-next
    855          static void _store_address(const char *addr_name,
    856                                     const sl_wisun_ip_address_type_t addr_type,
    857                                     in6_addr_t *addr)
    858          {
   \                     _store_address: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0x0005             MOVS     R5,R0
   \        0x6   0x468A             MOV      R10,R1
   \        0x8   0x0016             MOVS     R6,R2
    859            sl_status_t stat = SL_STATUS_FAIL;
   \        0xA   0x2701             MOVS     R7,#+1
    860            const char *ip_str = NULL;
   \        0xC   0xF05F 0x0800      MOVS     R8,#+0
    861          
    862          #if defined(SL_CATALOG_WISUN_LFN_DEVICE_SUPPORT_PRESENT)
    863            // skip BR address failure for LFN node
    864            if (addr_type == SL_WISUN_IP_ADDRESS_TYPE_BORDER_ROUTER
    865                && _setting.device_type == SL_WISUN_LFN) {
    866              return;
    867            }
    868          #endif
    869            stat = sl_wisun_get_ip_address(addr_type, addr);
   \       0x10   0x0031             MOVS     R1,R6
   \       0x12   0x4650             MOV      R0,R10
   \       0x14   0xB2C0             UXTB     R0,R0
   \       0x16   0x.... 0x....      BL       sl_wisun_get_ip_address
   \       0x1A   0x0004             MOVS     R4,R0
    870          
    871            ip_str = app_wisun_trace_util_get_ip_str(addr);
   \       0x1C   0x0030             MOVS     R0,R6
   \       0x1E   0x.... 0x....      BL       app_wisun_trace_util_get_ip_str
   \       0x22   0x4681             MOV      R9,R0
    872            if (addr_type != SL_WISUN_IP_ADDRESS_TYPE_PRIMARY_PARENT
    873                && addr_type != SL_WISUN_IP_ADDRESS_TYPE_SECONDARY_PARENT) {
   \       0x24   0x4650             MOV      R0,R10
   \       0x26   0xB2C0             UXTB     R0,R0
   \       0x28   0x2803             CMP      R0,#+3
   \       0x2A   0xD00F             BEQ.N    ??_store_address_0
   \       0x2C   0x4650             MOV      R0,R10
   \       0x2E   0xB2C0             UXTB     R0,R0
   \       0x30   0x2804             CMP      R0,#+4
   \       0x32   0xD00B             BEQ.N    ??_store_address_0
    874              if (stat != SL_STATUS_OK) {
   \       0x34   0x2C00             CMP      R4,#+0
   \       0x36   0xD004             BEQ.N    ??_store_address_1
    875                printf("[Getting '%s' address failed!]\n", addr_name);
   \       0x38   0x0029             MOVS     R1,R5
   \       0x3A   0x....             LDR.N    R0,??DataTable28_56
   \       0x3C   0x.... 0x....      BL       printf
   \       0x40   0xE004             B.N      ??_store_address_0
    876              } else {
    877                printf("[%-14s: %s]\n", addr_name, ip_str);
   \                     ??_store_address_1: (+1)
   \       0x42   0x464A             MOV      R2,R9
   \       0x44   0x0029             MOVS     R1,R5
   \       0x46   0x....             LDR.N    R0,??DataTable28_57
   \       0x48   0x.... 0x....      BL       printf
    878              }
    879            }
    880            app_wisun_trace_util_destroy_ip_str(ip_str);
   \                     ??_store_address_0: (+1)
   \       0x4C   0x4648             MOV      R0,R9
   \       0x4E   0x.... 0x....      BL       app_wisun_trace_util_destroy_ip_str
    881          }
   \       0x52   0xE8BD 0x87F0      POP      {R4-R10,PC}
    882          
    883          /* Setting error */

   \                                 In section .text, align 2, keep-with-next
    884          __STATIC_INLINE void _app_wisun_core_set_state(const sl_wisun_app_core_state_t flag)
    885          {
   \                     _app_wisun_core_set_state: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    886            (void) osEventFlagsSet(_app_core_state, 1UL << flag);
   \        0x4   0x2101             MOVS     R1,#+1
   \        0x6   0x40A1             LSLS     R1,R1,R4
   \        0x8   0x....             LDR.N    R0,??DataTable28_31
   \        0xA   0x6800             LDR      R0,[R0, #+0]
   \        0xC   0x.... 0x....      BL       osEventFlagsSet
    887          }
   \       0x10   0xBD10             POP      {R4,PC}
    888          

   \                                 In section .text, align 2, keep-with-next
    889          __STATIC_INLINE void _app_wisun_core_clear_state(const sl_wisun_app_core_state_t flag)
    890          {
   \                     _app_wisun_core_clear_state: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    891            (void) osEventFlagsClear(_app_core_state, 1UL << flag);
   \        0x4   0x2101             MOVS     R1,#+1
   \        0x6   0x40A1             LSLS     R1,R1,R4
   \        0x8   0x....             LDR.N    R0,??DataTable28_31
   \        0xA   0x6800             LDR      R0,[R0, #+0]
   \        0xC   0x.... 0x....      BL       osEventFlagsClear
    892          }
   \       0x10   0xBD10             POP      {R4,PC}
    893          
    894          /* Storing current addresses */

   \                                 In section .text, align 2, keep-with-next
    895          static void _store_current_addresses(void)
    896          {
   \                     _store_current_addresses: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
    897            memset(&_current_addr, 0, sizeof(sl_wisun_app_core_current_addr_t));
   \        0x2   0x2750             MOVS     R7,#+80
   \        0x4   0x2400             MOVS     R4,#+0
   \        0x6   0x....             LDR.N    R5,??DataTable28_39
   \        0x8   0x002E             MOVS     R6,R5
   \        0xA   0x0022             MOVS     R2,R4
   \        0xC   0x0039             MOVS     R1,R7
   \        0xE   0x0030             MOVS     R0,R6
   \       0x10   0x.... 0x....      BL       __aeabi_memset
    898            printf("\nAddresses:\n");
   \       0x14   0x....             LDR.N    R0,??DataTable28_58
   \       0x16   0x.... 0x....      BL       printf
    899            _store_address("GLOBAL", SL_WISUN_IP_ADDRESS_TYPE_GLOBAL, &_current_addr.global);
   \       0x1A   0xF115 0x0210      ADDS     R2,R5,#+16
   \       0x1E   0x2101             MOVS     R1,#+1
   \       0x20   0x....             LDR.N    R0,??DataTable28_3
   \       0x22   0x.... 0x....      BL       _store_address
    900            _store_address("LINK_LOCAL", SL_WISUN_IP_ADDRESS_TYPE_LINK_LOCAL, &_current_addr.link_local);
   \       0x26   0x002A             MOVS     R2,R5
   \       0x28   0x2100             MOVS     R1,#+0
   \       0x2A   0x....             LDR.N    R0,??DataTable28_59
   \       0x2C   0x.... 0x....      BL       _store_address
    901            _store_address("BORDER_ROUTER", SL_WISUN_IP_ADDRESS_TYPE_BORDER_ROUTER, &_current_addr.border_router);
   \       0x30   0xF115 0x0220      ADDS     R2,R5,#+32
   \       0x34   0x2102             MOVS     R1,#+2
   \       0x36   0x....             LDR.N    R0,??DataTable28_60
   \       0x38   0x.... 0x....      BL       _store_address
    902            _store_address("PRIMARY_PARENT", SL_WISUN_IP_ADDRESS_TYPE_PRIMARY_PARENT, &_current_addr.primary_parent);
   \       0x3C   0xF115 0x0230      ADDS     R2,R5,#+48
   \       0x40   0x2103             MOVS     R1,#+3
   \       0x42   0x....             LDR.N    R0,??DataTable28_61
   \       0x44   0x.... 0x....      BL       _store_address
    903            _store_address("SECONDARY_PARENT", SL_WISUN_IP_ADDRESS_TYPE_SECONDARY_PARENT, &_current_addr.secondary_parent);
   \       0x48   0xF115 0x0240      ADDS     R2,R5,#+64
   \       0x4C   0x2104             MOVS     R1,#+4
   \       0x4E   0x....             LDR.N    R0,??DataTable28_62
   \       0x50   0x.... 0x....      BL       _store_address
    904          }
   \       0x54   0xBDF1             POP      {R0,R4-R7,PC}
    905          
    906          /* Get certificate length */

   \                                 In section .text, align 2, keep-with-next
    907          static uint16_t _get_cert_str_len(const uint8_t *cert, const uint16_t max_cert_len)
    908          {
   \                     _get_cert_str_len: (+1)
   \        0x0   0xB410             PUSH     {R4}
   \        0x2   0x0003             MOVS     R3,R0
    909            uint16_t n = 0;
   \        0x4   0x2200             MOVS     R2,#+0
    910            if (cert == NULL) {
   \        0x6   0x2B00             CMP      R3,#+0
   \        0x8   0xD101             BNE.N    ??_get_cert_str_len_0
    911              return 0U;
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0xE00D             B.N      ??_get_cert_str_len_1
    912            }
    913            for (n = 0; n < max_cert_len && *cert; n++, cert++) {
   \                     ??_get_cert_str_len_0: (+1)
   \        0xE   0x2000             MOVS     R0,#+0
   \                     ??_get_cert_str_len_2: (+1)
   \       0x10   0x0004             MOVS     R4,R0
   \       0x12   0x000A             MOVS     R2,R1
   \       0x14   0xB2A4             UXTH     R4,R4
   \       0x16   0xB292             UXTH     R2,R2
   \       0x18   0x4294             CMP      R4,R2
   \       0x1A   0xD205             BCS.N    ??_get_cert_str_len_3
   \       0x1C   0x781A             LDRB     R2,[R3, #+0]
   \       0x1E   0x2A00             CMP      R2,#+0
   \       0x20   0xD002             BEQ.N    ??_get_cert_str_len_3
   \       0x22   0x1C40             ADDS     R0,R0,#+1
   \       0x24   0x1C5B             ADDS     R3,R3,#+1
   \       0x26   0xE7F3             B.N      ??_get_cert_str_len_2
    914              ;
    915            }
    916            return n;
   \                     ??_get_cert_str_len_3: (+1)
   \       0x28   0xB280             UXTH     R0,R0
   \                     ??_get_cert_str_len_1: (+1)
   \       0x2A   0xBC10             POP      {R4}
   \       0x2C   0x4770             BX       LR
    917          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \        0x0   0x00 0x00          DC8      "",0x0,0x0,0x0 
   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28:
   \        0x0   0x....'....        DC32     _time_stat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_1:
   \        0x0   0x....'....        DC32     `sl_wisun_network_update_event_hnd::time`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_2:
   \        0x0   0x....'....        DC32     _current_addr+16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_3:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_4:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_5:
   \        0x0   0x....'....        DC32     _current_addr+48

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_6:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_7:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_8:
   \        0x0   0x....'....        DC32     _current_addr+64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_9:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_10:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_11:
   \        0x0   0x....'....        DC32     `sl_wisun_network_update_event_hnd::__PRETTY_FUNCTION__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_12:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_13:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_14:
   \        0x0   0x....'....        DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_15:
   \        0x0   0x....'....        DC32     `sl_wisun_connected_event_hnd::__PRETTY_FUNCTION__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_16:
   \        0x0   0x....'....        DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_17:
   \        0x0   0x....'....        DC32     `sl_wisun_disconnected_event_hnd::__PRETTY_FUNCTION__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_18:
   \        0x0   0x....'....        DC32     _join_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_19:
   \        0x0   0x....'....        DC32     _setting

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_20:
   \        0x0   0x....'....        DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_21:
   \        0x0   0x....'....        DC32     `sl_wisun_connection_lost_event_hnd::__PRETTY_FUNCTION__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_22:
   \        0x0   0x....'....        DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_23:
   \        0x0   0x....'....        DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_24:
   \        0x0   0x....'....        DC32     `sl_wisun_join_state_event_hnd::__PRETTY_FUNCTION__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_25:
   \        0x0   0x....'....        DC32     `sl_wisun_lfn_wake_up_hnd::__PRETTY_FUNCTION__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_26:
   \        0x0   0x....'....        DC32     `sl_wisun_multicast_reg_finish_hnd::__PRETTY_FUNCTION__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_27:
   \        0x0   0x....'....        DC32     _app_core_mtx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_28:
   \        0x0   0x....'....        DC32     _app_wisun_mtx_attr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_29:
   \        0x0   0x....'....        DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_30:
   \        0x0   0x....'....        DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_31:
   \        0x0   0x....'....        DC32     _app_core_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_32:
   \        0x0   0x....'....        DC32     _app_wisun_evt_attr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_33:
   \        0x0   0x....'....        DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_34:
   \        0x0   0x....'....        DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_35:
   \        0x0   0x....'....        DC32     `sl_wisun_app_core_network_connect::__PRETTY_FUNCTION__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_36:
   \        0x0   0x....'....        DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_37:
   \        0x0   0x....'....        DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_38:
   \        0x0   0x....'....        DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_39:
   \        0x0   0x....'....        DC32     _current_addr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_40:
   \        0x0   0x....'....        DC32     _regional_regulation_active

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_41:
   \        0x0   0x....'....        DC32     _tresholds

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_42:
   \        0x0   0x000A'FC80        DC32     0xafc80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_43:
   \        0x0   0x....'....        DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_44:
   \        0x0   0x....'....        DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_45:
   \        0x0   0x....'....        DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_46:
   \        0x0   0x....'....        DC32     wisun_config_allowed_channels_mask

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_47:
   \        0x0   0x....'....        DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_48:
   \        0x0   0x....'....        DC32     wisun_config_ca_certificate

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_49:
   \        0x0   0x....'....        DC32     ?_27

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_50:
   \        0x0   0x....'....        DC32     wisun_config_device_certificate

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_51:
   \        0x0   0x....'....        DC32     ?_28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_52:
   \        0x0   0x....'....        DC32     wisun_config_device_private_key

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_53:
   \        0x0   0x....'....        DC32     ?_29

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_54:
   \        0x0   0x....'....        DC32     ?_30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_55:
   \        0x0   0x....'....        DC32     ?_31

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_56:
   \        0x0   0x....'....        DC32     ?_32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_57:
   \        0x0   0x....'....        DC32     ?_33

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_58:
   \        0x0   0x....'....        DC32     ?_34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_59:
   \        0x0   0x....'....        DC32     ?_35

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_60:
   \        0x0   0x....'....        DC32     ?_36

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_61:
   \        0x0   0x....'....        DC32     ?_37

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_62:
   \        0x0   0x....'....        DC32     ?_38

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x41 0x70          DC8 "AppWisunkMutex"
   \              0x70 0x57    
   \              0x69 0x73    
   \              0x75 0x6E    
   \              0x6B 0x4D    
   \              0x75 0x74    
   \              0x65 0x78    
   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x41 0x70          DC8 "AppWisunEvtFlags"
   \              0x70 0x57    
   \              0x69 0x73    
   \              0x75 0x6E    
   \              0x45 0x76    
   \              0x74 0x46    
   \              0x6C 0x61    
   \              0x67 0x73    
   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 1
   \        0x0   0x00               DC8 ""

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x47 0x4C          DC8 "GLOBAL"
   \              0x4F 0x42    
   \              0x41 0x4C    
   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x5B 0x25          DC8 "[%s Network update: Global %s]\012"
   \              0x73 0x20    
   \              0x4E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x75 0x70    
   \              0x64 0x61    
   \              0x74 0x65    
   \              0x3A 0x20    
   \              0x47 0x6C    
   \              0x6F 0x62    
   \              0x61 0x6C    
   \              0x20 0x25    
   \              0x73 0x5D    
   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x50 0x52          DC8 "PRIM_PARENT"
   \              0x49 0x4D    
   \              0x5F 0x50    
   \              0x41 0x52    
   \              0x45 0x4E    
   \              0x54 0x00

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x5B 0x25          DC8 "[%s Network update: Primary Parent %s]\012"
   \              0x73 0x20    
   \              0x4E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x75 0x70    
   \              0x64 0x61    
   \              0x74 0x65    
   \              0x3A 0x20    
   \              0x50 0x72    
   \              0x69 0x6D    
   \              0x61 0x72    
   \              0x79 0x20    
   \              0x50 0x61    
   \              0x72 0x65    
   \              0x6E 0x74    
   \              0x20 0x25    
   \              0x73 0x5D    
   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x53 0x45          DC8 "SEC_PARENT"
   \              0x43 0x5F    
   \              0x50 0x41    
   \              0x52 0x45    
   \              0x4E 0x54    
   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x5B 0x25          DC8 "[%s Network update: Secondary Parent %s]\012"
   \              0x73 0x20    
   \              0x4E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x75 0x70    
   \              0x64 0x61    
   \              0x74 0x65    
   \              0x3A 0x20    
   \              0x53 0x65    
   \              0x63 0x6F    
   \              0x6E 0x64    
   \              0x61 0x72    
   \              0x79 0x20    
   \              0x50 0x61    
   \              0x72 0x65    
   \              0x6E 0x74    
   \              0x20 0x25    
   \              0x73 0x5D    
   \              0x0A 0x00
   \       0x2A                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x25 0x73          DC8 "%s() returned = 0x%08lx \012"
   \              0x28 0x29    
   \              0x20 0x72    
   \              0x65 0x74    
   \              0x75 0x72    
   \              0x6E 0x65    
   \              0x64 0x20    
   \              0x3D 0x20    
   \              0x30 0x78    
   \              0x25 0x30    
   \              0x38 0x6C    
   \              0x78 0x20    
   \              0x0A 0x00
   \       0x1A                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x5B 0x43          DC8 "[Connection failed. Status: %lu]\012"
   \              0x6F 0x6E    
   \              0x6E 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x66 0x61    
   \              0x69 0x6C    
   \              0x65 0x64    
   \              0x2E 0x20    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x75 0x73    
   \              0x3A 0x20    
   \              0x25 0x6C    
   \              0x75 0x5D    
   \              0x0A 0x00
   \       0x22                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x5B 0x25          DC8 "[%lu s]\012"
   \              0x6C 0x75    
   \              0x20 0x73    
   \              0x5D 0x0A    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x5B 0x44          DC8 "[Disconnected]\012"
   \              0x69 0x73    
   \              0x63 0x6F    
   \              0x6E 0x6E    
   \              0x65 0x63    
   \              0x74 0x65    
   \              0x64 0x5D    
   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x5B 0x43          DC8 "[Connection lost, connecting to \"%s\"]\012"
   \              0x6F 0x6E    
   \              0x6E 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x6C 0x6F    
   \              0x73 0x74    
   \              0x2C 0x20    
   \              0x63 0x6F    
   \              0x6E 0x6E    
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x5D 0x0A    
   \              0x00
   \       0x27                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x5B 0x57          DC8 "[Wi-SUN network error occured. Status: %lu\012"
   \              0x69 0x2D    
   \              0x53 0x55    
   \              0x4E 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x65 0x72    
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x6F 0x63    
   \              0x63 0x75    
   \              0x72 0x65    
   \              0x64 0x2E    
   \              0x20 0x53    
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x3A    
   \              0x20 0x25    
   \              0x6C 0x75    
   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x5B 0x4A          DC8 "[Join state: %s (%lu)]\012"
   \              0x6F 0x69    
   \              0x6E 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x3A    
   \              0x20 0x25    
   \              0x73 0x20    
   \              0x28 0x25    
   \              0x6C 0x75    
   \              0x29 0x5D    
   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x5F 0x61          DC8 "_app_core_mtx != 0"
   \              0x70 0x70    
   \              0x5F 0x63    
   \              0x6F 0x72    
   \              0x65 0x5F    
   \              0x6D 0x74    
   \              0x78 0x20    
   \              0x21 0x3D    
   \              0x20 0x30    
   \              0x00
   \       0x13                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x44 0x3A          DC8 0x44, 0x3A, 0x5C, 0x49, 0x6E, 0x65, 0x73, 0x68
   \              0x5C 0x49    
   \              0x6E 0x65    
   \              0x73 0x68
   \        0x8   0x5F 0x77          DC8 0x5F, 0x77, 0x69, 0x73, 0x75, 0x6E, 0x5C, 0x57
   \              0x69 0x73    
   \              0x75 0x6E    
   \              0x5C 0x57
   \       0x10   0x69 0x73          DC8 0x69, 0x73, 0x75, 0x6E, 0x5F, 0x4E, 0x6F, 0x64
   \              0x75 0x6E    
   \              0x5F 0x4E    
   \              0x6F 0x64
   \       0x18   0x65 0x5F          DC8 0x65, 0x5F, 0x41, 0x70, 0x70, 0x20, 0x31, 0x5C
   \              0x41 0x70    
   \              0x70 0x20    
   \              0x31 0x5C
   \       0x20   0x57 0x69          DC8 0x57, 0x69, 0x73, 0x75, 0x6E, 0x5F, 0x4E, 0x6F
   \              0x73 0x75    
   \              0x6E 0x5F    
   \              0x4E 0x6F
   \       0x28   0x64 0x65          DC8 0x64, 0x65, 0x5F, 0x41, 0x70, 0x70, 0x5C, 0x67
   \              0x5F 0x41    
   \              0x70 0x70    
   \              0x5C 0x67
   \       0x30   0x65 0x63          DC8 0x65, 0x63, 0x6B, 0x6F, 0x5F, 0x73, 0x64, 0x6B
   \              0x6B 0x6F    
   \              0x5F 0x73    
   \              0x64 0x6B
   \       0x38   0x5F 0x34          DC8 0x5F, 0x34, 0x2E, 0x34, 0x2E, 0x35, 0x5C, 0x61
   \              0x2E 0x34    
   \              0x2E 0x35    
   \              0x5C 0x61
   \       0x40   0x70 0x70          DC8 0x70, 0x70, 0x5C, 0x77, 0x69, 0x73, 0x75, 0x6E
   \              0x5C 0x77    
   \              0x69 0x73    
   \              0x75 0x6E
   \       0x48   0x5C 0x63          DC8 0x5C, 0x63, 0x6F, 0x6D, 0x70, 0x6F, 0x6E, 0x65
   \              0x6F 0x6D    
   \              0x70 0x6F    
   \              0x6E 0x65
   \       0x50   0x6E 0x74          DC8 0x6E, 0x74, 0x5C, 0x61, 0x70, 0x70, 0x5F, 0x63
   \              0x5C 0x61    
   \              0x70 0x70    
   \              0x5F 0x63
   \       0x58   0x6F 0x72          DC8 0x6F, 0x72, 0x65, 0x5C, 0x73, 0x6C, 0x5F, 0x77
   \              0x65 0x5C    
   \              0x73 0x6C    
   \              0x5F 0x77
   \       0x60   0x69 0x73          DC8 0x69, 0x73, 0x75, 0x6E, 0x5F, 0x61, 0x70, 0x70
   \              0x75 0x6E    
   \              0x5F 0x61    
   \              0x70 0x70
   \       0x68   0x5F 0x63          DC8 0x5F, 0x63, 0x6F, 0x72, 0x65, 0x2E, 0x63, 0
   \              0x6F 0x72    
   \              0x65 0x2E    
   \              0x63 0x00

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x5F 0x61          DC8 "_app_core_state != 0"
   \              0x70 0x70    
   \              0x5F 0x63    
   \              0x6F 0x72    
   \              0x65 0x5F    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x21 0x3D    
   \              0x20 0x30    
   \              0x00
   \       0x15                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x5B 0x46          DC8 "[Failed: unable to get settings\012"
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x75    
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x74 0x6F    
   \              0x20 0x67    
   \              0x65 0x74    
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x73 0x0A    
   \              0x00
   \       0x21                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x5B 0x46          DC8 "[Failed: already connecting or connected]\012"
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x61    
   \              0x6C 0x72    
   \              0x65 0x61    
   \              0x64 0x79    
   \              0x20 0x63    
   \              0x6F 0x6E    
   \              0x6E 0x65    
   \              0x63 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6F 0x72    
   \              0x20 0x63    
   \              0x6F 0x6E    
   \              0x6E 0x65    
   \              0x63 0x74    
   \              0x65 0x64    
   \              0x5D 0x0A    
   \              0x00
   \       0x2B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x0A 0x5B          DC8 "\012[Connecting to \"%s\"]\012"
   \              0x43 0x6F    
   \              0x6E 0x6E    
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x5D 0x0A    
   \              0x00
   \       0x17                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_22:
   \        0x0   0x0A 0x5B          DC8 "\012[Connection failed: %lu]\012"
   \              0x43 0x6F    
   \              0x6E 0x6E    
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x25    
   \              0x6C 0x75    
   \              0x5D 0x0A    
   \              0x00
   \       0x1B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_23:
   \        0x0   0x5B 0x46          DC8 "[Failed: unable to set device type: %lu]\012"
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x75    
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x74 0x6F    
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x20 0x64    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x20    
   \              0x74 0x79    
   \              0x70 0x65    
   \              0x3A 0x20    
   \              0x25 0x6C    
   \              0x75 0x5D    
   \              0x0A 0x00
   \       0x2A                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x5B 0x46          DC8 "[Failed: unable to set network size: %lu]\012"
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x75    
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x74 0x6F    
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x20 0x6E    
   \              0x65 0x74    
   \              0x77 0x6F    
   \              0x72 0x6B    
   \              0x20 0x73    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x25    
   \              0x6C 0x75    
   \              0x5D 0x0A    
   \              0x00
   \       0x2B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x5B 0x46          DC8 "[Failed: unable to set TX power: %lu]\012"
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x75    
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x74 0x6F    
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x20 0x54    
   \              0x58 0x20    
   \              0x70 0x6F    
   \              0x77 0x65    
   \              0x72 0x3A    
   \              0x20 0x25    
   \              0x6C 0x75    
   \              0x5D 0x0A    
   \              0x00
   \       0x27                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_26:
   \        0x0   0x5B 0x46          DC8 "[Failed: unable to set allowed channels: %lu]\012"
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x75    
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x74 0x6F    
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x20 0x61    
   \              0x6C 0x6C    
   \              0x6F 0x77    
   \              0x65 0x64    
   \              0x20 0x63    
   \              0x68 0x61    
   \              0x6E 0x6E    
   \              0x65 0x6C    
   \              0x73 0x3A    
   \              0x20 0x25    
   \              0x6C 0x75    
   \              0x5D 0x0A    
   \              0x00
   \       0x2F                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_27:
   \        0x0   0x5B 0x46          DC8 0x5B, 0x46, 0x61, 0x69, 0x6C, 0x65, 0x64, 0x3A
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A
   \        0x8   0x20 0x75          DC8 0x20, 0x75, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x20
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20
   \       0x10   0x74 0x6F          DC8 0x74, 0x6F, 0x20, 0x73, 0x65, 0x74, 0x20, 0x74
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x20 0x74
   \       0x18   0x68 0x65          DC8 0x68, 0x65, 0x20, 0x74, 0x72, 0x75, 0x73, 0x74
   \              0x20 0x74    
   \              0x72 0x75    
   \              0x73 0x74
   \       0x20   0x65 0x64          DC8 0x65, 0x64, 0x20, 0x63, 0x65, 0x72, 0x74, 0x69
   \              0x20 0x63    
   \              0x65 0x72    
   \              0x74 0x69
   \       0x28   0x66 0x69          DC8 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x3A, 0x20
   \              0x63 0x61    
   \              0x74 0x65    
   \              0x3A 0x20
   \       0x30   0x25 0x6C          DC8 0x25, 0x6C, 0x75, 0x5D, 0x0A, 0
   \              0x75 0x5D    
   \              0x0A 0x00
   \       0x36                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_28:
   \        0x0   0x5B 0x46          DC8 0x5B, 0x46, 0x61, 0x69, 0x6C, 0x65, 0x64, 0x3A
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A
   \        0x8   0x20 0x75          DC8 0x20, 0x75, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x20
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20
   \       0x10   0x74 0x6F          DC8 0x74, 0x6F, 0x20, 0x73, 0x65, 0x74, 0x20, 0x74
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x20 0x74
   \       0x18   0x68 0x65          DC8 0x68, 0x65, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63
   \              0x20 0x64    
   \              0x65 0x76    
   \              0x69 0x63
   \       0x20   0x65 0x20          DC8 0x65, 0x20, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66
   \              0x63 0x65    
   \              0x72 0x74    
   \              0x69 0x66
   \       0x28   0x69 0x63          DC8 0x69, 0x63, 0x61, 0x74, 0x65, 0x3A, 0x20, 0x25
   \              0x61 0x74    
   \              0x65 0x3A    
   \              0x20 0x25
   \       0x30   0x6C 0x75          DC8 0x6C, 0x75, 0x5D, 0x0A, 0
   \              0x5D 0x0A    
   \              0x00
   \       0x35                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_29:
   \        0x0   0x5B 0x46          DC8 0x5B, 0x46, 0x61, 0x69, 0x6C, 0x65, 0x64, 0x3A
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A
   \        0x8   0x20 0x75          DC8 0x20, 0x75, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x20
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20
   \       0x10   0x74 0x6F          DC8 0x74, 0x6F, 0x20, 0x73, 0x65, 0x74, 0x20, 0x74
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x20 0x74
   \       0x18   0x68 0x65          DC8 0x68, 0x65, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63
   \              0x20 0x64    
   \              0x65 0x76    
   \              0x69 0x63
   \       0x20   0x65 0x20          DC8 0x65, 0x20, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74
   \              0x70 0x72    
   \              0x69 0x76    
   \              0x61 0x74
   \       0x28   0x65 0x20          DC8 0x65, 0x20, 0x6B, 0x65, 0x79, 0x3A, 0x20, 0x25
   \              0x6B 0x65    
   \              0x79 0x3A    
   \              0x20 0x25
   \       0x30   0x6C 0x75          DC8 0x6C, 0x75, 0x5D, 0x0A, 0
   \              0x5D 0x0A    
   \              0x00
   \       0x35                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_30:
   \        0x0   0x6F 0x73          DC8 0x6F, 0x73, 0x4D, 0x75, 0x74, 0x65, 0x78, 0x41
   \              0x4D 0x75    
   \              0x74 0x65    
   \              0x78 0x41
   \        0x8   0x63 0x71          DC8 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x28, 0x5F
   \              0x75 0x69    
   \              0x72 0x65    
   \              0x28 0x5F
   \       0x10   0x61 0x70          DC8 0x61, 0x70, 0x70, 0x5F, 0x63, 0x6F, 0x72, 0x65
   \              0x70 0x5F    
   \              0x63 0x6F    
   \              0x72 0x65
   \       0x18   0x5F 0x6D          DC8 0x5F, 0x6D, 0x74, 0x78, 0x2C, 0x20, 0x30, 0x78
   \              0x74 0x78    
   \              0x2C 0x20    
   \              0x30 0x78
   \       0x20   0x46 0x46          DC8 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46
   \              0x46 0x46    
   \              0x46 0x46    
   \              0x46 0x46
   \       0x28   0x55 0x29          DC8 0x55, 0x29, 0x20, 0x3D, 0x3D, 0x20, 0x6F, 0x73
   \              0x20 0x3D    
   \              0x3D 0x20    
   \              0x6F 0x73
   \       0x30   0x4F 0x4B          DC8 0x4F, 0x4B, 0
   \              0x00
   \       0x33                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_31:
   \        0x0   0x6F 0x73          DC8 "osMutexRelease(_app_core_mtx) == osOK"
   \              0x4D 0x75    
   \              0x74 0x65    
   \              0x78 0x52    
   \              0x65 0x6C    
   \              0x65 0x61    
   \              0x73 0x65    
   \              0x28 0x5F    
   \              0x61 0x70    
   \              0x70 0x5F    
   \              0x63 0x6F    
   \              0x72 0x65    
   \              0x5F 0x6D    
   \              0x74 0x78    
   \              0x29 0x20    
   \              0x3D 0x3D    
   \              0x20 0x6F    
   \              0x73 0x4F    
   \              0x4B 0x00
   \       0x26                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_32:
   \        0x0   0x5B 0x47          DC8 "[Getting '%s' address failed!]\012"
   \              0x65 0x74    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x20 0x27    
   \              0x25 0x73    
   \              0x27 0x20    
   \              0x61 0x64    
   \              0x64 0x72    
   \              0x65 0x73    
   \              0x73 0x20    
   \              0x66 0x61    
   \              0x69 0x6C    
   \              0x65 0x64    
   \              0x21 0x5D    
   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_33:
   \        0x0   0x5B 0x25          DC8 "[%-14s: %s]\012"
   \              0x2D 0x31    
   \              0x34 0x73    
   \              0x3A 0x20    
   \              0x25 0x73    
   \              0x5D 0x0A    
   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_34:
   \        0x0   0x0A 0x41          DC8 "\012Addresses:\012"
   \              0x64 0x64    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x65 0x73    
   \              0x3A 0x0A    
   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_35:
   \        0x0   0x4C 0x49          DC8 "LINK_LOCAL"
   \              0x4E 0x4B    
   \              0x5F 0x4C    
   \              0x4F 0x43    
   \              0x41 0x4C    
   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_36:
   \        0x0   0x42 0x4F          DC8 "BORDER_ROUTER"
   \              0x52 0x44    
   \              0x45 0x52    
   \              0x5F 0x52    
   \              0x4F 0x55    
   \              0x54 0x45    
   \              0x52 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_37:
   \        0x0   0x50 0x52          DC8 "PRIMARY_PARENT"
   \              0x49 0x4D    
   \              0x41 0x52    
   \              0x59 0x5F    
   \              0x50 0x41    
   \              0x52 0x45    
   \              0x4E 0x54    
   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_38:
   \        0x0   0x53 0x45          DC8 "SECONDARY_PARENT"
   \              0x43 0x4F    
   \              0x4E 0x44    
   \              0x41 0x52    
   \              0x59 0x5F    
   \              0x50 0x41    
   \              0x52 0x45    
   \              0x4E 0x54    
   \              0x00
   \       0x11                      DS8 3

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     144   _app_wisun_application_setting
       144   -> __aeabi_memcpy
       144   -> __aeabi_memset
       144   -> _app_wisun_core_set_state
       144   -> printf
       144   -> sl_wisun_get_conn_param_by_nw_size
       144   -> sl_wisun_set_channel_mask
       144   -> sl_wisun_set_connection_parameters
       144   -> sl_wisun_set_device_type
       144   -> sl_wisun_set_tx_power
       8   _app_wisun_core_clear_state
         8   -> osEventFlagsClear
       8   _app_wisun_core_set_state
         8   -> osEventFlagsSet
       8   _app_wisun_mutex_acquire
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
         8   -> osMutexAcquire
       8   _app_wisun_mutex_release
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
         8   -> osMutexRelease
      16   _app_wisun_security_setting
        16   -> _app_wisun_core_set_state
        16   -> _get_cert_str_len
        16   -> printf
        16   -> sl_wisun_set_device_certificate
        16   -> sl_wisun_set_device_private_key
        16   -> sl_wisun_set_trusted_certificate
       4   _get_cert_str_len
      32   _store_address
        32   -> app_wisun_trace_util_destroy_ip_str
        32   -> app_wisun_trace_util_get_ip_str
        32   -> printf
        32   -> sl_wisun_get_ip_address
      24   _store_current_addresses
        24   -> __aeabi_memset
        24   -> _store_address
        24   -> printf
       8   app_wisun_trace_util_destroy_ip_str
         8   -> app_wisun_free
       8   app_wisun_trace_util_destroy_time_str
         8   -> app_wisun_free
      56   sl_wisun_app_core_get_current_addresses
        56   -> __aeabi_memcpy
        56   -> _app_wisun_mutex_acquire
        56   -> _app_wisun_mutex_release
      16   sl_wisun_app_core_get_join_state
        16   -> _app_wisun_mutex_acquire
        16   -> _app_wisun_mutex_release
       8   sl_wisun_app_core_get_regulation_active
         8   -> _app_wisun_mutex_acquire
         8   -> _app_wisun_mutex_release
       8   sl_wisun_app_core_get_regulation_thresholds
         8   -> _app_wisun_mutex_acquire
         8   -> _app_wisun_mutex_release
     120   sl_wisun_app_core_get_remaining_tx_budget
       120   -> _app_wisun_mutex_acquire
       120   -> _app_wisun_mutex_release
       120   -> sl_wisun_get_statistics
       8   sl_wisun_app_core_get_state
         8   -> osEventFlagsGet
      32   sl_wisun_app_core_get_time_stat
        32   -> __aeabi_memcpy
        32   -> _app_wisun_mutex_acquire
        32   -> _app_wisun_mutex_release
        32   -> sl_sleeptimer_get_tick_count64
        32   -> sl_sleeptimer_tick64_to_ms
       8   sl_wisun_app_core_init
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
         8   -> osEventFlagsNew
         8   -> osMutexNew
      40   sl_wisun_app_core_network_connect
        40   -> _app_wisun_application_setting
        40   -> _app_wisun_core_set_state
        40   -> _app_wisun_mutex_acquire
        40   -> _app_wisun_mutex_release
        40   -> _app_wisun_security_setting
        40   -> app_wisun_setting_get
        40   -> app_wisun_setting_init_phy_cfg
        40   -> printf
        40   -> sl_sleeptimer_get_tick_count64
        40   -> sl_sleeptimer_tick64_to_ms
        40   -> sl_wisun_get_join_state
        40   -> sl_wisun_join
       8   sl_wisun_app_core_set_regulation_active
         8   -> _app_wisun_mutex_acquire
         8   -> _app_wisun_mutex_release
      16   sl_wisun_app_core_set_regulation_thresholds
        16   -> _app_wisun_mutex_acquire
        16   -> _app_wisun_mutex_release
      16   sl_wisun_app_core_wait_state
        16   -> osEventFlagsWait
      24   sl_wisun_connected_event_hnd
        24   -> _app_wisun_core_clear_state
        24   -> _app_wisun_core_set_state
        24   -> _store_current_addresses
        24   -> printf
        24   -> sl_sleeptimer_get_tick_count64
        24   -> sl_sleeptimer_tick64_to_ms
      16   sl_wisun_connection_lost_event_hnd
        16   -> _app_wisun_core_clear_state
        16   -> _app_wisun_core_set_state
        16   -> printf
        16   -> sl_wisun_join
      24   sl_wisun_disconnected_event_hnd
        24   -> _app_wisun_core_set_state
        24   -> printf
        24   -> sl_sleeptimer_get_tick_count64
        24   -> sl_sleeptimer_tick64_to_ms
       8   sl_wisun_error_event_hnd
         8   -> printf
      16   sl_wisun_join_state_event_hnd
        16   -> app_wisun_trace_util_conn_state_to_str
        16   -> printf
       8   sl_wisun_lfn_wake_up_hnd
         8   -> printf
       8   sl_wisun_multicast_reg_finish_hnd
         8   -> printf
      32   sl_wisun_network_update_event_hnd
        32   -> _store_address
        32   -> app_wisun_trace_util_destroy_ip_str
        32   -> app_wisun_trace_util_destroy_time_str
        32   -> app_wisun_trace_util_get_ip_str
        32   -> app_wisun_trace_util_time_to_str
        32   -> app_wisun_trace_util_timestamp_init
        32   -> printf
        32   -> sl_sleeptimer_get_tick_count64
        32   -> sl_sleeptimer_tick64_to_ms
       0   sl_wisun_regulation_tx_level_hnd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable28
       4  ??DataTable28_1
       4  ??DataTable28_10
       4  ??DataTable28_11
       4  ??DataTable28_12
       4  ??DataTable28_13
       4  ??DataTable28_14
       4  ??DataTable28_15
       4  ??DataTable28_16
       4  ??DataTable28_17
       4  ??DataTable28_18
       4  ??DataTable28_19
       4  ??DataTable28_2
       4  ??DataTable28_20
       4  ??DataTable28_21
       4  ??DataTable28_22
       4  ??DataTable28_23
       4  ??DataTable28_24
       4  ??DataTable28_25
       4  ??DataTable28_26
       4  ??DataTable28_27
       4  ??DataTable28_28
       4  ??DataTable28_29
       4  ??DataTable28_3
       4  ??DataTable28_30
       4  ??DataTable28_31
       4  ??DataTable28_32
       4  ??DataTable28_33
       4  ??DataTable28_34
       4  ??DataTable28_35
       4  ??DataTable28_36
       4  ??DataTable28_37
       4  ??DataTable28_38
       4  ??DataTable28_39
       4  ??DataTable28_4
       4  ??DataTable28_40
       4  ??DataTable28_41
       4  ??DataTable28_42
       4  ??DataTable28_43
       4  ??DataTable28_44
       4  ??DataTable28_45
       4  ??DataTable28_46
       4  ??DataTable28_47
       4  ??DataTable28_48
       4  ??DataTable28_49
       4  ??DataTable28_5
       4  ??DataTable28_50
       4  ??DataTable28_51
       4  ??DataTable28_52
       4  ??DataTable28_53
       4  ??DataTable28_54
       4  ??DataTable28_55
       4  ??DataTable28_56
       4  ??DataTable28_57
       4  ??DataTable28_58
       4  ??DataTable28_59
       4  ??DataTable28_6
       4  ??DataTable28_60
       4  ??DataTable28_61
       4  ??DataTable28_62
       4  ??DataTable28_7
       4  ??DataTable28_8
       4  ??DataTable28_9
       4  ??DataTable7
      16  ?_0
      20  ?_1
      36  ?_10
      12  ?_11
      16  ?_12
      40  ?_13
      44  ?_14
      24  ?_15
      20  ?_16
     112  ?_17
      24  ?_18
      36  ?_19
       1  ?_2
      44  ?_20
      24  ?_21
      28  ?_22
      44  ?_23
      44  ?_24
      40  ?_25
      48  ?_26
      56  ?_27
      56  ?_28
      56  ?_29
       8  ?_3
      52  ?_30
      40  ?_31
      32  ?_32
      16  ?_33
      16  ?_34
      12  ?_35
      16  ?_36
      16  ?_37
      20  ?_38
      32  ?_4
      12  ?_5
      40  ?_6
      12  ?_7
      44  ?_8
      28  ?_9
       4  _app_core_mtx
       4  _app_core_state
     180  _app_wisun_application_setting
      18  _app_wisun_core_clear_state
      18  _app_wisun_core_set_state
      16  _app_wisun_evt_attr
      16  _app_wisun_mtx_attr
      36  _app_wisun_mutex_acquire
      32  _app_wisun_mutex_release
     162  _app_wisun_security_setting
      80  _current_addr
      46  _get_cert_str_len
       1  _join_state
       1  _regional_regulation_active
      56  _setting
      86  _store_address
      86  _store_current_addresses
      48  _time_stat
       2  _tresholds
      12  app_wisun_trace_util_destroy_ip_str
      12  app_wisun_trace_util_destroy_time_str
     134  sl_wisun_app_core_get_current_addresses
      22  sl_wisun_app_core_get_join_state
      22  sl_wisun_app_core_get_regulation_active
      36  sl_wisun_app_core_get_regulation_thresholds
      78  sl_wisun_app_core_get_remaining_tx_budget
      30  sl_wisun_app_core_get_state
     120  sl_wisun_app_core_get_time_stat
      84  sl_wisun_app_core_init
     238  sl_wisun_app_core_network_connect
      20  sl_wisun_app_core_set_regulation_active
      24  sl_wisun_app_core_set_regulation_thresholds
      28  sl_wisun_app_core_wait_state
     176  sl_wisun_connected_event_hnd
      74  sl_wisun_connection_lost_event_hnd
     110  sl_wisun_disconnected_event_hnd
      16  sl_wisun_error_event_hnd
      60  sl_wisun_join_state_event_hnd
      26  sl_wisun_lfn_wake_up_hnd
      26  sl_wisun_multicast_reg_finish_hnd
     242  sl_wisun_network_update_event_hnd
       2  sl_wisun_regulation_tx_level_hnd
      16  time
     480  -- Other

 
   210 bytes in section .bss
     2 bytes in section .data
 1'749 bytes in section .rodata
 2'512 bytes in section .text
 
 2'512 bytes of CODE  memory
 1'749 bytes of CONST memory
   212 bytes of DATA  memory

Errors: none
Warnings: none
