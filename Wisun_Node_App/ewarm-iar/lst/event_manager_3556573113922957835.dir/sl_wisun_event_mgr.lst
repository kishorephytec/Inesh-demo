###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         29/Mar/2025  15:53:16
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode                 =  thumb
#    Endian                   =  little
#    Source file              =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\sl_wisun_event_mgr.c
#    Command line             =
#        -f "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\event_manager_3556573113922957835.dir\sl_wisun_event_mgr.o.rsp"
#        ("D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\sl_wisun_event_mgr.c"
#        -D DEBUG_EFM=1 -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -lC "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\event_manager_3556573113922957835.dir"
#        --diag_suppress Pa050 -o "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\event_manager_3556573113922957835.dir"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse --cmse -e --fpu=VFPv5_sp --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\rail\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\wisun\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\.\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_project_info\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\Core\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\RTOS2\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\device_init\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emlib\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\iostream\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\preset\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\cpu\include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\ports\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\nvm3\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\peripheral\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_psa_driver\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\common\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ble\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ieee802154\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\wmbus\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\zwave\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\chip\efr32\efr32xg2x\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\sidewalk\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\rail_util_pti\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\segger\systemview\SEGGER\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\silicon_labs\silabs_core\memory_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\toolchain\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\system\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ns_list\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ping\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\udp_client\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\sleeptimer\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\plugin\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\socket\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\autogen\\" -On
#        --use_c++_inline) --dependencies=n "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\event_manager_3556573113922957835.dir\sl_wisun_event_mgr.o.iar_deps"
#    Locale                   =  C
#    List file                =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\event_manager_3556573113922957835.dir\sl_wisun_event_mgr.lst
#    Object file              =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\event_manager_3556573113922957835.dir\sl_wisun_event_mgr.o
#    Runtime model:              
#      __CPP_Runtime          =  1
#      __SystemLibrary        =  DLib
#      __dlib_file_descriptor =  0
#      __dlib_version         =  6
#      __iar_require _Printf     
#
###############################################################################

D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\sl_wisun_event_mgr.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2021 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * SPDX-License-Identifier: Zlib
     10           *
     11           * The licensor of this software is Silicon Laboratories Inc.
     12           *
     13           * This software is provided 'as-is', without any express or implied
     14           * warranty. In no event will the authors be held liable for any damages
     15           * arising from the use of this software.
     16           *
     17           * Permission is granted to anyone to use this software for any purpose,
     18           * including commercial applications, and to alter it and redistribute it
     19           * freely, subject to the following restrictions:
     20           *
     21           * 1. The origin of this software must not be misrepresented; you must not
     22           *    claim that you wrote the original software. If you use this software
     23           *    in a product, an acknowledgment in the product documentation would be
     24           *    appreciated but is not required.
     25           * 2. Altered source versions must be plainly marked as such, and must not be
     26           *    misrepresented as being the original software.
     27           * 3. This notice may not be removed or altered from any source distribution.
     28           *
     29           ******************************************************************************/
     30          
     31          // -----------------------------------------------------------------------------
     32          //                                   Includes
     33          // -----------------------------------------------------------------------------
     34          #include <stddef.h>
     35          #include <stdio.h>
     36          #include <assert.h>
     37          #include "cmsis_os2.h"
     38          #include "sl_cmsis_os2_common.h"
     39          #include "sl_wisun_api.h"
     40          #include "sl_wisun_event_mgr.h"
     41          #include "sl_wisun_trace_util.h"
     42          
     43          // -----------------------------------------------------------------------------
     44          //                              Macros and Typedefs
     45          // -----------------------------------------------------------------------------
     46          
     47          
     48          /// Event index for lookup
     49          typedef enum {
     50            EVENT_IDX_NOTVALID = -1,
     51            EVENT_IDX_NETWORK_UPDATE,
     52            EVENT_IDX_CONNECTED,
     53            EVENT_IDX_SOCKET_DATA,
     54            EVENT_IDX_SOCKET_DATA_AVAILABLE,
     55            EVENT_IDX_SOCKET_CONNECTED,
     56            EVENT_IDX_SOCKET_CONNECTION_AVAILABLE,
     57            EVENT_IDX_SOCKET_CLOSING,
     58            EVENT_IDX_DISCONNECTED,
     59            EVENT_IDX_CONNECTION_LOST,
     60            EVENT_IDX_SOCKET_DATA_SENT,
     61            EVENT_IDX_ERROR,
     62            EVENT_IDX_JOIN_STATE,
     63            EVENT_IDX_REGULATION_TX_LEVEL,
     64            EVENT_IDX_LFN_WAKE_UP,
     65            EVENT_IDX_MULTICAST_REG_FINISH
     66          } app_wisun_event_id_t;
     67          
     68          /// Wi-SUN application callback type.
     69          /// It is always called, User cannot register or remove them.
     70          /// It contains the must have implementation of the event.
     71          typedef void (*wisun_event_callback_t) (sl_wisun_evt_t *);
     72          
     73          
     74          /// Event handler structure
     75          typedef struct event_handler {
     76            /// ID
     77            sl_wisun_msg_ind_id_t id;
     78            /// Callback for internal usage
     79            wisun_event_callback_t callback;
     80            /// Custom, registerable and removable callback for applications
     81            custom_wisun_event_callback_t custom_callback;
     82            /// Event notification
     83            app_wisun_trace_util_evt_notify_t evt_notify;
     84          } event_handler_t;
     85          
     86          // -----------------------------------------------------------------------------
     87          //                          Static Function Declarations
     88          // -----------------------------------------------------------------------------
     89          
     90          /**************************************************************************//**
     91           * @brief Event manager mutex lock
     92           *****************************************************************************/
     93          static void app_wisun_event_mgr_mutex_lock(void);
     94          
     95          /**************************************************************************//**
     96           * @brief Event manager mutex unlock
     97           *****************************************************************************/
     98          static void app_wisun_event_mgr_mutex_unlock(void);
     99          
    100          /**************************************************************************//**
    101           * @brief Decode indication event id to event lookup index
    102           * @details Using the app_wisun_event_id_t index definitions.
    103           *          It must be matched with _wisun_events lookup order
    104           * @param[in] ind Indication event ID
    105           * @return lookup index, if decoded, otherwise -1
    106           *****************************************************************************/
    107          __STATIC_INLINE app_wisun_event_id_t _decode_ind(const sl_wisun_msg_ind_id_t ind);
    108          
    109          // -----------------------------------------------------------------------------
    110          //                                Global Variables
    111          // -----------------------------------------------------------------------------
    112          
    113          // -----------------------------------------------------------------------------
    114          //                                Static Variables
    115          // -----------------------------------------------------------------------------
    116          
    117          /// App framework mutex

   \                                 In section .bss, align 4
    118          static osMutexId_t _app_wisun_event_mgr_mtx = NULL;
   \                     _app_wisun_event_mgr_mtx:
   \        0x0                      DS8 4
    119          
    120          /// App framework mutex attribute

   \                                 In section .rodata, align 4
    121          static const osMutexAttr_t _app_wisun_event_mgr_mtx_attr = {
   \                     _app_wisun_event_mgr_mtx_attr:
   \        0x0   0x....'....        DC32 ?_0, 1, 0x0, 0
   \              0x0000'0001  
   \              0x0000'0000  
   \              0x0000'0000
    122            .name      = "AppWisunEventMgrMutex",
    123            .attr_bits = osMutexRecursive,
    124            .cb_mem    = NULL,
    125            .cb_size   = 0
    126          };
    127          
    128          /// Event Lookup table
    129          /// Lookup table indexes must be matched with app_wisun_event_id_t!

   \                                 In section .data, align 4
    130          static event_handler_t _wisun_events[] = {
   \                     _wisun_events:
   \        0x0   0x8C               DC8 140
   \        0x1                      DS8 3
   \        0x4   0x....'....        DC32 sl_wisun_network_update_event_hnd, 0x0
   \              0x0000'0000
   \        0xC                      DS8 12
   \       0x18   0x81               DC8 129
   \       0x19                      DS8 3
   \       0x1C   0x....'....        DC32 sl_wisun_connected_event_hnd, 0x0
   \              0x0000'0000
   \       0x24                      DS8 12
   \       0x30   0x82               DC8 130
   \       0x31                      DS8 3
   \       0x34   0x....'....        DC32 sl_wisun_socket_data_event_hnd, 0x0
   \              0x0000'0000
   \       0x3C                      DS8 12
   \       0x48   0x83               DC8 131
   \       0x49                      DS8 3
   \       0x4C   0x....'....        DC32 sl_wisun_socket_data_available_event_hnd, 0x0
   \              0x0000'0000
   \       0x54                      DS8 12
   \       0x60   0x84               DC8 132
   \       0x61                      DS8 3
   \       0x64   0x....'....        DC32 sl_wisun_socket_connected_event_hnd, 0x0
   \              0x0000'0000
   \       0x6C                      DS8 12
   \       0x78   0x85               DC8 133
   \       0x79                      DS8 3
   \       0x7C   0x....'....        DC32 sl_wisun_socket_connection_available_event_hnd, 0x0
   \              0x0000'0000
   \       0x84                      DS8 12
   \       0x90   0x86               DC8 134
   \       0x91                      DS8 3
   \       0x94   0x....'....        DC32 sl_wisun_socket_closing_event_hnd, 0x0
   \              0x0000'0000
   \       0x9C                      DS8 12
   \       0xA8   0x87               DC8 135
   \       0xA9                      DS8 3
   \       0xAC   0x....'....        DC32 sl_wisun_disconnected_event_hnd, 0x0
   \              0x0000'0000
   \       0xB4                      DS8 12
   \       0xC0   0x88               DC8 136
   \       0xC1                      DS8 3
   \       0xC4   0x....'....        DC32 sl_wisun_connection_lost_event_hnd, 0x0
   \              0x0000'0000
   \       0xCC                      DS8 12
   \       0xD8   0x89               DC8 137
   \       0xD9                      DS8 3
   \       0xDC   0x....'....        DC32 sl_wisun_socket_data_sent_event_hnd, 0x0
   \              0x0000'0000
   \       0xE4                      DS8 12
   \       0xF0   0x8A               DC8 138
   \       0xF1                      DS8 3
   \       0xF4   0x....'....        DC32 sl_wisun_error_event_hnd, 0x0
   \              0x0000'0000
   \       0xFC                      DS8 12
   \      0x108   0x8B               DC8 139
   \      0x109                      DS8 3
   \      0x10C   0x....'....        DC32 sl_wisun_join_state_event_hnd, 0x0
   \              0x0000'0000
   \      0x114                      DS8 12
   \      0x120   0x8D               DC8 141
   \      0x121                      DS8 3
   \      0x124   0x....'....        DC32 sl_wisun_regulation_tx_level_hnd, 0x0
   \              0x0000'0000
   \      0x12C                      DS8 12
   \      0x138   0x90               DC8 144
   \      0x139                      DS8 3
   \      0x13C   0x....'....        DC32 sl_wisun_lfn_wake_up_hnd, 0x0
   \              0x0000'0000
   \      0x144                      DS8 12
   \      0x150   0x91               DC8 145
   \      0x151                      DS8 3
   \      0x154   0x....'....        DC32 sl_wisun_multicast_reg_finish_hnd, 0x0
   \              0x0000'0000
   \      0x15C                      DS8 12
    131            {
    132              .id = SL_WISUN_MSG_NETWORK_UPDATE_IND_ID,
    133              .callback = sl_wisun_network_update_event_hnd,
    134              .custom_callback = NULL
    135            },
    136            {
    137              .id = SL_WISUN_MSG_CONNECTED_IND_ID,
    138              .callback = sl_wisun_connected_event_hnd,
    139              .custom_callback = NULL
    140            },
    141            {
    142              .id = SL_WISUN_MSG_SOCKET_DATA_IND_ID,
    143              .callback = sl_wisun_socket_data_event_hnd,
    144              .custom_callback = NULL
    145            },
    146            {
    147              .id = SL_WISUN_MSG_SOCKET_DATA_AVAILABLE_IND_ID,
    148              .callback = sl_wisun_socket_data_available_event_hnd,
    149              .custom_callback = NULL
    150            },
    151            {
    152              .id = SL_WISUN_MSG_SOCKET_CONNECTED_IND_ID,
    153              .callback = sl_wisun_socket_connected_event_hnd,
    154              .custom_callback = NULL
    155            },
    156            {
    157              .id = SL_WISUN_MSG_SOCKET_CONNECTION_AVAILABLE_IND_ID,
    158              .callback = sl_wisun_socket_connection_available_event_hnd,
    159              .custom_callback = NULL
    160            },
    161            {
    162              .id = SL_WISUN_MSG_SOCKET_CLOSING_IND_ID,
    163              .callback = sl_wisun_socket_closing_event_hnd,
    164              .custom_callback = NULL
    165            },
    166            {
    167              .id = SL_WISUN_MSG_DISCONNECTED_IND_ID,
    168              .callback = sl_wisun_disconnected_event_hnd,
    169              .custom_callback = NULL
    170            },
    171            {
    172              .id = SL_WISUN_MSG_CONNECTION_LOST_IND_ID,
    173              .callback = sl_wisun_connection_lost_event_hnd,
    174              .custom_callback = NULL
    175            },
    176            {
    177              .id = SL_WISUN_MSG_SOCKET_DATA_SENT_IND_ID,
    178              .callback = sl_wisun_socket_data_sent_event_hnd,
    179              .custom_callback = NULL
    180            },
    181            {
    182              .id = SL_WISUN_MSG_ERROR_IND_ID,
    183              .callback = sl_wisun_error_event_hnd,
    184              .custom_callback = NULL
    185            },
    186            {
    187              .id = SL_WISUN_MSG_JOIN_STATE_IND_ID,
    188              .callback = sl_wisun_join_state_event_hnd,
    189              .custom_callback = NULL
    190            },
    191            {
    192              .id = SL_WISUN_MSG_REGULATION_TX_LEVEL_IND_ID,
    193              .callback = sl_wisun_regulation_tx_level_hnd,
    194              .custom_callback = NULL
    195            },
    196            {
    197              .id = SL_WISUN_MSG_LFN_WAKE_UP_IND_ID,
    198              .callback = sl_wisun_lfn_wake_up_hnd,
    199              .custom_callback = NULL
    200            },
    201            {
    202              .id = SL_WISUN_MSG_LFN_MULTICAST_REG_IND_ID,
    203              .callback = sl_wisun_multicast_reg_finish_hnd,
    204              .custom_callback = NULL
    205            }
    206          };
    207          
    208          /// Handled event count

   \                                 In section .rodata, align 2
    209          static const uint16_t _wisun_event_size = sizeof(_wisun_events) / sizeof(event_handler_t);
   \                     _wisun_event_size:
   \        0x0   0x000F             DC16 15
    210          
    211          // -----------------------------------------------------------------------------
    212          //                          Public Function Definitions
    213          // -----------------------------------------------------------------------------
    214          
    215          /* Event Manager initialization */

   \                                 In section .text, align 2, keep-with-next
    216          void app_wisun_event_mgr_init(void)
    217          {
   \                     app_wisun_event_mgr_init: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    218            // Init mutex
    219            _app_wisun_event_mgr_mtx = osMutexNew(&_app_wisun_event_mgr_mtx_attr);
   \        0x2   0x....             LDR.N    R4,??DataTable8
   \        0x4   0x....             LDR.N    R0,??DataTable8_1
   \        0x6   0x.... 0x....      BL       osMutexNew
   \        0xA   0x6020             STR      R0,[R4, #+0]
    220            assert(_app_wisun_event_mgr_mtx != NULL);
   \        0xC   0x6820             LDR      R0,[R4, #+0]
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD106             BNE.N    ??app_wisun_event_mgr_init_0
   \       0x12   0x22DC             MOVS     R2,#+220
   \       0x14   0x....             LDR.N    R1,??DataTable8_2
   \       0x16   0x....             LDR.N    R0,??DataTable8_3
   \       0x18   0x.... 0x....      BL       __aeabi_assert
   \       0x1C   0x.... 0x....      BL       __iar_EmptyStepPoint
    221          
    222            // Init event flags
    223            for (uint16_t i = 0; i < _wisun_event_size; ++i) {
   \                     ??app_wisun_event_mgr_init_0: (+1)
   \       0x20   0x2400             MOVS     R4,#+0
   \                     ??app_wisun_event_mgr_init_1: (+1)
   \       0x22   0x0020             MOVS     R0,R4
   \       0x24   0x....             LDR.N    R1,??DataTable8_4
   \       0x26   0x8809             LDRH     R1,[R1, #+0]
   \       0x28   0xB280             UXTH     R0,R0
   \       0x2A   0x4288             CMP      R0,R1
   \       0x2C   0xD20C             BCS.N    ??app_wisun_event_mgr_init_2
    224              app_wisun_trace_util_evt_notify_init(&_wisun_events[i].evt_notify, osFlagsWaitAll);
   \       0x2E   0x2101             MOVS     R1,#+1
   \       0x30   0x....             LDR.N    R3,??DataTable8_5
   \       0x32   0x0022             MOVS     R2,R4
   \       0x34   0xB292             UXTH     R2,R2
   \       0x36   0x2018             MOVS     R0,#+24
   \       0x38   0x4342             MULS     R2,R0,R2
   \       0x3A   0xEB03 0x0002      ADD      R0,R3,R2
   \       0x3E   0x300C             ADDS     R0,R0,#+12
   \       0x40   0x.... 0x....      BL       app_wisun_trace_util_evt_notify_init
    225            }
   \       0x44   0x1C64             ADDS     R4,R4,#+1
   \       0x46   0xE7EC             B.N      ??app_wisun_event_mgr_init_1
    226          }
   \                     ??app_wisun_event_mgr_init_2: (+1)
   \       0x48   0xBD10             POP      {R4,PC}
    227          
    228          /* Event Manager custom callback register */

   \                                 In section .text, align 2, keep-with-next
    229          sl_status_t app_wisun_em_custom_callback_register(sl_wisun_msg_ind_id_t id,
    230                                                            custom_wisun_event_callback_t callback)
    231          {
   \                     app_wisun_em_custom_callback_register: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    232            osKernelState_t kernel_state = osKernelLocked;
   \        0x6   0x2703             MOVS     R7,#+3
    233          
    234            if (callback == NULL) {
   \        0x8   0x0028             MOVS     R0,R5
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD101             BNE.N    ??app_wisun_em_custom_callback_register_0
    235              return SL_STATUS_FAIL; // parameter error
   \        0xE   0x2001             MOVS     R0,#+1
   \       0x10   0xE025             B.N      ??app_wisun_em_custom_callback_register_1
    236            }
    237          
    238            kernel_state = osKernelGetState();
   \                     ??app_wisun_em_custom_callback_register_0: (+1)
   \       0x12   0x.... 0x....      BL       osKernelGetState
   \       0x16   0x0006             MOVS     R6,R0
    239          
    240            // check kernel state to avoid mutex acquire issue
    241            if (kernel_state == osKernelRunning) {
   \       0x18   0x2E02             CMP      R6,#+2
   \       0x1A   0xD101             BNE.N    ??app_wisun_em_custom_callback_register_2
    242              app_wisun_event_mgr_mutex_lock();
   \       0x1C   0x.... 0x....      BL       app_wisun_event_mgr_mutex_lock
    243            }
    244          
    245            for (uint16_t i = 0; i < _wisun_event_size; ++i) {
   \                     ??app_wisun_em_custom_callback_register_2: (+1)
   \       0x20   0x2000             MOVS     R0,#+0
   \                     ??app_wisun_em_custom_callback_register_3: (+1)
   \       0x22   0x0001             MOVS     R1,R0
   \       0x24   0x....             LDR.N    R2,??DataTable8_4
   \       0x26   0x8812             LDRH     R2,[R2, #+0]
   \       0x28   0xB289             UXTH     R1,R1
   \       0x2A   0x4291             CMP      R1,R2
   \       0x2C   0xD212             BCS.N    ??app_wisun_em_custom_callback_register_4
    246              if (_wisun_events[i].id == id) {
   \       0x2E   0x2118             MOVS     R1,#+24
   \       0x30   0x....             LDR.N    R2,??DataTable8_5
   \       0x32   0x0003             MOVS     R3,R0
   \       0x34   0xB29B             UXTH     R3,R3
   \       0x36   0x434B             MULS     R3,R1,R3
   \       0x38   0x5CD7             LDRB     R7,[R2, R3]
   \       0x3A   0x0023             MOVS     R3,R4
   \       0x3C   0xB2DB             UXTB     R3,R3
   \       0x3E   0x429F             CMP      R7,R3
   \       0x40   0xD106             BNE.N    ??app_wisun_em_custom_callback_register_5
    247                _wisun_events[i].custom_callback = callback;
   \       0x42   0x0003             MOVS     R3,R0
   \       0x44   0xB29B             UXTH     R3,R3
   \       0x46   0xFB01 0xF103      MUL      R1,R1,R3
   \       0x4A   0x4411             ADD      R1,R2,R1
   \       0x4C   0x608D             STR      R5,[R1, #+8]
    248                break;
   \       0x4E   0xE001             B.N      ??app_wisun_em_custom_callback_register_4
    249              }
    250            }
   \                     ??app_wisun_em_custom_callback_register_5: (+1)
   \       0x50   0x1C40             ADDS     R0,R0,#+1
   \       0x52   0xE7E6             B.N      ??app_wisun_em_custom_callback_register_3
    251          
    252            if (kernel_state == osKernelRunning) {
   \                     ??app_wisun_em_custom_callback_register_4: (+1)
   \       0x54   0x2E02             CMP      R6,#+2
   \       0x56   0xD101             BNE.N    ??app_wisun_em_custom_callback_register_6
    253              app_wisun_event_mgr_mutex_unlock();
   \       0x58   0x.... 0x....      BL       app_wisun_event_mgr_mutex_unlock
    254            }
    255          
    256            return SL_STATUS_OK;
   \                     ??app_wisun_em_custom_callback_register_6: (+1)
   \       0x5C   0x2000             MOVS     R0,#+0
   \                     ??app_wisun_em_custom_callback_register_1: (+1)
   \       0x5E   0xBDF2             POP      {R1,R4-R7,PC}
    257          }
    258          
    259          /* Event Manager custom callback removing */

   \                                 In section .text, align 2, keep-with-next
    260          sl_status_t app_wisun_em_custom_callback_remove(sl_wisun_msg_ind_id_t id)
    261          {
   \                     app_wisun_em_custom_callback_remove: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
    262            osKernelState_t kernel_state = osKernelLocked;
   \        0x4   0x2603             MOVS     R6,#+3
    263          
    264            kernel_state = osKernelGetState();
   \        0x6   0x.... 0x....      BL       osKernelGetState
   \        0xA   0x0005             MOVS     R5,R0
    265          
    266            // check kernel state to avoid mutex acquire issue
    267            if (kernel_state == osKernelRunning) {
   \        0xC   0x2D02             CMP      R5,#+2
   \        0xE   0xD101             BNE.N    ??app_wisun_em_custom_callback_remove_0
    268              app_wisun_event_mgr_mutex_lock();
   \       0x10   0x.... 0x....      BL       app_wisun_event_mgr_mutex_lock
    269            }
    270          
    271            for (uint16_t i = 0; i < _wisun_event_size; ++i) {
   \                     ??app_wisun_em_custom_callback_remove_0: (+1)
   \       0x14   0x2000             MOVS     R0,#+0
   \                     ??app_wisun_em_custom_callback_remove_1: (+1)
   \       0x16   0x0001             MOVS     R1,R0
   \       0x18   0x....             LDR.N    R2,??DataTable8_4
   \       0x1A   0x8812             LDRH     R2,[R2, #+0]
   \       0x1C   0xB289             UXTH     R1,R1
   \       0x1E   0x4291             CMP      R1,R2
   \       0x20   0xD213             BCS.N    ??app_wisun_em_custom_callback_remove_2
    272              if (_wisun_events[i].id == id) {
   \       0x22   0x2118             MOVS     R1,#+24
   \       0x24   0x....             LDR.N    R2,??DataTable8_5
   \       0x26   0x0003             MOVS     R3,R0
   \       0x28   0xB29B             UXTH     R3,R3
   \       0x2A   0x434B             MULS     R3,R1,R3
   \       0x2C   0x5CD6             LDRB     R6,[R2, R3]
   \       0x2E   0x0023             MOVS     R3,R4
   \       0x30   0xB2DB             UXTB     R3,R3
   \       0x32   0x429E             CMP      R6,R3
   \       0x34   0xD107             BNE.N    ??app_wisun_em_custom_callback_remove_3
    273                _wisun_events[i].custom_callback = NULL;
   \       0x36   0x0003             MOVS     R3,R0
   \       0x38   0xB29B             UXTH     R3,R3
   \       0x3A   0xFB01 0xF103      MUL      R1,R1,R3
   \       0x3E   0x440A             ADD      R2,R2,R1
   \       0x40   0x2100             MOVS     R1,#+0
   \       0x42   0x6091             STR      R1,[R2, #+8]
    274                break;
   \       0x44   0xE001             B.N      ??app_wisun_em_custom_callback_remove_2
    275              }
    276            }
   \                     ??app_wisun_em_custom_callback_remove_3: (+1)
   \       0x46   0x1C40             ADDS     R0,R0,#+1
   \       0x48   0xE7E5             B.N      ??app_wisun_em_custom_callback_remove_1
    277          
    278            if (kernel_state == osKernelRunning) {
   \                     ??app_wisun_em_custom_callback_remove_2: (+1)
   \       0x4A   0x2D02             CMP      R5,#+2
   \       0x4C   0xD101             BNE.N    ??app_wisun_em_custom_callback_remove_4
    279              app_wisun_event_mgr_mutex_unlock();
   \       0x4E   0x.... 0x....      BL       app_wisun_event_mgr_mutex_unlock
    280            }
    281          
    282            return SL_STATUS_OK;
   \                     ??app_wisun_em_custom_callback_remove_4: (+1)
   \       0x52   0x2000             MOVS     R0,#+0
   \       0x54   0xBD70             POP      {R4-R6,PC}
    283          }
    284          
    285          /* Wi-SUN event callback */

   \                                 In section .text, align 2, keep-with-next
    286          void sl_wisun_on_event(sl_wisun_evt_t *evt)
    287          {
   \                     sl_wisun_on_event: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
    288            app_wisun_event_id_t idx = _decode_ind((sl_wisun_msg_ind_id_t) evt->header.id);
   \        0x4   0x78A0             LDRB     R0,[R4, #+2]
   \        0x6   0x.... 0x....      BL       _decode_ind
   \        0xA   0x0005             MOVS     R5,R0
    289          
    290            app_wisun_event_mgr_mutex_lock();
   \        0xC   0x.... 0x....      BL       app_wisun_event_mgr_mutex_lock
    291          
    292            if (EVENT_IDX_NOTVALID == idx) {
   \       0x10   0x0029             MOVS     R1,R5
   \       0x12   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x16   0xB249             SXTB     R1,R1
   \       0x18   0x4281             CMP      R1,R0
   \       0x1A   0xD104             BNE.N    ??sl_wisun_on_event_0
    293              printf("[Unknown event: %d]\r\n", evt->header.id);
   \       0x1C   0x78A1             LDRB     R1,[R4, #+2]
   \       0x1E   0x....             LDR.N    R0,??DataTable8_6
   \       0x20   0x.... 0x....      BL       printf
   \       0x24   0xE029             B.N      ??sl_wisun_on_event_1
    294            } else {
    295              _wisun_events[idx].callback(evt);
   \                     ??sl_wisun_on_event_0: (+1)
   \       0x26   0x2618             MOVS     R6,#+24
   \       0x28   0x....             LDR.N    R7,??DataTable8_5
   \       0x2A   0x0020             MOVS     R0,R4
   \       0x2C   0x0029             MOVS     R1,R5
   \       0x2E   0xB249             SXTB     R1,R1
   \       0x30   0xFB11 0xF106      SMULBB   R1,R1,R6
   \       0x34   0x4439             ADD      R1,R7,R1
   \       0x36   0x6849             LDR      R1,[R1, #+4]
   \       0x38   0x4788             BLX      R1
    296              if (_wisun_events[idx].custom_callback != NULL) {
   \       0x3A   0x0028             MOVS     R0,R5
   \       0x3C   0xB240             SXTB     R0,R0
   \       0x3E   0xFB10 0xF006      SMULBB   R0,R0,R6
   \       0x42   0x4438             ADD      R0,R7,R0
   \       0x44   0x6880             LDR      R0,[R0, #+8]
   \       0x46   0x2800             CMP      R0,#+0
   \       0x48   0xD007             BEQ.N    ??sl_wisun_on_event_2
    297                _wisun_events[idx].custom_callback(evt);
   \       0x4A   0x0020             MOVS     R0,R4
   \       0x4C   0x0029             MOVS     R1,R5
   \       0x4E   0xB249             SXTB     R1,R1
   \       0x50   0xFB11 0xF106      SMULBB   R1,R1,R6
   \       0x54   0x4439             ADD      R1,R7,R1
   \       0x56   0x6889             LDR      R1,[R1, #+8]
   \       0x58   0x4788             BLX      R1
    298              }
    299          
    300              if (_wisun_events[idx].evt_notify.evt_chs) {
   \                     ??sl_wisun_on_event_2: (+1)
   \       0x5A   0x0028             MOVS     R0,R5
   \       0x5C   0xB240             SXTB     R0,R0
   \       0x5E   0xFB10 0xF006      SMULBB   R0,R0,R6
   \       0x62   0x4438             ADD      R0,R7,R0
   \       0x64   0x6900             LDR      R0,[R0, #+16]
   \       0x66   0x2800             CMP      R0,#+0
   \       0x68   0xD007             BEQ.N    ??sl_wisun_on_event_1
    301                app_wisun_trace_util_evt_notfiy_chs(&_wisun_events[idx].evt_notify);
   \       0x6A   0x0028             MOVS     R0,R5
   \       0x6C   0xB240             SXTB     R0,R0
   \       0x6E   0xFB10 0xF006      SMULBB   R0,R0,R6
   \       0x72   0x4438             ADD      R0,R7,R0
   \       0x74   0x300C             ADDS     R0,R0,#+12
   \       0x76   0x.... 0x....      BL       app_wisun_trace_util_evt_notfiy_chs
    302              }
    303            }
    304          
    305            app_wisun_event_mgr_mutex_unlock();
   \                     ??sl_wisun_on_event_1: (+1)
   \       0x7A   0x.... 0x....      BL       app_wisun_event_mgr_mutex_unlock
    306          }
   \       0x7E   0xBDF1             POP      {R0,R4-R7,PC}
    307          

   \                                 In section .text, align 2, keep-with-next
    308          sl_status_t app_wisun_em_subscribe_evt_notification(const sl_wisun_msg_ind_id_t id, uint8_t * const evt_ch)
    309          {
   \                     app_wisun_em_subscribe_evt_notification: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
    310            app_wisun_event_id_t idx = _decode_ind(id);
   \        0x8   0x0020             MOVS     R0,R4
   \        0xA   0xB2C0             UXTB     R0,R0
   \        0xC   0x.... 0x....      BL       _decode_ind
   \       0x10   0x0006             MOVS     R6,R0
    311            sl_status_t ret = SL_STATUS_FAIL;
   \       0x12   0x2701             MOVS     R7,#+1
    312            osKernelState_t kernel_state = osKernelLocked;
   \       0x14   0xF05F 0x0903      MOVS     R9,#+3
    313          
    314            kernel_state = osKernelGetState();
   \       0x18   0x.... 0x....      BL       osKernelGetState
   \       0x1C   0x4680             MOV      R8,R0
    315          
    316            if (EVENT_IDX_NOTVALID == idx) {
   \       0x1E   0x0031             MOVS     R1,R6
   \       0x20   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x24   0xB249             SXTB     R1,R1
   \       0x26   0x4281             CMP      R1,R0
   \       0x28   0xD101             BNE.N    ??app_wisun_em_subscribe_evt_notification_0
    317              return ret;
   \       0x2A   0x0038             MOVS     R0,R7
   \       0x2C   0xE016             B.N      ??app_wisun_em_subscribe_evt_notification_1
    318            }
    319          
    320            if (kernel_state == osKernelRunning) {
   \                     ??app_wisun_em_subscribe_evt_notification_0: (+1)
   \       0x2E   0xF1B8 0x0F02      CMP      R8,#+2
   \       0x32   0xD101             BNE.N    ??app_wisun_em_subscribe_evt_notification_2
    321              app_wisun_event_mgr_mutex_lock();
   \       0x34   0x.... 0x....      BL       app_wisun_event_mgr_mutex_lock
    322            }
    323          
    324            ret = app_wisun_trace_util_evt_notify_subscribe_ch(&_wisun_events[idx].evt_notify, evt_ch);
   \                     ??app_wisun_em_subscribe_evt_notification_2: (+1)
   \       0x38   0x0029             MOVS     R1,R5
   \       0x3A   0x....             LDR.N    R0,??DataTable8_5
   \       0x3C   0x0033             MOVS     R3,R6
   \       0x3E   0xB25B             SXTB     R3,R3
   \       0x40   0x2218             MOVS     R2,#+24
   \       0x42   0xFB13 0xF202      SMULBB   R2,R3,R2
   \       0x46   0x4410             ADD      R0,R0,R2
   \       0x48   0x300C             ADDS     R0,R0,#+12
   \       0x4A   0x.... 0x....      BL       app_wisun_trace_util_evt_notify_subscribe_ch
   \       0x4E   0x4681             MOV      R9,R0
    325          
    326            if (kernel_state == osKernelRunning) {
   \       0x50   0xF1B8 0x0F02      CMP      R8,#+2
   \       0x54   0xD101             BNE.N    ??app_wisun_em_subscribe_evt_notification_3
    327              app_wisun_event_mgr_mutex_unlock();
   \       0x56   0x.... 0x....      BL       app_wisun_event_mgr_mutex_unlock
    328            }
    329          
    330            return ret;
   \                     ??app_wisun_em_subscribe_evt_notification_3: (+1)
   \       0x5A   0x4648             MOV      R0,R9
   \                     ??app_wisun_em_subscribe_evt_notification_1: (+1)
   \       0x5C   0xE8BD 0x83F2      POP      {R1,R4-R9,PC}
    331          }
    332          

   \                                 In section .text, align 2, keep-with-next
    333          sl_status_t app_wisun_em_unsubscribe_evt_notification(const sl_wisun_msg_ind_id_t id, const uint8_t evt_ch)
    334          {
   \                     app_wisun_em_unsubscribe_evt_notification: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
    335            app_wisun_event_id_t idx = _decode_ind(id);
   \        0x8   0x0020             MOVS     R0,R4
   \        0xA   0xB2C0             UXTB     R0,R0
   \        0xC   0x.... 0x....      BL       _decode_ind
   \       0x10   0x0006             MOVS     R6,R0
    336            sl_status_t ret = SL_STATUS_FAIL;
   \       0x12   0x2701             MOVS     R7,#+1
    337            osKernelState_t kernel_state = osKernelLocked;
   \       0x14   0xF05F 0x0903      MOVS     R9,#+3
    338          
    339            kernel_state = osKernelGetState();
   \       0x18   0x.... 0x....      BL       osKernelGetState
   \       0x1C   0x4680             MOV      R8,R0
    340          
    341            if (EVENT_IDX_NOTVALID == idx) {
   \       0x1E   0x0031             MOVS     R1,R6
   \       0x20   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x24   0xB249             SXTB     R1,R1
   \       0x26   0x4281             CMP      R1,R0
   \       0x28   0xD101             BNE.N    ??app_wisun_em_unsubscribe_evt_notification_0
    342              return ret;
   \       0x2A   0x0038             MOVS     R0,R7
   \       0x2C   0xE017             B.N      ??app_wisun_em_unsubscribe_evt_notification_1
    343            }
    344          
    345            if (kernel_state == osKernelRunning) {
   \                     ??app_wisun_em_unsubscribe_evt_notification_0: (+1)
   \       0x2E   0xF1B8 0x0F02      CMP      R8,#+2
   \       0x32   0xD101             BNE.N    ??app_wisun_em_unsubscribe_evt_notification_2
    346              app_wisun_event_mgr_mutex_lock();
   \       0x34   0x.... 0x....      BL       app_wisun_event_mgr_mutex_lock
    347            }
    348          
    349            ret = app_wisun_trace_util_evt_notify_unsubscribe_ch(&_wisun_events[idx].evt_notify, evt_ch);
   \                     ??app_wisun_em_unsubscribe_evt_notification_2: (+1)
   \       0x38   0x0029             MOVS     R1,R5
   \       0x3A   0xB2C9             UXTB     R1,R1
   \       0x3C   0x....             LDR.N    R0,??DataTable8_5
   \       0x3E   0x0033             MOVS     R3,R6
   \       0x40   0xB25B             SXTB     R3,R3
   \       0x42   0x2218             MOVS     R2,#+24
   \       0x44   0xFB13 0xF202      SMULBB   R2,R3,R2
   \       0x48   0x4410             ADD      R0,R0,R2
   \       0x4A   0x300C             ADDS     R0,R0,#+12
   \       0x4C   0x.... 0x....      BL       app_wisun_trace_util_evt_notify_unsubscribe_ch
   \       0x50   0x4681             MOV      R9,R0
    350          
    351            if (kernel_state == osKernelRunning) {
   \       0x52   0xF1B8 0x0F02      CMP      R8,#+2
   \       0x56   0xD101             BNE.N    ??app_wisun_em_unsubscribe_evt_notification_3
    352              app_wisun_event_mgr_mutex_unlock();
   \       0x58   0x.... 0x....      BL       app_wisun_event_mgr_mutex_unlock
    353            }
    354          
    355            return ret;
   \                     ??app_wisun_em_unsubscribe_evt_notification_3: (+1)
   \       0x5C   0x4648             MOV      R0,R9
   \                     ??app_wisun_em_unsubscribe_evt_notification_1: (+1)
   \       0x5E   0xE8BD 0x83F2      POP      {R1,R4-R9,PC}
    356          }
    357          

   \                                 In section .text, align 2, keep-with-next
    358          sl_status_t app_wisun_em_wait_evt_notification(const sl_wisun_msg_ind_id_t id, const uint8_t evt_ch)
    359          {
   \                     app_wisun_em_wait_evt_notification: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    360            app_wisun_event_id_t idx = _decode_ind(id);
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0xB2C0             UXTB     R0,R0
   \        0xA   0x.... 0x....      BL       _decode_ind
   \        0xE   0x0006             MOVS     R6,R0
    361            sl_status_t ret = SL_STATUS_FAIL;
   \       0x10   0x2701             MOVS     R7,#+1
    362          
    363            if (EVENT_IDX_NOTVALID == idx) {
   \       0x12   0x0031             MOVS     R1,R6
   \       0x14   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x18   0xB249             SXTB     R1,R1
   \       0x1A   0x4281             CMP      R1,R0
   \       0x1C   0xD101             BNE.N    ??app_wisun_em_wait_evt_notification_0
    364              return ret;
   \       0x1E   0x0038             MOVS     R0,R7
   \       0x20   0xE00E             B.N      ??app_wisun_em_wait_evt_notification_1
    365            }
    366            
    367            ret = app_wisun_trace_util_evt_notify_wait(&_wisun_events[idx].evt_notify, 
    368                                                       1U << evt_ch, 
    369                                                       osWaitForever);
   \                     ??app_wisun_em_wait_evt_notification_0: (+1)
   \       0x22   0xF05F 0x32FF      MOVS     R2,#+4294967295
   \       0x26   0x2101             MOVS     R1,#+1
   \       0x28   0x40A9             LSLS     R1,R1,R5
   \       0x2A   0x....             LDR.N    R0,??DataTable8_5
   \       0x2C   0x46B4             MOV      R12,R6
   \       0x2E   0xFA4F 0xFC8C      SXTB     R12,R12
   \       0x32   0x2318             MOVS     R3,#+24
   \       0x34   0xFB1C 0xF303      SMULBB   R3,R12,R3
   \       0x38   0x4418             ADD      R0,R0,R3
   \       0x3A   0x300C             ADDS     R0,R0,#+12
   \       0x3C   0x.... 0x....      BL       app_wisun_trace_util_evt_notify_wait
    370          
    371            return ret;
   \                     ??app_wisun_em_wait_evt_notification_1: (+1)
   \       0x40   0xBDF2             POP      {R1,R4-R7,PC}
    372          }
    373          
    374          // -----------------------------------------------------------------------------
    375          //                          Static Function Definitions
    376          // -----------------------------------------------------------------------------
    377          
    378          /* Mutex acquire */

   \                                 In section .text, align 2, keep-with-next
    379          static void app_wisun_event_mgr_mutex_lock(void)
    380          {
   \                     app_wisun_event_mgr_mutex_lock: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    381            assert(osMutexAcquire(_app_wisun_event_mgr_mtx, osWaitForever) == osOK);
   \        0x2   0xF05F 0x31FF      MOVS     R1,#+4294967295
   \        0x6   0x....             LDR.N    R0,??DataTable8
   \        0x8   0x6800             LDR      R0,[R0, #+0]
   \        0xA   0x.... 0x....      BL       osMutexAcquire
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD007             BEQ.N    ??app_wisun_event_mgr_mutex_lock_0
   \       0x12   0xF240 0x127D      MOVW     R2,#+381
   \       0x16   0x....             LDR.N    R1,??DataTable8_2
   \       0x18   0x....             LDR.N    R0,??DataTable8_7
   \       0x1A   0x.... 0x....      BL       __aeabi_assert
   \       0x1E   0x.... 0x....      BL       __iar_EmptyStepPoint
    382          }
   \                     ??app_wisun_event_mgr_mutex_lock_0: (+1)
   \       0x22   0xBD01             POP      {R0,PC}
    383          
    384          /* Mutex release */

   \                                 In section .text, align 2, keep-with-next
    385          static void app_wisun_event_mgr_mutex_unlock(void)
    386          {
   \                     app_wisun_event_mgr_mutex_unlock: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    387            assert(osMutexRelease(_app_wisun_event_mgr_mtx) == osOK);
   \        0x2   0x....             LDR.N    R0,??DataTable8
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x.... 0x....      BL       osMutexRelease
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD007             BEQ.N    ??app_wisun_event_mgr_mutex_unlock_0
   \        0xE   0xF240 0x1283      MOVW     R2,#+387
   \       0x12   0x....             LDR.N    R1,??DataTable8_2
   \       0x14   0x....             LDR.N    R0,??DataTable8_8
   \       0x16   0x.... 0x....      BL       __aeabi_assert
   \       0x1A   0x.... 0x....      BL       __iar_EmptyStepPoint
    388          }
   \                     ??app_wisun_event_mgr_mutex_unlock_0: (+1)
   \       0x1E   0xBD01             POP      {R0,PC}
    389          
    390          /* Decode wisun event id to lookup index */

   \                                 In section .text, align 2, keep-with-next
    391          __STATIC_INLINE app_wisun_event_id_t _decode_ind(const sl_wisun_msg_ind_id_t ind)
    392          {
   \                     _decode_ind: (+1)
   \        0x0   0x0001             MOVS     R1,R0
    393            switch (ind) {
   \        0x2   0x0008             MOVS     R0,R1
   \        0x4   0xB2C0             UXTB     R0,R0
   \        0x6   0x2881             CMP      R0,#+129
   \        0x8   0xD01E             BEQ.N    ??_decode_ind_0
   \        0xA   0x2882             CMP      R0,#+130
   \        0xC   0xD01E             BEQ.N    ??_decode_ind_1
   \        0xE   0x2883             CMP      R0,#+131
   \       0x10   0xD01E             BEQ.N    ??_decode_ind_2
   \       0x12   0x2884             CMP      R0,#+132
   \       0x14   0xD01E             BEQ.N    ??_decode_ind_3
   \       0x16   0x2885             CMP      R0,#+133
   \       0x18   0xD01E             BEQ.N    ??_decode_ind_4
   \       0x1A   0x2886             CMP      R0,#+134
   \       0x1C   0xD01E             BEQ.N    ??_decode_ind_5
   \       0x1E   0x2887             CMP      R0,#+135
   \       0x20   0xD01E             BEQ.N    ??_decode_ind_6
   \       0x22   0x2888             CMP      R0,#+136
   \       0x24   0xD01E             BEQ.N    ??_decode_ind_7
   \       0x26   0x2889             CMP      R0,#+137
   \       0x28   0xD01E             BEQ.N    ??_decode_ind_8
   \       0x2A   0x288A             CMP      R0,#+138
   \       0x2C   0xD01E             BEQ.N    ??_decode_ind_9
   \       0x2E   0x288B             CMP      R0,#+139
   \       0x30   0xD01E             BEQ.N    ??_decode_ind_10
   \       0x32   0x288C             CMP      R0,#+140
   \       0x34   0xD006             BEQ.N    ??_decode_ind_11
   \       0x36   0x288D             CMP      R0,#+141
   \       0x38   0xD01C             BEQ.N    ??_decode_ind_12
   \       0x3A   0x2890             CMP      R0,#+144
   \       0x3C   0xD01C             BEQ.N    ??_decode_ind_13
   \       0x3E   0x2891             CMP      R0,#+145
   \       0x40   0xD01C             BEQ.N    ??_decode_ind_14
   \       0x42   0xE01D             B.N      ??_decode_ind_15
    394              case SL_WISUN_MSG_NETWORK_UPDATE_IND_ID:                return EVENT_IDX_NETWORK_UPDATE;
   \                     ??_decode_ind_11: (+1)
   \       0x44   0x2000             MOVS     R0,#+0
   \       0x46   0xE01D             B.N      ??_decode_ind_16
    395              case SL_WISUN_MSG_CONNECTED_IND_ID:                     return EVENT_IDX_CONNECTED;
   \                     ??_decode_ind_0: (+1)
   \       0x48   0x2001             MOVS     R0,#+1
   \       0x4A   0xE01B             B.N      ??_decode_ind_16
    396              case SL_WISUN_MSG_SOCKET_DATA_IND_ID:                   return EVENT_IDX_SOCKET_DATA;
   \                     ??_decode_ind_1: (+1)
   \       0x4C   0x2002             MOVS     R0,#+2
   \       0x4E   0xE019             B.N      ??_decode_ind_16
    397              case SL_WISUN_MSG_SOCKET_DATA_AVAILABLE_IND_ID:         return EVENT_IDX_SOCKET_DATA_AVAILABLE;
   \                     ??_decode_ind_2: (+1)
   \       0x50   0x2003             MOVS     R0,#+3
   \       0x52   0xE017             B.N      ??_decode_ind_16
    398              case SL_WISUN_MSG_SOCKET_CONNECTED_IND_ID:              return EVENT_IDX_SOCKET_CONNECTED;
   \                     ??_decode_ind_3: (+1)
   \       0x54   0x2004             MOVS     R0,#+4
   \       0x56   0xE015             B.N      ??_decode_ind_16
    399              case SL_WISUN_MSG_SOCKET_CONNECTION_AVAILABLE_IND_ID:   return EVENT_IDX_SOCKET_CONNECTION_AVAILABLE;
   \                     ??_decode_ind_4: (+1)
   \       0x58   0x2005             MOVS     R0,#+5
   \       0x5A   0xE013             B.N      ??_decode_ind_16
    400              case SL_WISUN_MSG_SOCKET_CLOSING_IND_ID:                return EVENT_IDX_SOCKET_CLOSING;
   \                     ??_decode_ind_5: (+1)
   \       0x5C   0x2006             MOVS     R0,#+6
   \       0x5E   0xE011             B.N      ??_decode_ind_16
    401              case SL_WISUN_MSG_DISCONNECTED_IND_ID:                  return EVENT_IDX_DISCONNECTED;
   \                     ??_decode_ind_6: (+1)
   \       0x60   0x2007             MOVS     R0,#+7
   \       0x62   0xE00F             B.N      ??_decode_ind_16
    402              case SL_WISUN_MSG_CONNECTION_LOST_IND_ID:               return EVENT_IDX_CONNECTION_LOST;
   \                     ??_decode_ind_7: (+1)
   \       0x64   0x2008             MOVS     R0,#+8
   \       0x66   0xE00D             B.N      ??_decode_ind_16
    403              case SL_WISUN_MSG_SOCKET_DATA_SENT_IND_ID:              return EVENT_IDX_SOCKET_DATA_SENT;
   \                     ??_decode_ind_8: (+1)
   \       0x68   0x2009             MOVS     R0,#+9
   \       0x6A   0xE00B             B.N      ??_decode_ind_16
    404              case SL_WISUN_MSG_ERROR_IND_ID:                         return EVENT_IDX_ERROR;
   \                     ??_decode_ind_9: (+1)
   \       0x6C   0x200A             MOVS     R0,#+10
   \       0x6E   0xE009             B.N      ??_decode_ind_16
    405              case SL_WISUN_MSG_JOIN_STATE_IND_ID:                    return EVENT_IDX_JOIN_STATE;
   \                     ??_decode_ind_10: (+1)
   \       0x70   0x200B             MOVS     R0,#+11
   \       0x72   0xE007             B.N      ??_decode_ind_16
    406              case SL_WISUN_MSG_REGULATION_TX_LEVEL_IND_ID:           return EVENT_IDX_REGULATION_TX_LEVEL;
   \                     ??_decode_ind_12: (+1)
   \       0x74   0x200C             MOVS     R0,#+12
   \       0x76   0xE005             B.N      ??_decode_ind_16
    407              case SL_WISUN_MSG_LFN_WAKE_UP_IND_ID:                   return EVENT_IDX_LFN_WAKE_UP;
   \                     ??_decode_ind_13: (+1)
   \       0x78   0x200D             MOVS     R0,#+13
   \       0x7A   0xE003             B.N      ??_decode_ind_16
    408              case SL_WISUN_MSG_LFN_MULTICAST_REG_IND_ID:             return EVENT_IDX_MULTICAST_REG_FINISH;
   \                     ??_decode_ind_14: (+1)
   \       0x7C   0x200E             MOVS     R0,#+14
   \       0x7E   0xE001             B.N      ??_decode_ind_16
    409              default:                                                return EVENT_IDX_NOTVALID;
   \                     ??_decode_ind_15: (+1)
   \       0x80   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \                     ??_decode_ind_16: (+1)
   \       0x84   0x4770             BX       LR
    410            }
    411          }
    412          
    413          // ------------------------- event callbacks -----------------------------------
    414          
    415          /**************************************************************************//**
    416           * @brief Wi-SUN network update event handler
    417           * @details
    418           * @param[in] evt event ptr
    419           *****************************************************************************/

   \                                 In section .text, align 4
    420          SL_WEAK void sl_wisun_network_update_event_hnd(sl_wisun_evt_t *evt)
    421          {
   \                     sl_wisun_network_update_event_hnd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    422            (void) evt;
    423            assert(false);
   \        0x4   0xF240 0x12A7      MOVW     R2,#+423
   \        0x8   0x4904             LDR.N    R1,??sl_wisun_network_update_event_hnd_0+4
   \        0xA   0xA003             ADR.N    R0,??sl_wisun_network_update_event_hnd_0
   \        0xC   0x.... 0x....      BL       __aeabi_assert
   \       0x10   0x.... 0x....      BL       __iar_EmptyStepPoint
    424          }
   \       0x14   0xBD10             POP      {R4,PC}
   \       0x16   0xBF00             Nop
   \                     ??sl_wisun_network_update_event_hnd_0:
   \       0x18   0x30 0x00          DC8      "0",0x0,0x0    
   \              0x00 0x00
   \       0x1C   0x....'....        DC32     ?_2
    425          
    426          /**************************************************************************//**
    427           * @brief Wi-SUN network connected event handler
    428           * @details
    429           * @param[in] evt event ptr
    430           *****************************************************************************/

   \                                 In section .text, align 4
    431          SL_WEAK void sl_wisun_connected_event_hnd(sl_wisun_evt_t *evt)
    432          {
   \                     sl_wisun_connected_event_hnd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    433            (void) evt;
    434            assert(false);
   \        0x4   0xF44F 0x72D9      MOV      R2,#+434
   \        0x8   0x4904             LDR.N    R1,??sl_wisun_connected_event_hnd_0+4
   \        0xA   0xA003             ADR.N    R0,??sl_wisun_connected_event_hnd_0
   \        0xC   0x.... 0x....      BL       __aeabi_assert
   \       0x10   0x.... 0x....      BL       __iar_EmptyStepPoint
    435          }
   \       0x14   0xBD10             POP      {R4,PC}
   \       0x16   0xBF00             Nop
   \                     ??sl_wisun_connected_event_hnd_0:
   \       0x18   0x30 0x00          DC8      "0",0x0,0x0    
   \              0x00 0x00
   \       0x1C   0x....'....        DC32     ?_2
    436          
    437          /**************************************************************************//**
    438           * @brief Data event handler
    439           * @details
    440           * @param[in] evt event ptr
    441           *****************************************************************************/

   \                                 In section .text, align 2
    442          SL_WEAK void sl_wisun_socket_data_event_hnd(sl_wisun_evt_t *evt)
    443          {
    444            (void) evt;
    445          }
   \                     sl_wisun_socket_data_event_hnd: (+1)
   \        0x0   0x4770             BX       LR
    446          
    447          /**************************************************************************//**
    448           * @brief Data avialable event handler
    449           * @details
    450           * @param[in] evt event ptr
    451           *****************************************************************************/

   \                                 In section .text, align 2
    452          SL_WEAK void sl_wisun_socket_data_available_event_hnd(sl_wisun_evt_t *evt)
    453          {
    454            (void) evt;
    455          }
   \                     sl_wisun_socket_data_available_event_hnd: (+1)
   \        0x0   0x4770             BX       LR
    456          
    457          /**************************************************************************//**
    458           * @brief Socket connected event handler
    459           * @details
    460           * @param[in] evt event ptr
    461           *****************************************************************************/

   \                                 In section .text, align 2
    462          SL_WEAK void sl_wisun_socket_connected_event_hnd(sl_wisun_evt_t *evt)
    463          {
    464            (void) evt;
    465          }
   \                     sl_wisun_socket_connected_event_hnd: (+1)
   \        0x0   0x4770             BX       LR
    466          
    467          /**************************************************************************//**
    468           * @brief Socket connection available event handler
    469           * @details
    470           * @param[in] evt event ptr
    471           *****************************************************************************/

   \                                 In section .text, align 2
    472          SL_WEAK void sl_wisun_socket_connection_available_event_hnd(sl_wisun_evt_t *evt)
    473          {
    474            (void) evt;
    475          }
   \                     sl_wisun_socket_connection_available_event_hnd: (+1)
   \        0x0   0x4770             BX       LR
    476          
    477          /**************************************************************************//**
    478           * @brief Socket closing event handler
    479           * @details
    480           * @param[in] evt event ptr
    481           *****************************************************************************/

   \                                 In section .text, align 2
    482          SL_WEAK void sl_wisun_socket_closing_event_hnd(sl_wisun_evt_t *evt)
    483          {
    484            (void) evt;
    485          }
   \                     sl_wisun_socket_closing_event_hnd: (+1)
   \        0x0   0x4770             BX       LR
    486          
    487          /**************************************************************************//**
    488           * @brief Wi-SUN network disconnected event handler
    489           * @details
    490           * @param[in] evt event ptr
    491           *****************************************************************************/

   \                                 In section .text, align 4
    492          SL_WEAK void sl_wisun_disconnected_event_hnd(sl_wisun_evt_t *evt)
    493          {
   \                     sl_wisun_disconnected_event_hnd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    494            (void) evt;
    495            assert(false);
   \        0x4   0xF240 0x12EF      MOVW     R2,#+495
   \        0x8   0x4904             LDR.N    R1,??sl_wisun_disconnected_event_hnd_0+4
   \        0xA   0xA003             ADR.N    R0,??sl_wisun_disconnected_event_hnd_0
   \        0xC   0x.... 0x....      BL       __aeabi_assert
   \       0x10   0x.... 0x....      BL       __iar_EmptyStepPoint
    496          }
   \       0x14   0xBD10             POP      {R4,PC}
   \       0x16   0xBF00             Nop
   \                     ??sl_wisun_disconnected_event_hnd_0:
   \       0x18   0x30 0x00          DC8      "0",0x0,0x0    
   \              0x00 0x00
   \       0x1C   0x....'....        DC32     ?_2
    497          
    498          /**************************************************************************//**
    499           * @brief Socket connection lost event handler
    500           * @details
    501           * @param[in] evt event ptr
    502           *****************************************************************************/

   \                                 In section .text, align 4
    503          SL_WEAK void sl_wisun_connection_lost_event_hnd(sl_wisun_evt_t *evt)
    504          {
   \                     sl_wisun_connection_lost_event_hnd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    505            (void) evt;
    506            assert(false);
   \        0x4   0xF44F 0x72FD      MOV      R2,#+506
   \        0x8   0x4904             LDR.N    R1,??sl_wisun_connection_lost_event_hnd_0+4
   \        0xA   0xA003             ADR.N    R0,??sl_wisun_connection_lost_event_hnd_0
   \        0xC   0x.... 0x....      BL       __aeabi_assert
   \       0x10   0x.... 0x....      BL       __iar_EmptyStepPoint
    507          }
   \       0x14   0xBD10             POP      {R4,PC}
   \       0x16   0xBF00             Nop
   \                     ??sl_wisun_connection_lost_event_hnd_0:
   \       0x18   0x30 0x00          DC8      "0",0x0,0x0    
   \              0x00 0x00
   \       0x1C   0x....'....        DC32     ?_2
    508          
    509          /**************************************************************************//**
    510           * @brief Socket data sent event handler
    511           * @details
    512           * @param[in] evt event ptr
    513           *****************************************************************************/

   \                                 In section .text, align 2
    514          SL_WEAK void sl_wisun_socket_data_sent_event_hnd(sl_wisun_evt_t *evt)
    515          {
    516            (void) evt;
    517          }
   \                     sl_wisun_socket_data_sent_event_hnd: (+1)
   \        0x0   0x4770             BX       LR
    518          
    519          /**************************************************************************//**
    520           * @brief Wi-SUN error occured event handler
    521           * @details
    522           * @param[in] evt event ptr
    523           *****************************************************************************/

   \                                 In section .text, align 4
    524          SL_WEAK void sl_wisun_error_event_hnd(sl_wisun_evt_t *evt)
    525          {
   \                     sl_wisun_error_event_hnd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    526            (void) evt;
    527            assert(false);
   \        0x4   0xF240 0x220F      MOVW     R2,#+527
   \        0x8   0x4904             LDR.N    R1,??sl_wisun_error_event_hnd_0+4
   \        0xA   0xA003             ADR.N    R0,??sl_wisun_error_event_hnd_0
   \        0xC   0x.... 0x....      BL       __aeabi_assert
   \       0x10   0x.... 0x....      BL       __iar_EmptyStepPoint
    528          }
   \       0x14   0xBD10             POP      {R4,PC}
   \       0x16   0xBF00             Nop
   \                     ??sl_wisun_error_event_hnd_0:
   \       0x18   0x30 0x00          DC8      "0",0x0,0x0    
   \              0x00 0x00
   \       0x1C   0x....'....        DC32     ?_2
    529          
    530          /**************************************************************************//**
    531           * @brief Wi-SUN join state event handler
    532           * @details
    533           * @param[in] evt event ptr
    534           *****************************************************************************/

   \                                 In section .text, align 4
    535          SL_WEAK void sl_wisun_join_state_event_hnd(sl_wisun_evt_t *evt)
    536          {
   \                     sl_wisun_join_state_event_hnd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    537            (void) evt;
    538            assert(false);
   \        0x4   0xF240 0x221A      MOVW     R2,#+538
   \        0x8   0x4904             LDR.N    R1,??sl_wisun_join_state_event_hnd_0+4
   \        0xA   0xA003             ADR.N    R0,??sl_wisun_join_state_event_hnd_0
   \        0xC   0x.... 0x....      BL       __aeabi_assert
   \       0x10   0x.... 0x....      BL       __iar_EmptyStepPoint
    539          }
   \       0x14   0xBD10             POP      {R4,PC}
   \       0x16   0xBF00             Nop
   \                     ??sl_wisun_join_state_event_hnd_0:
   \       0x18   0x30 0x00          DC8      "0",0x0,0x0    
   \              0x00 0x00
   \       0x1C   0x....'....        DC32     ?_2
    540          
    541          /**************************************************************************//**
    542           * @brief Wi-SUN regulation TX level indication
    543           * @details
    544           * @param[in] evt event ptr
    545           *****************************************************************************/

   \                                 In section .text, align 4
    546          SL_WEAK void sl_wisun_regulation_tx_level_hnd(sl_wisun_evt_t *evt)
    547          {
   \                     sl_wisun_regulation_tx_level_hnd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    548            (void) evt;
    549            assert(false);
   \        0x4   0xF240 0x2225      MOVW     R2,#+549
   \        0x8   0x4904             LDR.N    R1,??sl_wisun_regulation_tx_level_hnd_0+4
   \        0xA   0xA003             ADR.N    R0,??sl_wisun_regulation_tx_level_hnd_0
   \        0xC   0x.... 0x....      BL       __aeabi_assert
   \       0x10   0x.... 0x....      BL       __iar_EmptyStepPoint
    550          }
   \       0x14   0xBD10             POP      {R4,PC}
   \       0x16   0xBF00             Nop
   \                     ??sl_wisun_regulation_tx_level_hnd_0:
   \       0x18   0x30 0x00          DC8      "0",0x0,0x0    
   \              0x00 0x00
   \       0x1C   0x....'....        DC32     ?_2
    551          
    552          /**************************************************************************//**
    553           * @brief Wi-SUN LFN Wake up event handler
    554           * @details
    555           * @param[in] evt event ptr
    556           *****************************************************************************/

   \                                 In section .text, align 4
    557          SL_WEAK void sl_wisun_lfn_wake_up_hnd(sl_wisun_evt_t *evt)
    558          {
   \                     sl_wisun_lfn_wake_up_hnd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    559            (void) evt;
    560            assert(false);
   \        0x4   0xF44F 0x720C      MOV      R2,#+560
   \        0x8   0x4904             LDR.N    R1,??sl_wisun_lfn_wake_up_hnd_0+4
   \        0xA   0xA003             ADR.N    R0,??sl_wisun_lfn_wake_up_hnd_0
   \        0xC   0x.... 0x....      BL       __aeabi_assert
   \       0x10   0x.... 0x....      BL       __iar_EmptyStepPoint
    561          }
   \       0x14   0xBD10             POP      {R4,PC}
   \       0x16   0xBF00             Nop
   \                     ??sl_wisun_lfn_wake_up_hnd_0:
   \       0x18   0x30 0x00          DC8      "0",0x0,0x0    
   \              0x00 0x00
   \       0x1C   0x....'....        DC32     ?_2
    562          
    563          /**************************************************************************//**
    564           * @brief Wi-SUN multicast group registration finishes event handler
    565           * @details
    566           * @param[in] evt event ptr
    567           *****************************************************************************/

   \                                 In section .text, align 4
    568          SL_WEAK void sl_wisun_multicast_reg_finish_hnd(sl_wisun_evt_t *evt)
    569          {
   \                     sl_wisun_multicast_reg_finish_hnd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    570            (void) evt;
    571            assert(false);
   \        0x4   0xF240 0x223B      MOVW     R2,#+571
   \        0x8   0x4904             LDR.N    R1,??sl_wisun_multicast_reg_finish_hnd_0+4
   \        0xA   0xA003             ADR.N    R0,??sl_wisun_multicast_reg_finish_hnd_0
   \        0xC   0x.... 0x....      BL       __aeabi_assert
   \       0x10   0x.... 0x....      BL       __iar_EmptyStepPoint
    572          }
   \       0x14   0xBD10             POP      {R4,PC}
   \       0x16   0xBF00             Nop
   \                     ??sl_wisun_multicast_reg_finish_hnd_0:
   \       0x18   0x30 0x00          DC8      "0",0x0,0x0    
   \              0x00 0x00
   \       0x1C   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \        0x0   0x....'....        DC32     _app_wisun_event_mgr_mtx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \        0x0   0x....'....        DC32     _app_wisun_event_mgr_mtx_attr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \        0x0   0x....'....        DC32     _wisun_event_size

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \        0x0   0x....'....        DC32     _wisun_events

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x41 0x70          DC8 "AppWisunEventMgrMutex"
   \              0x70 0x57    
   \              0x69 0x73    
   \              0x75 0x6E    
   \              0x45 0x76    
   \              0x65 0x6E    
   \              0x74 0x4D    
   \              0x67 0x72    
   \              0x4D 0x75    
   \              0x74 0x65    
   \              0x78 0x00
   \       0x16                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x5F 0x61          DC8 "_app_wisun_event_mgr_mtx != 0"
   \              0x70 0x70    
   \              0x5F 0x77    
   \              0x69 0x73    
   \              0x75 0x6E    
   \              0x5F 0x65    
   \              0x76 0x65    
   \              0x6E 0x74    
   \              0x5F 0x6D    
   \              0x67 0x72    
   \              0x5F 0x6D    
   \              0x74 0x78    
   \              0x20 0x21    
   \              0x3D 0x20    
   \              0x30 0x00
   \       0x1E                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x44 0x3A          DC8 0x44, 0x3A, 0x5C, 0x49, 0x6E, 0x65, 0x73, 0x68
   \              0x5C 0x49    
   \              0x6E 0x65    
   \              0x73 0x68
   \        0x8   0x5F 0x77          DC8 0x5F, 0x77, 0x69, 0x73, 0x75, 0x6E, 0x5C, 0x57
   \              0x69 0x73    
   \              0x75 0x6E    
   \              0x5C 0x57
   \       0x10   0x69 0x73          DC8 0x69, 0x73, 0x75, 0x6E, 0x5F, 0x4E, 0x6F, 0x64
   \              0x75 0x6E    
   \              0x5F 0x4E    
   \              0x6F 0x64
   \       0x18   0x65 0x5F          DC8 0x65, 0x5F, 0x41, 0x70, 0x70, 0x20, 0x31, 0x5C
   \              0x41 0x70    
   \              0x70 0x20    
   \              0x31 0x5C
   \       0x20   0x57 0x69          DC8 0x57, 0x69, 0x73, 0x75, 0x6E, 0x5F, 0x4E, 0x6F
   \              0x73 0x75    
   \              0x6E 0x5F    
   \              0x4E 0x6F
   \       0x28   0x64 0x65          DC8 0x64, 0x65, 0x5F, 0x41, 0x70, 0x70, 0x5C, 0x67
   \              0x5F 0x41    
   \              0x70 0x70    
   \              0x5C 0x67
   \       0x30   0x65 0x63          DC8 0x65, 0x63, 0x6B, 0x6F, 0x5F, 0x73, 0x64, 0x6B
   \              0x6B 0x6F    
   \              0x5F 0x73    
   \              0x64 0x6B
   \       0x38   0x5F 0x34          DC8 0x5F, 0x34, 0x2E, 0x34, 0x2E, 0x35, 0x5C, 0x61
   \              0x2E 0x34    
   \              0x2E 0x35    
   \              0x5C 0x61
   \       0x40   0x70 0x70          DC8 0x70, 0x70, 0x5C, 0x77, 0x69, 0x73, 0x75, 0x6E
   \              0x5C 0x77    
   \              0x69 0x73    
   \              0x75 0x6E
   \       0x48   0x5C 0x63          DC8 0x5C, 0x63, 0x6F, 0x6D, 0x70, 0x6F, 0x6E, 0x65
   \              0x6F 0x6D    
   \              0x70 0x6F    
   \              0x6E 0x65
   \       0x50   0x6E 0x74          DC8 0x6E, 0x74, 0x5C, 0x65, 0x76, 0x65, 0x6E, 0x74
   \              0x5C 0x65    
   \              0x76 0x65    
   \              0x6E 0x74
   \       0x58   0x5F 0x6D          DC8 0x5F, 0x6D, 0x61, 0x6E, 0x61, 0x67, 0x65, 0x72
   \              0x61 0x6E    
   \              0x61 0x67    
   \              0x65 0x72
   \       0x60   0x5C 0x73          DC8 0x5C, 0x73, 0x6C, 0x5F, 0x77, 0x69, 0x73, 0x75
   \              0x6C 0x5F    
   \              0x77 0x69    
   \              0x73 0x75
   \       0x68   0x6E 0x5F          DC8 0x6E, 0x5F, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x5F
   \              0x65 0x76    
   \              0x65 0x6E    
   \              0x74 0x5F
   \       0x70   0x6D 0x67          DC8 0x6D, 0x67, 0x72, 0x2E, 0x63, 0
   \              0x72 0x2E    
   \              0x63 0x00
   \       0x76                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x5B 0x55          DC8 "[Unknown event: %d]\015\012"
   \              0x6E 0x6B    
   \              0x6E 0x6F    
   \              0x77 0x6E    
   \              0x20 0x65    
   \              0x76 0x65    
   \              0x6E 0x74    
   \              0x3A 0x20    
   \              0x25 0x64    
   \              0x5D 0x0D    
   \              0x0A 0x00
   \       0x16                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x6F 0x73          DC8 0x6F, 0x73, 0x4D, 0x75, 0x74, 0x65, 0x78, 0x41
   \              0x4D 0x75    
   \              0x74 0x65    
   \              0x78 0x41
   \        0x8   0x63 0x71          DC8 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x28, 0x5F
   \              0x75 0x69    
   \              0x72 0x65    
   \              0x28 0x5F
   \       0x10   0x61 0x70          DC8 0x61, 0x70, 0x70, 0x5F, 0x77, 0x69, 0x73, 0x75
   \              0x70 0x5F    
   \              0x77 0x69    
   \              0x73 0x75
   \       0x18   0x6E 0x5F          DC8 0x6E, 0x5F, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x5F
   \              0x65 0x76    
   \              0x65 0x6E    
   \              0x74 0x5F
   \       0x20   0x6D 0x67          DC8 0x6D, 0x67, 0x72, 0x5F, 0x6D, 0x74, 0x78, 0x2C
   \              0x72 0x5F    
   \              0x6D 0x74    
   \              0x78 0x2C
   \       0x28   0x20 0x30          DC8 0x20, 0x30, 0x78, 0x46, 0x46, 0x46, 0x46, 0x46
   \              0x78 0x46    
   \              0x46 0x46    
   \              0x46 0x46
   \       0x30   0x46 0x46          DC8 0x46, 0x46, 0x46, 0x55, 0x29, 0x20, 0x3D, 0x3D
   \              0x46 0x55    
   \              0x29 0x20    
   \              0x3D 0x3D
   \       0x38   0x20 0x6F          DC8 0x20, 0x6F, 0x73, 0x4F, 0x4B, 0
   \              0x73 0x4F    
   \              0x4B 0x00
   \       0x3E                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x6F 0x73          DC8 "osMutexRelease(_app_wisun_event_mgr_mtx) == osOK"
   \              0x4D 0x75    
   \              0x74 0x65    
   \              0x78 0x52    
   \              0x65 0x6C    
   \              0x65 0x61    
   \              0x73 0x65    
   \              0x28 0x5F    
   \              0x61 0x70    
   \              0x70 0x5F    
   \              0x77 0x69    
   \              0x73 0x75    
   \              0x6E 0x5F    
   \              0x65 0x76    
   \              0x65 0x6E    
   \              0x74 0x5F    
   \              0x6D 0x67    
   \              0x72 0x5F    
   \              0x6D 0x74    
   \              0x78 0x29    
   \              0x20 0x3D    
   \              0x3D 0x20    
   \              0x6F 0x73    
   \              0x4F 0x4B    
   \              0x00
   \       0x31                      DS8 3

   \                                 In section .rodata, align 2
   \        0x0   0x30 0x00          DC8 "0"

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   _decode_ind
      24   app_wisun_em_custom_callback_register
        24   -> app_wisun_event_mgr_mutex_lock
        24   -> app_wisun_event_mgr_mutex_unlock
        24   -> osKernelGetState
      16   app_wisun_em_custom_callback_remove
        16   -> app_wisun_event_mgr_mutex_lock
        16   -> app_wisun_event_mgr_mutex_unlock
        16   -> osKernelGetState
      32   app_wisun_em_subscribe_evt_notification
        32   -> _decode_ind
        32   -> app_wisun_event_mgr_mutex_lock
        32   -> app_wisun_event_mgr_mutex_unlock
        32   -> app_wisun_trace_util_evt_notify_subscribe_ch
        32   -> osKernelGetState
      32   app_wisun_em_unsubscribe_evt_notification
        32   -> _decode_ind
        32   -> app_wisun_event_mgr_mutex_lock
        32   -> app_wisun_event_mgr_mutex_unlock
        32   -> app_wisun_trace_util_evt_notify_unsubscribe_ch
        32   -> osKernelGetState
      24   app_wisun_em_wait_evt_notification
        24   -> _decode_ind
        24   -> app_wisun_trace_util_evt_notify_wait
       8   app_wisun_event_mgr_init
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
         8   -> app_wisun_trace_util_evt_notify_init
         8   -> osMutexNew
       8   app_wisun_event_mgr_mutex_lock
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
         8   -> osMutexAcquire
       8   app_wisun_event_mgr_mutex_unlock
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
         8   -> osMutexRelease
       8   sl_wisun_connected_event_hnd
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
       8   sl_wisun_connection_lost_event_hnd
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
       8   sl_wisun_disconnected_event_hnd
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
       8   sl_wisun_error_event_hnd
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
       8   sl_wisun_join_state_event_hnd
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
       8   sl_wisun_lfn_wake_up_hnd
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
       8   sl_wisun_multicast_reg_finish_hnd
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
       8   sl_wisun_network_update_event_hnd
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
      24   sl_wisun_on_event
        24   -- Indirect call
        24   -> _decode_ind
        24   -> app_wisun_event_mgr_mutex_lock
        24   -> app_wisun_event_mgr_mutex_unlock
        24   -> app_wisun_trace_util_evt_notfiy_chs
        24   -> printf
       8   sl_wisun_regulation_tx_level_hnd
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
       0   sl_wisun_socket_closing_event_hnd
       0   sl_wisun_socket_connected_event_hnd
       0   sl_wisun_socket_connection_available_event_hnd
       0   sl_wisun_socket_data_available_event_hnd
       0   sl_wisun_socket_data_event_hnd
       0   sl_wisun_socket_data_sent_event_hnd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable8_8
      24  ?_0
      32  ?_1
     120  ?_2
      24  ?_3
      64  ?_4
      52  ?_5
       2  ?_6
       4  _app_wisun_event_mgr_mtx
      16  _app_wisun_event_mgr_mtx_attr
     134  _decode_ind
       2  _wisun_event_size
     360  _wisun_events
      96  app_wisun_em_custom_callback_register
      86  app_wisun_em_custom_callback_remove
      96  app_wisun_em_subscribe_evt_notification
      98  app_wisun_em_unsubscribe_evt_notification
      66  app_wisun_em_wait_evt_notification
      74  app_wisun_event_mgr_init
      36  app_wisun_event_mgr_mutex_lock
      32  app_wisun_event_mgr_mutex_unlock
      32  sl_wisun_connected_event_hnd
      32  sl_wisun_connection_lost_event_hnd
      32  sl_wisun_disconnected_event_hnd
      32  sl_wisun_error_event_hnd
      32  sl_wisun_join_state_event_hnd
      32  sl_wisun_lfn_wake_up_hnd
      32  sl_wisun_multicast_reg_finish_hnd
      32  sl_wisun_network_update_event_hnd
     128  sl_wisun_on_event
      32  sl_wisun_regulation_tx_level_hnd
       2  sl_wisun_socket_closing_event_hnd
       2  sl_wisun_socket_connected_event_hnd
       2  sl_wisun_socket_connection_available_event_hnd
       2  sl_wisun_socket_data_available_event_hnd
       2  sl_wisun_socket_data_event_hnd
       2  sl_wisun_socket_data_sent_event_hnd

 
     4 bytes in section .bss
   360 bytes in section .data
   336 bytes in section .rodata
 1'182 bytes in section .text
 
 882 bytes of CODE  memory (+ 300 bytes shared)
 336 bytes of CONST memory
 364 bytes of DATA  memory

Errors: none
Warnings: none
