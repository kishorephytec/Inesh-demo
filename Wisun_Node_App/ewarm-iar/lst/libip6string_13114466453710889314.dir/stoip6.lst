###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         29/Mar/2025  15:53:19
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\source\libip6string\stoip6.c
#    Command line                 =
#        -f "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\libip6string_13114466453710889314.dir\stoip6.o.rsp"
#        ("D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\source\libip6string\stoip6.c"
#        -D DEBUG_EFM=1 -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -lC "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\libip6string_13114466453710889314.dir"
#        --diag_suppress Pa050 -o "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\libip6string_13114466453710889314.dir"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse --cmse -e --fpu=VFPv5_sp --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\source\libip6string\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\rail\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\wisun\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\.\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_project_info\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\Core\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\RTOS2\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\device_init\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emlib\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\iostream\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\preset\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\cpu\include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\ports\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\nvm3\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\peripheral\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_psa_driver\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\common\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ble\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ieee802154\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\wmbus\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\zwave\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\chip\efr32\efr32xg2x\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\sidewalk\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\rail_util_pti\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\segger\systemview\SEGGER\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\silicon_labs\silabs_core\memory_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\toolchain\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\system\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ns_list\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ping\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\udp_client\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\sleeptimer\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\plugin\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\socket\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\autogen\\" -On
#        --use_c++_inline) --dependencies=n "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\libip6string_13114466453710889314.dir\stoip6.o.iar_deps"
#    Locale                       =  C
#    List file                    =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\libip6string_13114466453710889314.dir\stoip6.lst
#    Object file                  =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\libip6string_13114466453710889314.dir\stoip6.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#
###############################################################################

D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\source\libip6string\stoip6.c
      1          /*
      2           * Copyright (c) 2014-2015 ARM Limited. All rights reserved.
      3           * SPDX-License-Identifier: Apache-2.0
      4           * Licensed under the Apache License, Version 2.0 (the License); you may
      5           * not use this file except in compliance with the License.
      6           * You may obtain a copy of the License at
      7           *
      8           * http://www.apache.org/licenses/LICENSE-2.0
      9           *
     10           * Unless required by applicable law or agreed to in writing, software
     11           * distributed under the License is distributed on an AS IS BASIS, WITHOUT
     12           * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     13           * See the License for the specific language governing permissions and
     14           * limitations under the License.
     15           */
     16          #include <string.h>
     17          #include <stdlib.h>
     18          #include <stdint.h>
     19          #include "common_functions.h"
     20          #include "common_inlined_functions.h"
     21          #include "ip6string.h"
     22          
     23          static uint16_t hex(const char *p);
     24          static bool is_hex(char c);
     25          
     26          /**
     27           * Convert numeric IPv6 address string to a binary.
     28           * IPv4 tunnelling addresses are not covered.
     29           * \param ip6addr IPv6 address in string format.
     30           * \param len Length of ipv6 string.
     31           * \param dest buffer for address. MUST be 16 bytes.
     32           * \return boolean set to true if conversion succeed, false if it didn't
     33           */

   \                                 In section .text, align 2, keep-with-next
     34          bool stoip6(const char *ip6addr, size_t len, void *dest)
     35          {
   \                     stoip6: (+1)
   \        0x0   0xE92D 0x4FF1      PUSH     {R0,R4-R11,LR}
   \        0x4   0xB088             SUB      SP,SP,#+32
   \        0x6   0x000C             MOVS     R4,R1
   \        0x8   0x4691             MOV      R9,R2
     36            uint8_t *addr;
     37            const char *p;
     38            const char *q;
     39            int_fast8_t field_no;
     40            int_fast8_t coloncolon = -1;
   \        0xA   0xF05F 0x38FF      MOVS     R8,#+4294967295
     41          
     42            addr = dest;
   \        0xE   0xF8CD 0x9000      STR      R9,[SP, #+0]
     43          
     44            if (len > 39) {   // Too long, not possible. We do not support IPv4-mapped IPv6 addresses
   \       0x12   0x2C28             CMP      R4,#+40
   \       0x14   0xD271             BCS.N    ??stoip6_0
     45              goto error;
     46            }
     47          
     48            // First go forward the string, until end, noting :: position if any
     49            // We're decrementing `len` as we go forward, and stop when it reaches 0
     50            for (field_no = 0, p = ip6addr; len && *p; p = q + 1) {
   \                     ??stoip6_1: (+1)
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0x0007             MOVS     R7,R0
   \       0x1A   0x9808             LDR      R0,[SP, #+32]
   \       0x1C   0x0005             MOVS     R5,R0
   \                     ??stoip6_2: (+1)
   \       0x1E   0x2C00             CMP      R4,#+0
   \       0x20   0xD035             BEQ.N    ??stoip6_3
   \       0x22   0x7828             LDRB     R0,[R5, #+0]
   \       0x24   0x2800             CMP      R0,#+0
   \       0x26   0xD032             BEQ.N    ??stoip6_3
     51              for (q = p; len && *q && (*q != ':'); len -= 1) {     // Seek for ':' or end
   \       0x28   0x002E             MOVS     R6,R5
   \                     ??stoip6_4: (+1)
   \       0x2A   0x2C00             CMP      R4,#+0
   \       0x2C   0xD00E             BEQ.N    ??stoip6_5
   \       0x2E   0x7830             LDRB     R0,[R6, #+0]
   \       0x30   0x2800             CMP      R0,#+0
   \       0x32   0xD00B             BEQ.N    ??stoip6_5
   \       0x34   0x7830             LDRB     R0,[R6, #+0]
   \       0x36   0x283A             CMP      R0,#+58
   \       0x38   0xD008             BEQ.N    ??stoip6_5
     52                if (!is_hex(*q++)) {       // There must only be hex characters besides ':'
   \       0x3A   0x7830             LDRB     R0,[R6, #+0]
   \       0x3C   0x.... 0x....      BL       is_hex
   \       0x40   0x1C76             ADDS     R6,R6,#+1
   \       0x42   0xB2C0             UXTB     R0,R0
   \       0x44   0x2800             CMP      R0,#+0
   \       0x46   0xD058             BEQ.N    ??stoip6_0
     53                  goto error;
     54                }
     55              }
   \                     ??stoip6_6: (+1)
   \       0x48   0x1E64             SUBS     R4,R4,#+1
   \       0x4A   0xE7EE             B.N      ??stoip6_4
     56          
     57              if ((q - p) > 4) {     // We can't have more than 4 hex digits per segment
   \                     ??stoip6_5: (+1)
   \       0x4C   0x1B70             SUBS     R0,R6,R5
   \       0x4E   0x2805             CMP      R0,#+5
   \       0x50   0xDA53             BGE.N    ??stoip6_0
     58                goto error;
     59              }
     60          
     61              if (field_no == 8) {     // If the address goes farther than 8 segments
   \                     ??stoip6_7: (+1)
   \       0x52   0x2F08             CMP      R7,#+8
   \       0x54   0xD051             BEQ.N    ??stoip6_0
     62                goto error;
     63              }
     64          
     65              // Convert and write this part, (high-endian AKA network byte order)
     66              addr = common_write_16_bit(hex(p), addr);
   \                     ??stoip6_8: (+1)
   \       0x56   0x0028             MOVS     R0,R5
   \       0x58   0x.... 0x....      BL       hex
   \       0x5C   0x9900             LDR      R1,[SP, #+0]
   \       0x5E   0xB280             UXTH     R0,R0
   \       0x60   0x.... 0x....      BL       common_write_16_bit
   \       0x64   0x9000             STR      R0,[SP, #+0]
     67              field_no++;
   \       0x66   0x1C7F             ADDS     R7,R7,#+1
     68          
     69              // We handle the colons
     70              if (len) {
   \       0x68   0x2C00             CMP      R4,#+0
   \       0x6A   0xD00D             BEQ.N    ??stoip6_9
     71                // Check if we reached "::"
     72                if (q[0] == ':' && q[1] == ':') {
   \       0x6C   0x7830             LDRB     R0,[R6, #+0]
   \       0x6E   0x283A             CMP      R0,#+58
   \       0x70   0xD109             BNE.N    ??stoip6_10
   \       0x72   0x7870             LDRB     R0,[R6, #+1]
   \       0x74   0x283A             CMP      R0,#+58
   \       0x76   0xD106             BNE.N    ??stoip6_10
     73                  if (coloncolon != -1) {         // We are not supposed to see "::" more than once per address
   \       0x78   0xF118 0x0F01      CMN      R8,#+1
   \       0x7C   0xD13D             BNE.N    ??stoip6_0
     74                    goto error;
     75                  }
     76                  coloncolon = field_no;
   \                     ??stoip6_11: (+1)
   \       0x7E   0x46B8             MOV      R8,R7
     77                  q++;
   \       0x80   0x1C76             ADDS     R6,R6,#+1
     78                  len -= 2;
   \       0x82   0x1EA4             SUBS     R4,R4,#+2
   \       0x84   0xE000             B.N      ??stoip6_9
     79                } else {
     80                  len -= 1;
   \                     ??stoip6_10: (+1)
   \       0x86   0x1E64             SUBS     R4,R4,#+1
     81                }
     82              }
     83            }
   \                     ??stoip6_9: (+1)
   \       0x88   0x1C70             ADDS     R0,R6,#+1
   \       0x8A   0x0005             MOVS     R5,R0
   \       0x8C   0xE7C7             B.N      ??stoip6_2
     84          
     85            if (coloncolon != -1) {
   \                     ??stoip6_3: (+1)
   \       0x8E   0xF118 0x0F01      CMN      R8,#+1
   \       0x92   0xD02E             BEQ.N    ??stoip6_12
     86              /* Insert zeros in the appropriate place */
     87              uint_fast8_t head_size = 2 * coloncolon;
   \       0x94   0xEA5F 0x0048      LSLS     R0,R8,#+1
   \       0x98   0x9001             STR      R0,[SP, #+4]
     88              uint_fast8_t inserted_size = 2 * (8 - field_no);
   \       0x9A   0xF1D7 0x0008      RSBS     R0,R7,#+8
   \       0x9E   0x0040             LSLS     R0,R0,#+1
   \       0xA0   0x9002             STR      R0,[SP, #+8]
     89              uint_fast8_t tail_size = 16 - head_size - inserted_size;
   \       0xA2   0xF8DD 0xA004      LDR      R10,[SP, #+4]
   \       0xA6   0xF1DA 0x0A10      RSBS     R10,R10,#+16
   \       0xAA   0x9802             LDR      R0,[SP, #+8]
   \       0xAC   0xEBBA 0x0A00      SUBS     R10,R10,R0
     90              addr = dest;
   \       0xB0   0xF8CD 0x9000      STR      R9,[SP, #+0]
     91              memmove(addr + head_size + inserted_size, addr + head_size, tail_size);
   \       0xB4   0xF8CD 0xA018      STR      R10,[SP, #+24]
   \       0xB8   0x9900             LDR      R1,[SP, #+0]
   \       0xBA   0x9801             LDR      R0,[SP, #+4]
   \       0xBC   0x4408             ADD      R0,R1,R0
   \       0xBE   0x9005             STR      R0,[SP, #+20]
   \       0xC0   0x9900             LDR      R1,[SP, #+0]
   \       0xC2   0x9801             LDR      R0,[SP, #+4]
   \       0xC4   0x4401             ADD      R1,R1,R0
   \       0xC6   0x9802             LDR      R0,[SP, #+8]
   \       0xC8   0xEB01 0x0B00      ADD      R11,R1,R0
   \       0xCC   0x9A06             LDR      R2,[SP, #+24]
   \       0xCE   0x9905             LDR      R1,[SP, #+20]
   \       0xD0   0x4658             MOV      R0,R11
   \       0xD2   0x.... 0x....      BL       __aeabi_memmove
     92              memset(addr + head_size, 0, inserted_size);
   \       0xD6   0x9802             LDR      R0,[SP, #+8]
   \       0xD8   0x9004             STR      R0,[SP, #+16]
   \       0xDA   0x2000             MOVS     R0,#+0
   \       0xDC   0x9003             STR      R0,[SP, #+12]
   \       0xDE   0x9900             LDR      R1,[SP, #+0]
   \       0xE0   0x9801             LDR      R0,[SP, #+4]
   \       0xE2   0xEB01 0x0B00      ADD      R11,R1,R0
   \       0xE6   0x9A03             LDR      R2,[SP, #+12]
   \       0xE8   0x9904             LDR      R1,[SP, #+16]
   \       0xEA   0x4658             MOV      R0,R11
   \       0xEC   0x.... 0x....      BL       __aeabi_memset
     93            } else if (field_no != 8) {   // Report an error if we didn't get 8 fields
   \       0xF0   0xE001             B.N      ??stoip6_13
   \                     ??stoip6_12: (+1)
   \       0xF2   0x2F08             CMP      R7,#+8
   \       0xF4   0xD101             BNE.N    ??stoip6_0
     94              goto error;
     95            }
     96            return true;
   \                     ??stoip6_13: (+1)
   \       0xF6   0x2001             MOVS     R0,#+1
   \       0xF8   0xE00A             B.N      ??stoip6_14
     97          
     98            error:
     99            // Fill the output buffer with 0 so we stick to the old failure behavior.
    100            // We are however more agressive and wipe the entire address, and do so more often.
    101            memset(dest, 0, 16);
   \                     ??stoip6_0: (+1)
   \       0xFA   0x2010             MOVS     R0,#+16
   \       0xFC   0x9001             STR      R0,[SP, #+4]
   \       0xFE   0xF05F 0x0A00      MOVS     R10,#+0
   \      0x102   0x46CB             MOV      R11,R9
   \      0x104   0x4652             MOV      R2,R10
   \      0x106   0x9901             LDR      R1,[SP, #+4]
   \      0x108   0x4658             MOV      R0,R11
   \      0x10A   0x.... 0x....      BL       __aeabi_memset
    102            return false;
   \      0x10E   0x2000             MOVS     R0,#+0
   \                     ??stoip6_14: (+1)
   \      0x110   0xB009             ADD      SP,SP,#+36
   \      0x112   0xE8BD 0x8FF0      POP      {R4-R11,PC}
    103          }
    104          

   \                                 In section .text, align 2, keep-with-next
    105          unsigned char sipv6_prefixlength(const char *ip6addr)
    106          {
   \                     sipv6_prefixlength: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0005             MOVS     R5,R0
    107            char *ptr = strchr(ip6addr, '/');
   \        0x4   0x212F             MOVS     R1,#+47
   \        0x6   0x0028             MOVS     R0,R5
   \        0x8   0x.... 0x....      BL       strchr
   \        0xC   0x0004             MOVS     R4,R0
    108            if (ptr) {
   \        0xE   0x2C00             CMP      R4,#+0
   \       0x10   0xD006             BEQ.N    ??sipv6_prefixlength_0
    109              return (unsigned char)strtoul(ptr + 1, 0, 10);
   \       0x12   0x220A             MOVS     R2,#+10
   \       0x14   0x2100             MOVS     R1,#+0
   \       0x16   0x1C60             ADDS     R0,R4,#+1
   \       0x18   0x.... 0x....      BL       strtoul
   \       0x1C   0xB2C0             UXTB     R0,R0
   \       0x1E   0xE000             B.N      ??sipv6_prefixlength_1
    110            }
    111            return 0;
   \                     ??sipv6_prefixlength_0: (+1)
   \       0x20   0x2000             MOVS     R0,#+0
   \                     ??sipv6_prefixlength_1: (+1)
   \       0x22   0xBD32             POP      {R1,R4,R5,PC}
    112          }
    113          

   \                                 In section .text, align 2, keep-with-next
    114          int stoip6_prefix(const char *ip6addr, void *dest, int_fast16_t *prefix_len_out)
    115          {
   \                     stoip6_prefix: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0x0006             MOVS     R6,R0
   \        0x6   0x000F             MOVS     R7,R1
   \        0x8   0x0014             MOVS     R4,R2
    116            size_t addr_len;
    117            size_t total_len;
    118            int_fast16_t prefix_length;
    119          
    120            if (prefix_len_out) {
   \        0xA   0x2C00             CMP      R4,#+0
   \        0xC   0xD002             BEQ.N    ??stoip6_prefix_0
    121              *prefix_len_out = -1;
   \        0xE   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x12   0x6020             STR      R0,[R4, #+0]
    122            }
    123          
    124            total_len = addr_len = strlen(ip6addr);
   \                     ??stoip6_prefix_0: (+1)
   \       0x14   0x0030             MOVS     R0,R6
   \       0x16   0x.... 0x....      BL       strlen
   \       0x1A   0x4682             MOV      R10,R0
   \       0x1C   0x46D1             MOV      R9,R10
    125            const char *ptr = strchr(ip6addr, '/');
   \       0x1E   0x212F             MOVS     R1,#+47
   \       0x20   0x0030             MOVS     R0,R6
   \       0x22   0x.... 0x....      BL       strchr
   \       0x26   0x0005             MOVS     R5,R0
    126            if (ptr) {
   \       0x28   0x2D00             CMP      R5,#+0
   \       0x2A   0xD01B             BEQ.N    ??stoip6_prefix_1
    127              addr_len = ptr - ip6addr;
   \       0x2C   0x1BA8             SUBS     R0,R5,R6
   \       0x2E   0x4681             MOV      R9,R0
    128              if (prefix_len_out) {
   \       0x30   0x2C00             CMP      R4,#+0
   \       0x32   0xD017             BEQ.N    ??stoip6_prefix_1
    129                if (total_len - addr_len > 3) {
   \       0x34   0xEBBA 0x0009      SUBS     R0,R10,R9
   \       0x38   0x2804             CMP      R0,#+4
   \       0x3A   0xD302             BCC.N    ??stoip6_prefix_2
    130                  /* too many digits in prefix */
    131                  return -1;
   \       0x3C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x40   0xE01B             B.N      ??stoip6_prefix_3
    132                }
    133          
    134                prefix_length = strtoul(ptr + 1, 0, 10);
   \                     ??stoip6_prefix_2: (+1)
   \       0x42   0x220A             MOVS     R2,#+10
   \       0x44   0x2100             MOVS     R1,#+0
   \       0x46   0x1C68             ADDS     R0,R5,#+1
   \       0x48   0x.... 0x....      BL       strtoul
   \       0x4C   0x4680             MOV      R8,R0
    135                if (prefix_length <  0 || prefix_length > 128) {
   \       0x4E   0xF1B8 0x0F00      CMP      R8,#+0
   \       0x52   0xD402             BMI.N    ??stoip6_prefix_4
   \       0x54   0xF1B8 0x0F81      CMP      R8,#+129
   \       0x58   0xDB02             BLT.N    ??stoip6_prefix_5
    136                  /* prefix value illegal */
    137                  return -1;
   \                     ??stoip6_prefix_4: (+1)
   \       0x5A   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x5E   0xE00C             B.N      ??stoip6_prefix_3
    138                }
    139          
    140                *prefix_len_out = prefix_length;
   \                     ??stoip6_prefix_5: (+1)
   \       0x60   0xF8C4 0x8000      STR      R8,[R4, #+0]
    141              }
    142            }
    143          
    144            if (!stoip6(ip6addr, addr_len, dest)) {
   \                     ??stoip6_prefix_1: (+1)
   \       0x64   0x003A             MOVS     R2,R7
   \       0x66   0x4649             MOV      R1,R9
   \       0x68   0x0030             MOVS     R0,R6
   \       0x6A   0x.... 0x....      BL       stoip6
   \       0x6E   0x2800             CMP      R0,#+0
   \       0x70   0xD102             BNE.N    ??stoip6_prefix_6
    145              /* parser failure */
    146              return -1;
   \       0x72   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x76   0xE000             B.N      ??stoip6_prefix_3
    147            }
    148          
    149            return 0;
   \                     ??stoip6_prefix_6: (+1)
   \       0x78   0x2000             MOVS     R0,#+0
   \                     ??stoip6_prefix_3: (+1)
   \       0x7A   0xE8BD 0x87F0      POP      {R4-R10,PC}
    150          }
    151          

   \                                 In section .text, align 2, keep-with-next
    152          static bool is_hex(char c)
    153          {
   \                     is_hex: (+1)
   \        0x0   0x0001             MOVS     R1,R0
    154            // 'A' (0x41) and 'a' (0x61) are mapped in the ASCII table in such a way that masking the 0x20 bit turn 'a' in 'A'
    155            if ((c & ~0x20) >= 'A' && (c & ~0x20) <= 'F') {
   \        0x2   0x0008             MOVS     R0,R1
   \        0x4   0xB2C0             UXTB     R0,R0
   \        0x6   0xF030 0x0020      BICS     R0,R0,#0x20
   \        0xA   0x2841             CMP      R0,#+65
   \        0xC   0xDB07             BLT.N    ??is_hex_0
   \        0xE   0x0008             MOVS     R0,R1
   \       0x10   0xB2C0             UXTB     R0,R0
   \       0x12   0xF030 0x0020      BICS     R0,R0,#0x20
   \       0x16   0x2847             CMP      R0,#+71
   \       0x18   0xDA01             BGE.N    ??is_hex_0
    156              return true;
   \       0x1A   0x2001             MOVS     R0,#+1
   \       0x1C   0xE00A             B.N      ??is_hex_1
    157            }
    158          
    159            if (c >= '0' && c <= '9') {
   \                     ??is_hex_0: (+1)
   \       0x1E   0x0008             MOVS     R0,R1
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x2830             CMP      R0,#+48
   \       0x24   0xDB05             BLT.N    ??is_hex_2
   \       0x26   0x0008             MOVS     R0,R1
   \       0x28   0xB2C0             UXTB     R0,R0
   \       0x2A   0x283A             CMP      R0,#+58
   \       0x2C   0xDA01             BGE.N    ??is_hex_2
    160              return true;
   \       0x2E   0x2001             MOVS     R0,#+1
   \       0x30   0xE000             B.N      ??is_hex_1
    161            }
    162          
    163            return false;
   \                     ??is_hex_2: (+1)
   \       0x32   0x2000             MOVS     R0,#+0
   \                     ??is_hex_1: (+1)
   \       0x34   0x4770             BX       LR
    164          }
    165          

   \                                 In section .text, align 2, keep-with-next
    166          static uint16_t hex(const char *p)
    167          {
   \                     hex: (+1)
   \        0x0   0x0001             MOVS     R1,R0
    168            uint16_t val = 0;
   \        0x2   0x2000             MOVS     R0,#+0
    169          
    170            for (;; ) {
    171              char c = *p++;
   \                     ??hex_0: (+1)
   \        0x4   0x780A             LDRB     R2,[R1, #+0]
   \        0x6   0x1C49             ADDS     R1,R1,#+1
    172              if ((c >= '0') && (c <= '9')) {
   \        0x8   0x0013             MOVS     R3,R2
   \        0xA   0xB2DB             UXTB     R3,R3
   \        0xC   0x2B30             CMP      R3,#+48
   \        0xE   0xDB0A             BLT.N    ??hex_1
   \       0x10   0x0013             MOVS     R3,R2
   \       0x12   0xB2DB             UXTB     R3,R3
   \       0x14   0x2B3A             CMP      R3,#+58
   \       0x16   0xDA06             BGE.N    ??hex_1
    173                val = (val << 4) | (c - '0');
   \       0x18   0x0003             MOVS     R3,R0
   \       0x1A   0xB2D2             UXTB     R2,R2
   \       0x1C   0xF1B2 0x0030      SUBS     R0,R2,#+48
   \       0x20   0xEA50 0x1003      ORRS     R0,R0,R3, LSL #+4
   \       0x24   0xE7EE             B.N      ??hex_0
    174              } else if ((c >= 'A') && (c <= 'F')) {
   \                     ??hex_1: (+1)
   \       0x26   0x0013             MOVS     R3,R2
   \       0x28   0xB2DB             UXTB     R3,R3
   \       0x2A   0x2B41             CMP      R3,#+65
   \       0x2C   0xDB0A             BLT.N    ??hex_2
   \       0x2E   0x0013             MOVS     R3,R2
   \       0x30   0xB2DB             UXTB     R3,R3
   \       0x32   0x2B47             CMP      R3,#+71
   \       0x34   0xDA06             BGE.N    ??hex_2
    175                val = (val << 4) | (10 + (c - 'A'));
   \       0x36   0x0003             MOVS     R3,R0
   \       0x38   0xB2D2             UXTB     R2,R2
   \       0x3A   0xF1B2 0x0037      SUBS     R0,R2,#+55
   \       0x3E   0xEA50 0x1003      ORRS     R0,R0,R3, LSL #+4
   \       0x42   0xE7DF             B.N      ??hex_0
    176              } else if ((c >= 'a') && (c <= 'f')) {
   \                     ??hex_2: (+1)
   \       0x44   0x0013             MOVS     R3,R2
   \       0x46   0xB2DB             UXTB     R3,R3
   \       0x48   0x2B61             CMP      R3,#+97
   \       0x4A   0xDB0A             BLT.N    ??hex_3
   \       0x4C   0x0013             MOVS     R3,R2
   \       0x4E   0xB2DB             UXTB     R3,R3
   \       0x50   0x2B67             CMP      R3,#+103
   \       0x52   0xDA06             BGE.N    ??hex_3
    177                val = (val << 4) | (10 + (c - 'a'));
   \       0x54   0x0003             MOVS     R3,R0
   \       0x56   0xB2D2             UXTB     R2,R2
   \       0x58   0xF1B2 0x0057      SUBS     R0,R2,#+87
   \       0x5C   0xEA50 0x1003      ORRS     R0,R0,R3, LSL #+4
   \       0x60   0xE7D0             B.N      ??hex_0
    178              } else {
    179                break;       // Non hex character
    180              }
    181            }
    182            return val;
   \                     ??hex_3: (+1)
   \       0x62   0xB280             UXTH     R0,R0
   \       0x64   0x4770             BX       LR
    183          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   hex
       0   is_hex
      16   sipv6_prefixlength
        16   -> strchr
        16   -> strtoul
      72   stoip6
        72   -> __aeabi_memmove
        72   -> __aeabi_memset
        72   -> common_write_16_bit
        72   -> hex
        72   -> is_hex
      32   stoip6_prefix
        32   -> stoip6
        32   -> strchr
        32   -> strlen
        32   -> strtoul


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     102  hex
      54  is_hex
      36  sipv6_prefixlength
     278  stoip6
     126  stoip6_prefix

 
 596 bytes in section .text
 
 596 bytes of CODE memory

Errors: none
Warnings: none
