###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         29/Mar/2025  15:53:21
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\src\sli_cmsis_os2_ext_task_register.c
#    Command line      =
#        -f "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\src_2571367178678603533.dir\sli_cmsis_os2_ext_task_register.o.rsp"
#        ("D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\src\sli_cmsis_os2_ext_task_register.c"
#        -D DEBUG_EFM=1 -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -lC "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\src_2571367178678603533.dir"
#        --diag_suppress Pa050 -o "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\src_2571367178678603533.dir" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M33 --cmse --cmse
#        -e --fpu=VFPv5_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\rail\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\wisun\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\.\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_project_info\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\Core\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\RTOS2\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\device_init\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emlib\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\iostream\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\preset\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\cpu\include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\ports\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\nvm3\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\peripheral\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_psa_driver\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\common\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ble\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ieee802154\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\wmbus\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\zwave\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\chip\efr32\efr32xg2x\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\sidewalk\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\rail_util_pti\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\segger\systemview\SEGGER\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\silicon_labs\silabs_core\memory_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\toolchain\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\system\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ns_list\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ping\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\udp_client\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\sleeptimer\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\plugin\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\socket\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\autogen\\" -On
#        --use_c++_inline) --dependencies=n "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\src_2571367178678603533.dir\sli_cmsis_os2_ext_task_register.o.iar_deps"
#    Locale            =  C
#    List file         =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\src_2571367178678603533.dir\sli_cmsis_os2_ext_task_register.lst
#    Object file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\src_2571367178678603533.dir\sli_cmsis_os2_ext_task_register.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\src\sli_cmsis_os2_ext_task_register.c
      1          /***************************************************************************//**
      2           * @file sli_cmsis_os2_ext_task_register.c
      3           * @brief Abstraction for Task Registers (Thread Local Variables)
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2020 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * SPDX-License-Identifier: Zlib
     10           *
     11           * The licensor of this software is Silicon Laboratories Inc.
     12           *
     13           * This software is provided 'as-is', without any express or implied
     14           * warranty. In no event will the authors be held liable for any damages
     15           * arising from the use of this software.
     16           *
     17           * Permission is granted to anyone to use this software for any purpose,
     18           * including commercial applications, and to alter it and redistribute it
     19           * freely, subject to the following restrictions:
     20           *
     21           * 1. The origin of this software must not be misrepresented; you must not
     22           *    claim that you wrote the original software. If you use this software
     23           *    in a product, an acknowledgment in the product documentation would be
     24           *    appreciated but is not required.
     25           * 2. Altered source versions must be plainly marked as such, and must not be
     26           *    misrepresented as being the original software.
     27           * 3. This notice may not be removed or altered from any source distribution.
     28           *
     29           ******************************************************************************/
     30          
     31          #include "sl_assert.h"
     32          #include "sli_cmsis_os2_ext_task_register.h"
     33          #include "sl_cmsis_os2_common.h"
     34          
     35          /*******************************************************************************
     36           ***************************  LOCAL VARIABLES   ********************************
     37           ******************************************************************************/
     38          
     39          /*******************************************************************************
     40           **************************   GLOBAL FUNCTIONS   *******************************
     41           ******************************************************************************/
     42          
     43          /***************************************************************************//**
     44           * Get a task register ID
     45           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     46          sl_status_t sli_osTaskRegisterNew(sli_task_register_id_t *reg_id)
     47          {
   \                     sli_osTaskRegisterNew: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0xB084             SUB      SP,SP,#+16
   \        0x4   0x0004             MOVS     R4,R0
     48            sl_status_t status = SL_STATUS_FAIL;
   \        0x6   0x2501             MOVS     R5,#+1
     49          
     50            if (reg_id == NULL) {
   \        0x8   0x2C00             CMP      R4,#+0
   \        0xA   0xD101             BNE.N    ??sli_osTaskRegisterNew_0
     51              return SL_STATUS_FAIL;
   \        0xC   0x2001             MOVS     R0,#+1
   \        0xE   0xE00A             B.N      ??sli_osTaskRegisterNew_1
     52            }
     53          
     54          #if defined(SL_CATALOG_MICRIUMOS_KERNEL_PRESENT)
     55            RTOS_ERR err;
     56          
     57            *reg_id = OSTaskRegGetID(&err);
   \                     ??sli_osTaskRegisterNew_0: (+1)
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0x.... 0x....      BL       OSTaskRegGetID
   \       0x16   0x7020             STRB     R0,[R4, #+0]
     58            if (RTOS_ERR_CODE_GET(err) == RTOS_ERR_NONE) {
   \       0x18   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x1C   0x2800             CMP      R0,#+0
   \       0x1E   0xD101             BNE.N    ??sli_osTaskRegisterNew_2
     59              status = SL_STATUS_OK;
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0x0005             MOVS     R5,R0
     60            }
     61          
     62          #elif defined(SL_CATALOG_FREERTOS_KERNEL_PRESENT)
     63            static uint8_t register_count = 0;
     64            if (register_count > (configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS - 1)) {
     65              return SL_STATUS_FAIL;
     66            }
     67          
     68            *reg_id = register_count + configNUM_USER_THREAD_LOCAL_STORAGE_POINTERS;
     69            ++register_count;
     70            status = SL_STATUS_OK;
     71          #else
     72          #error "Task registers abstraction only supports MicriumOS or FreeRTOS"
     73          #endif
     74            return status;
   \                     ??sli_osTaskRegisterNew_2: (+1)
   \       0x24   0x0028             MOVS     R0,R5
   \                     ??sli_osTaskRegisterNew_1: (+1)
   \       0x26   0xB005             ADD      SP,SP,#+20
   \       0x28   0xBD30             POP      {R4,R5,PC}
     75          }
     76          
     77          /***************************************************************************//**
     78           * Get the task register
     79           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     80          sl_status_t sli_osTaskRegisterGetValue(const osThreadId_t thread_id,
     81                                                 const sli_task_register_id_t reg_id,
     82                                                 uint32_t *value)
     83          {
   \                     sli_osTaskRegisterGetValue: (+1)
   \        0x0   0xE92D 0x41FF      PUSH     {R0-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000F             MOVS     R7,R1
   \        0x8   0x0015             MOVS     R5,R2
     84            sl_status_t status = SL_STATUS_FAIL;
   \        0xA   0xF05F 0x0801      MOVS     R8,#+1
     85          #if defined(SL_CATALOG_MICRIUMOS_KERNEL_PRESENT)
     86            RTOS_ERR    err;
     87            osThread_t *thread;
     88          
     89            if (value == NULL) {
   \        0xE   0x2D00             CMP      R5,#+0
   \       0x10   0xD101             BNE.N    ??sli_osTaskRegisterGetValue_0
     90              return SL_STATUS_FAIL;
   \       0x12   0x2001             MOVS     R0,#+1
   \       0x14   0xE018             B.N      ??sli_osTaskRegisterGetValue_1
     91            }
     92          
     93            if (thread_id != NULL) {
   \                     ??sli_osTaskRegisterGetValue_0: (+1)
   \       0x16   0x2C00             CMP      R4,#+0
   \       0x18   0xD008             BEQ.N    ??sli_osTaskRegisterGetValue_2
     94              thread = (osThread_t *)thread_id;
   \       0x1A   0x0026             MOVS     R6,R4
     95              *value = OSTaskRegGet(&thread->tcb, reg_id, &err);
   \       0x1C   0x466A             MOV      R2,SP
   \       0x1E   0x0039             MOVS     R1,R7
   \       0x20   0xB2C9             UXTB     R1,R1
   \       0x22   0x0030             MOVS     R0,R6
   \       0x24   0x.... 0x....      BL       OSTaskRegGet
   \       0x28   0x6028             STR      R0,[R5, #+0]
   \       0x2A   0xE006             B.N      ??sli_osTaskRegisterGetValue_3
     96            } else {
     97              *value = OSTaskRegGet(NULL, reg_id, &err);
   \                     ??sli_osTaskRegisterGetValue_2: (+1)
   \       0x2C   0x466A             MOV      R2,SP
   \       0x2E   0x0039             MOVS     R1,R7
   \       0x30   0xB2C9             UXTB     R1,R1
   \       0x32   0x2000             MOVS     R0,#+0
   \       0x34   0x.... 0x....      BL       OSTaskRegGet
   \       0x38   0x6028             STR      R0,[R5, #+0]
     98            }
     99          
    100            if (RTOS_ERR_CODE_GET(err) == RTOS_ERR_NONE) {
   \                     ??sli_osTaskRegisterGetValue_3: (+1)
   \       0x3A   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x3E   0x2800             CMP      R0,#+0
   \       0x40   0xD101             BNE.N    ??sli_osTaskRegisterGetValue_4
    101              status = SL_STATUS_OK;
   \       0x42   0x2000             MOVS     R0,#+0
   \       0x44   0x4680             MOV      R8,R0
    102            }
    103          #elif defined(SL_CATALOG_FREERTOS_KERNEL_PRESENT)
    104            *value = (uint32_t)pvTaskGetThreadLocalStoragePointer(thread_id, reg_id);
    105            status = SL_STATUS_OK;
    106          #else
    107          #error "Task registers abstraction only supports MicriumOS or FreeRTOS"
    108          #endif
    109          
    110            return status;
   \                     ??sli_osTaskRegisterGetValue_4: (+1)
   \       0x46   0x4640             MOV      R0,R8
   \                     ??sli_osTaskRegisterGetValue_1: (+1)
   \       0x48   0xB004             ADD      SP,SP,#+16
   \       0x4A   0xE8BD 0x81F0      POP      {R4-R8,PC}
    111          }
    112          
    113          /***************************************************************************//**
    114           * Set the task register
    115           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    116          sl_status_t sli_osTaskRegisterSetValue(const osThreadId_t thread_id,
    117                                                 const sli_task_register_id_t reg_id,
    118                                                 const uint32_t value)
    119          {
   \                     sli_osTaskRegisterSetValue: (+1)
   \        0x0   0xE92D 0x41FF      PUSH     {R0-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000E             MOVS     R6,R1
   \        0x8   0x0017             MOVS     R7,R2
    120            sl_status_t status = SL_STATUS_FAIL;
   \        0xA   0xF05F 0x0801      MOVS     R8,#+1
    121          #if defined(SL_CATALOG_MICRIUMOS_KERNEL_PRESENT)
    122            RTOS_ERR err;
    123            osThread_t *thread;
    124          
    125            if (thread_id != NULL) {
   \        0xE   0x2C00             CMP      R4,#+0
   \       0x10   0xD008             BEQ.N    ??sli_osTaskRegisterSetValue_0
    126              thread = (osThread_t *)thread_id;
   \       0x12   0x0025             MOVS     R5,R4
    127              OSTaskRegSet(&thread->tcb, reg_id, (OS_REG)value, &err);
   \       0x14   0x466B             MOV      R3,SP
   \       0x16   0x003A             MOVS     R2,R7
   \       0x18   0x0031             MOVS     R1,R6
   \       0x1A   0xB2C9             UXTB     R1,R1
   \       0x1C   0x0028             MOVS     R0,R5
   \       0x1E   0x.... 0x....      BL       OSTaskRegSet
   \       0x22   0xE006             B.N      ??sli_osTaskRegisterSetValue_1
    128            } else {
    129              OSTaskRegSet(NULL, reg_id, (OS_REG)value, &err);
   \                     ??sli_osTaskRegisterSetValue_0: (+1)
   \       0x24   0x466B             MOV      R3,SP
   \       0x26   0x003A             MOVS     R2,R7
   \       0x28   0x0031             MOVS     R1,R6
   \       0x2A   0xB2C9             UXTB     R1,R1
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0x.... 0x....      BL       OSTaskRegSet
    130            }
    131          
    132            if (RTOS_ERR_CODE_GET(err) == RTOS_ERR_NONE) {
   \                     ??sli_osTaskRegisterSetValue_1: (+1)
   \       0x32   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD101             BNE.N    ??sli_osTaskRegisterSetValue_2
    133              status = SL_STATUS_OK;
   \       0x3A   0x2000             MOVS     R0,#+0
   \       0x3C   0x4680             MOV      R8,R0
    134            }
    135          #elif defined(SL_CATALOG_FREERTOS_KERNEL_PRESENT)
    136            vTaskSetThreadLocalStoragePointer(thread_id, reg_id, (void *)value);
    137            status = SL_STATUS_OK;
    138          #else
    139          #error "Task registers abstraction only supports MicriumOS or FreeRTOS"
    140          #endif
    141          
    142            return status;
   \                     ??sli_osTaskRegisterSetValue_2: (+1)
   \       0x3E   0x4640             MOV      R0,R8
   \       0x40   0xB004             ADD      SP,SP,#+16
   \       0x42   0xE8BD 0x81F0      POP      {R4-R8,PC}
    143          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   sli_osTaskRegisterGetValue
        40   -> OSTaskRegGet
      32   sli_osTaskRegisterNew
        32   -> OSTaskRegGetID
      40   sli_osTaskRegisterSetValue
        40   -> OSTaskRegSet


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      78  sli_osTaskRegisterGetValue
      42  sli_osTaskRegisterNew
      70  sli_osTaskRegisterSetValue

 
 190 bytes in section .text
 
 190 bytes of CODE memory

Errors: none
Warnings: none
