###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         29/Mar/2025  15:53:19
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\src\sl_slist.c
#    Command line                 =
#        -f "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\src_2571367178678603533.dir\sl_slist.o.rsp"
#        ("D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\src\sl_slist.c" -D
#        DEBUG_EFM=1 -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -lC "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\src_2571367178678603533.dir"
#        --diag_suppress Pa050 -o "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\src_2571367178678603533.dir" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M33 --cmse --cmse
#        -e --fpu=VFPv5_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\rail\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\wisun\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\.\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_project_info\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\Core\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\RTOS2\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\device_init\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emlib\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\iostream\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\preset\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\cpu\include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\ports\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\nvm3\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\peripheral\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_psa_driver\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\common\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ble\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ieee802154\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\wmbus\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\zwave\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\chip\efr32\efr32xg2x\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\sidewalk\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\rail_util_pti\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\segger\systemview\SEGGER\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\silicon_labs\silabs_core\memory_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\toolchain\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\system\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ns_list\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ping\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\udp_client\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\sleeptimer\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\plugin\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\socket\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\autogen\\" -On
#        --use_c++_inline) --dependencies=n "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\src_2571367178678603533.dir\sl_slist.o.iar_deps"
#    Locale                       =  C
#    List file                    =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\src_2571367178678603533.dir\sl_slist.lst
#    Object file                  =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\src_2571367178678603533.dir\sl_slist.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#
###############################################################################

D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\src\sl_slist.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Single Link List
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2019 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * SPDX-License-Identifier: Zlib
     10           *
     11           * The licensor of this software is Silicon Laboratories Inc.
     12           *
     13           * This software is provided 'as-is', without any express or implied
     14           * warranty. In no event will the authors be held liable for any damages
     15           * arising from the use of this software.
     16           *
     17           * Permission is granted to anyone to use this software for any purpose,
     18           * including commercial applications, and to alter it and redistribute it
     19           * freely, subject to the following restrictions:
     20           *
     21           * 1. The origin of this software must not be misrepresented; you must not
     22           *    claim that you wrote the original software. If you use this software
     23           *    in a product, an acknowledgment in the product documentation would be
     24           *    appreciated but is not required.
     25           * 2. Altered source versions must be plainly marked as such, and must not be
     26           *    misrepresented as being the original software.
     27           * 3. This notice may not be removed or altered from any source distribution.
     28           *
     29           ******************************************************************************/
     30          
     31          #include "sl_assert.h"
     32          #include "sl_slist.h"
     33          #include <stdbool.h>
     34          #include <stdlib.h>
     35          #include <stdint.h>
     36          
     37          /*******************************************************************************
     38           **************************   GLOBAL FUNCTIONS   *******************************
     39           ******************************************************************************/
     40          
     41          /***************************************************************************//**
     42           * Initializes a singly-linked list.
     43           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     44          void sl_slist_init(sl_slist_node_t **head)
     45          {
     46            *head = 0;
   \                     sl_slist_init: (+1)
   \        0x0   0x2100             MOVS     R1,#+0
   \        0x2   0x6001             STR      R1,[R0, #+0]
     47          }
   \        0x4   0x4770             BX       LR
     48          
     49          /***************************************************************************//**
     50           * Add given item at beginning of list.
     51           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     52          void sl_slist_push(sl_slist_node_t **head,
     53                             sl_slist_node_t *item)
     54          {
   \                     sl_slist_push: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
     55            EFM_ASSERT((item != NULL) && (head != NULL));
   \        0x6   0x2D00             CMP      R5,#+0
   \        0x8   0xD001             BEQ.N    ??sl_slist_push_0
   \        0xA   0x2C00             CMP      R4,#+0
   \        0xC   0xD103             BNE.N    ??sl_slist_push_1
   \                     ??sl_slist_push_0: (+1)
   \        0xE   0x2137             MOVS     R1,#+55
   \       0x10   0x....             LDR.N    R0,??DataTable6
   \       0x12   0x.... 0x....      BL       assertEFM
     56          
     57            item->node = *head;
   \                     ??sl_slist_push_1: (+1)
   \       0x16   0x6820             LDR      R0,[R4, #+0]
   \       0x18   0x6028             STR      R0,[R5, #+0]
     58            *head = item;
   \       0x1A   0x6025             STR      R5,[R4, #+0]
     59          }
   \       0x1C   0xBD31             POP      {R0,R4,R5,PC}
     60          
     61          /***************************************************************************//**
     62           * Add item at end of list.
     63           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     64          void sl_slist_push_back(sl_slist_node_t **head,
     65                                  sl_slist_node_t *item)
     66          {
   \                     sl_slist_push_back: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
     67            sl_slist_node_t **node_ptr = head;
   \        0x6   0x0026             MOVS     R6,R4
     68          
     69            EFM_ASSERT((item != NULL) && (head != NULL));
   \        0x8   0x2D00             CMP      R5,#+0
   \        0xA   0xD001             BEQ.N    ??sl_slist_push_back_0
   \        0xC   0x2C00             CMP      R4,#+0
   \        0xE   0xD103             BNE.N    ??sl_slist_push_back_1
   \                     ??sl_slist_push_back_0: (+1)
   \       0x10   0x2145             MOVS     R1,#+69
   \       0x12   0x....             LDR.N    R0,??DataTable6
   \       0x14   0x.... 0x....      BL       assertEFM
     70          
     71            while (*node_ptr != NULL) {
   \                     ??sl_slist_push_back_1: (+1)
   \       0x18   0x6830             LDR      R0,[R6, #+0]
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD001             BEQ.N    ??sl_slist_push_back_2
     72              node_ptr = &((*node_ptr)->node);
   \       0x1E   0x6836             LDR      R6,[R6, #+0]
   \       0x20   0xE7FA             B.N      ??sl_slist_push_back_1
     73            }
     74          
     75            item->node = NULL;
   \                     ??sl_slist_push_back_2: (+1)
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0x6028             STR      R0,[R5, #+0]
     76            *node_ptr = item;
   \       0x26   0x6035             STR      R5,[R6, #+0]
     77          }
   \       0x28   0xBD70             POP      {R4-R6,PC}
     78          
     79          /***************************************************************************//**
     80           * Removes and returns first element of list.
     81           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     82          sl_slist_node_t *sl_slist_pop(sl_slist_node_t **head)
     83          {
   \                     sl_slist_pop: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
     84            sl_slist_node_t *item;
     85          
     86            EFM_ASSERT(head != NULL);
   \        0x4   0x2C00             CMP      R4,#+0
   \        0x6   0xD103             BNE.N    ??sl_slist_pop_0
   \        0x8   0x2156             MOVS     R1,#+86
   \        0xA   0x....             LDR.N    R0,??DataTable6
   \        0xC   0x.... 0x....      BL       assertEFM
     87          
     88            item = *head;
   \                     ??sl_slist_pop_0: (+1)
   \       0x10   0x6821             LDR      R1,[R4, #+0]
     89            if (item == NULL) {
   \       0x12   0x2900             CMP      R1,#+0
   \       0x14   0xD101             BNE.N    ??sl_slist_pop_1
     90              return (NULL);
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xE004             B.N      ??sl_slist_pop_2
     91            }
     92          
     93            *head = item->node;
   \                     ??sl_slist_pop_1: (+1)
   \       0x1A   0x6808             LDR      R0,[R1, #+0]
   \       0x1C   0x6020             STR      R0,[R4, #+0]
     94          
     95            item->node = NULL;
   \       0x1E   0x2000             MOVS     R0,#+0
   \       0x20   0x6008             STR      R0,[R1, #+0]
     96          
     97            return (item);
   \       0x22   0x0008             MOVS     R0,R1
   \                     ??sl_slist_pop_2: (+1)
   \       0x24   0xBD10             POP      {R4,PC}
     98          }
     99          
    100          /***************************************************************************//**
    101           * Insert item after given item.
    102           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    103          void sl_slist_insert(sl_slist_node_t *item,
    104                               sl_slist_node_t *pos)
    105          {
   \                     sl_slist_insert: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    106            EFM_ASSERT((item != NULL) && (pos != NULL));
   \        0x6   0x2C00             CMP      R4,#+0
   \        0x8   0xD001             BEQ.N    ??sl_slist_insert_0
   \        0xA   0x2D00             CMP      R5,#+0
   \        0xC   0xD103             BNE.N    ??sl_slist_insert_1
   \                     ??sl_slist_insert_0: (+1)
   \        0xE   0x216A             MOVS     R1,#+106
   \       0x10   0x....             LDR.N    R0,??DataTable6
   \       0x12   0x.... 0x....      BL       assertEFM
    107          
    108            item->node = pos->node;
   \                     ??sl_slist_insert_1: (+1)
   \       0x16   0x6828             LDR      R0,[R5, #+0]
   \       0x18   0x6020             STR      R0,[R4, #+0]
    109            pos->node = item;
   \       0x1A   0x602C             STR      R4,[R5, #+0]
    110          }
   \       0x1C   0xBD31             POP      {R0,R4,R5,PC}
    111          
    112          /***************************************************************************//**
    113           * Remove item from list.
    114           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    115          void sl_slist_remove(sl_slist_node_t **head,
    116                               sl_slist_node_t *item)
    117          {
   \                     sl_slist_remove: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    118            sl_slist_node_t **node_ptr;
    119          
    120            EFM_ASSERT((item != NULL) && (head != NULL));
   \        0x6   0x2D00             CMP      R5,#+0
   \        0x8   0xD001             BEQ.N    ??sl_slist_remove_0
   \        0xA   0x2C00             CMP      R4,#+0
   \        0xC   0xD103             BNE.N    ??sl_slist_remove_1
   \                     ??sl_slist_remove_0: (+1)
   \        0xE   0x2178             MOVS     R1,#+120
   \       0x10   0x....             LDR.N    R0,??DataTable6
   \       0x12   0x.... 0x....      BL       assertEFM
    121          
    122            for (node_ptr = head; *node_ptr != NULL; node_ptr = &((*node_ptr)->node)) {
   \                     ??sl_slist_remove_1: (+1)
   \       0x16   0x0026             MOVS     R6,R4
   \                     ??sl_slist_remove_2: (+1)
   \       0x18   0x6830             LDR      R0,[R6, #+0]
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD007             BEQ.N    ??sl_slist_remove_3
    123              if (*node_ptr == item) {
   \       0x1E   0x6830             LDR      R0,[R6, #+0]
   \       0x20   0x42A8             CMP      R0,R5
   \       0x22   0xD102             BNE.N    ??sl_slist_remove_4
    124                *node_ptr = item->node;
   \       0x24   0x6828             LDR      R0,[R5, #+0]
   \       0x26   0x6030             STR      R0,[R6, #+0]
    125                return;
   \       0x28   0xE007             B.N      ??sl_slist_remove_5
    126              }
    127            }
   \                     ??sl_slist_remove_4: (+1)
   \       0x2A   0x6836             LDR      R6,[R6, #+0]
   \       0x2C   0xE7F4             B.N      ??sl_slist_remove_2
    128          
    129            EFM_ASSERT(node_ptr != NULL);
   \                     ??sl_slist_remove_3: (+1)
   \       0x2E   0x2E00             CMP      R6,#+0
   \       0x30   0xD103             BNE.N    ??sl_slist_remove_6
   \       0x32   0x2181             MOVS     R1,#+129
   \       0x34   0x....             LDR.N    R0,??DataTable6
   \       0x36   0x.... 0x....      BL       assertEFM
    130          }
   \                     ??sl_slist_remove_6: (+1)
   \                     ??sl_slist_remove_5: (+1)
   \       0x3A   0xBD70             POP      {R4-R6,PC}
    131          
    132          /***************************************************************************//**
    133           * Sorts list items.
    134           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    135          void sl_slist_sort(sl_slist_node_t **head,
    136                             bool (*cmp_fnct)(sl_slist_node_t *item_l,
    137                                              sl_slist_node_t *item_r))
    138          {
   \                     sl_slist_sort: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x4688             MOV      R8,R1
    139            bool  swapped;
    140            sl_slist_node_t **pp_item_l;
    141          
    142            EFM_ASSERT((head != NULL) && (cmp_fnct != NULL));
   \        0x8   0x2C00             CMP      R4,#+0
   \        0xA   0xD002             BEQ.N    ??sl_slist_sort_0
   \        0xC   0x4640             MOV      R0,R8
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD103             BNE.N    ??sl_slist_sort_1
   \                     ??sl_slist_sort_0: (+1)
   \       0x12   0x218E             MOVS     R1,#+142
   \       0x14   0x....             LDR.N    R0,??DataTable6
   \       0x16   0x.... 0x....      BL       assertEFM
    143          
    144            do {
    145              swapped = false;
   \                     ??sl_slist_sort_1: (+1)
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0x0005             MOVS     R5,R0
    146          
    147              pp_item_l = head;
   \       0x1E   0x0026             MOVS     R6,R4
    148              // Loop until end of list is found.
    149              while ((*pp_item_l != NULL) && ((*pp_item_l)->node != NULL)) {
   \                     ??sl_slist_sort_2: (+1)
   \       0x20   0x6830             LDR      R0,[R6, #+0]
   \       0x22   0x2800             CMP      R0,#+0
   \       0x24   0xD01D             BEQ.N    ??sl_slist_sort_3
   \       0x26   0x6830             LDR      R0,[R6, #+0]
   \       0x28   0x6800             LDR      R0,[R0, #+0]
   \       0x2A   0x2800             CMP      R0,#+0
   \       0x2C   0xD019             BEQ.N    ??sl_slist_sort_3
    150                sl_slist_node_t *p_item_r = (*pp_item_l)->node;
   \       0x2E   0x6830             LDR      R0,[R6, #+0]
   \       0x30   0xF8D0 0x9000      LDR      R9,[R0, #+0]
    151                bool  ordered;
    152          
    153                // Call provided compare fnct.
    154                ordered = cmp_fnct(*pp_item_l, p_item_r);
   \       0x34   0x4649             MOV      R1,R9
   \       0x36   0x6830             LDR      R0,[R6, #+0]
   \       0x38   0x47C0             BLX      R8
   \       0x3A   0x0007             MOVS     R7,R0
    155                if (ordered == false) {
   \       0x3C   0x0038             MOVS     R0,R7
   \       0x3E   0xB2C0             UXTB     R0,R0
   \       0x40   0x2800             CMP      R0,#+0
   \       0x42   0xD10C             BNE.N    ??sl_slist_sort_4
    156                  // If order is not correct, swap items.
    157                  sl_slist_node_t *p_tmp = p_item_r->node;
   \       0x44   0xF8D9 0x0000      LDR      R0,[R9, #+0]
    158          
    159                  // Swap the two items.
    160                  p_item_r->node = *pp_item_l;
   \       0x48   0x6831             LDR      R1,[R6, #+0]
   \       0x4A   0xF8C9 0x1000      STR      R1,[R9, #+0]
    161                  (*pp_item_l)->node = p_tmp;
   \       0x4E   0x6831             LDR      R1,[R6, #+0]
   \       0x50   0x6008             STR      R0,[R1, #+0]
    162                  *pp_item_l = p_item_r;
   \       0x52   0xF8C6 0x9000      STR      R9,[R6, #+0]
    163                  pp_item_l = &(p_item_r->node);
   \       0x56   0x464E             MOV      R6,R9
    164                  // Indicate a swap has been done.
    165                  swapped = true;
   \       0x58   0x2101             MOVS     R1,#+1
   \       0x5A   0x000D             MOVS     R5,R1
   \       0x5C   0xE7E0             B.N      ??sl_slist_sort_2
    166                } else {
    167                  pp_item_l = &((*pp_item_l)->node);
   \                     ??sl_slist_sort_4: (+1)
   \       0x5E   0x6836             LDR      R6,[R6, #+0]
   \       0x60   0xE7DE             B.N      ??sl_slist_sort_2
    168                }
    169              }
    170              // Re-loop until no items have been swapped.
    171            } while (swapped == true);
   \                     ??sl_slist_sort_3: (+1)
   \       0x62   0x0028             MOVS     R0,R5
   \       0x64   0xB2C0             UXTB     R0,R0
   \       0x66   0x2800             CMP      R0,#+0
   \       0x68   0xD1D7             BNE.N    ??sl_slist_sort_1
    172          }
   \       0x6A   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x44 0x3A          DC8 0x44, 0x3A, 0x5C, 0x49, 0x6E, 0x65, 0x73, 0x68
   \              0x5C 0x49    
   \              0x6E 0x65    
   \              0x73 0x68
   \        0x8   0x5F 0x77          DC8 0x5F, 0x77, 0x69, 0x73, 0x75, 0x6E, 0x5C, 0x57
   \              0x69 0x73    
   \              0x75 0x6E    
   \              0x5C 0x57
   \       0x10   0x69 0x73          DC8 0x69, 0x73, 0x75, 0x6E, 0x5F, 0x4E, 0x6F, 0x64
   \              0x75 0x6E    
   \              0x5F 0x4E    
   \              0x6F 0x64
   \       0x18   0x65 0x5F          DC8 0x65, 0x5F, 0x41, 0x70, 0x70, 0x20, 0x31, 0x5C
   \              0x41 0x70    
   \              0x70 0x20    
   \              0x31 0x5C
   \       0x20   0x57 0x69          DC8 0x57, 0x69, 0x73, 0x75, 0x6E, 0x5F, 0x4E, 0x6F
   \              0x73 0x75    
   \              0x6E 0x5F    
   \              0x4E 0x6F
   \       0x28   0x64 0x65          DC8 0x64, 0x65, 0x5F, 0x41, 0x70, 0x70, 0x5C, 0x67
   \              0x5F 0x41    
   \              0x70 0x70    
   \              0x5C 0x67
   \       0x30   0x65 0x63          DC8 0x65, 0x63, 0x6B, 0x6F, 0x5F, 0x73, 0x64, 0x6B
   \              0x6B 0x6F    
   \              0x5F 0x73    
   \              0x64 0x6B
   \       0x38   0x5F 0x34          DC8 0x5F, 0x34, 0x2E, 0x34, 0x2E, 0x35, 0x5C, 0x70
   \              0x2E 0x34    
   \              0x2E 0x35    
   \              0x5C 0x70
   \       0x40   0x6C 0x61          DC8 0x6C, 0x61, 0x74, 0x66, 0x6F, 0x72, 0x6D, 0x5C
   \              0x74 0x66    
   \              0x6F 0x72    
   \              0x6D 0x5C
   \       0x48   0x63 0x6F          DC8 0x63, 0x6F, 0x6D, 0x6D, 0x6F, 0x6E, 0x5C, 0x73
   \              0x6D 0x6D    
   \              0x6F 0x6E    
   \              0x5C 0x73
   \       0x50   0x72 0x63          DC8 0x72, 0x63, 0x5C, 0x73, 0x6C, 0x5F, 0x73, 0x6C
   \              0x5C 0x73    
   \              0x6C 0x5F    
   \              0x73 0x6C
   \       0x58   0x69 0x73          DC8 0x69, 0x73, 0x74, 0x2E, 0x63, 0
   \              0x74 0x2E    
   \              0x63 0x00
   \       0x5E                      DS8 2

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   sl_slist_init
      16   sl_slist_insert
        16   -> assertEFM
       8   sl_slist_pop
         8   -> assertEFM
      16   sl_slist_push
        16   -> assertEFM
      16   sl_slist_push_back
        16   -> assertEFM
      16   sl_slist_remove
        16   -> assertEFM
      32   sl_slist_sort
        32   -- Indirect call
        32   -> assertEFM


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
      96  ?_0
       6  sl_slist_init
      30  sl_slist_insert
      38  sl_slist_pop
      30  sl_slist_push
      42  sl_slist_push_back
      60  sl_slist_remove
     110  sl_slist_sort

 
  96 bytes in section .rodata
 320 bytes in section .text
 
 320 bytes of CODE  memory
  96 bytes of CONST memory

Errors: none
Warnings: none
