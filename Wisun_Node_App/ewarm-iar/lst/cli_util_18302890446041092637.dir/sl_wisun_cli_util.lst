###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         29/Mar/2025  15:53:15
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\sl_wisun_cli_util.c
#    Command line                 =
#        -f "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\cli_util_18302890446041092637.dir\sl_wisun_cli_util.o.rsp"
#        ("D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\sl_wisun_cli_util.c"
#        -D DEBUG_EFM=1 -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -lC "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\cli_util_18302890446041092637.dir"
#        --diag_suppress Pa050 -o "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\cli_util_18302890446041092637.dir"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse --cmse -e --fpu=VFPv5_sp --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\rail\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\wisun\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\.\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_project_info\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\Core\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\RTOS2\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\device_init\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emlib\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\iostream\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\preset\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\cpu\include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\ports\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\nvm3\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\peripheral\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_psa_driver\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\common\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ble\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ieee802154\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\wmbus\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\zwave\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\chip\efr32\efr32xg2x\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\sidewalk\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\rail_util_pti\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\segger\systemview\SEGGER\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\silicon_labs\silabs_core\memory_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\toolchain\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\system\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ns_list\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ping\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\udp_client\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\sleeptimer\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\plugin\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\socket\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\autogen\\" -On
#        --use_c++_inline) --dependencies=n "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\cli_util_18302890446041092637.dir\sl_wisun_cli_util.o.iar_deps"
#    Locale                       =  C
#    List file                    =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\cli_util_18302890446041092637.dir\sl_wisun_cli_util.lst
#    Object file                  =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\cli_util_18302890446041092637.dir\sl_wisun_cli_util.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  0
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#      __iar_require _Printf      =  unknown,flags,int_specials,widths
#
###############################################################################

D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\sl_wisun_cli_util.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2021 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * SPDX-License-Identifier: Zlib
     10           *
     11           * The licensor of this software is Silicon Laboratories Inc.
     12           *
     13           * This software is provided 'as-is', without any express or implied
     14           * warranty. In no event will the authors be held liable for any damages
     15           * arising from the use of this software.
     16           *
     17           * Permission is granted to anyone to use this software for any purpose,
     18           * including commercial applications, and to alter it and redistribute it
     19           * freely, subject to the following restrictions:
     20           *
     21           * 1. The origin of this software must not be misrepresented; you must not
     22           *    claim that you wrote the original software. If you use this software
     23           *    in a product, an acknowledgment in the product documentation would be
     24           *    appreciated but is not required.
     25           * 2. Altered source versions must be plainly marked as such, and must not be
     26           *    misrepresented as being the original software.
     27           * 3. This notice may not be removed or altered from any source distribution.
     28           *
     29           ******************************************************************************/
     30          
     31          // -----------------------------------------------------------------------------
     32          //                              Macros and Typedefs
     33          // -----------------------------------------------------------------------------
     34          #include "sl_wisun_cli_util.h"
     35          #include <stdlib.h>
     36          #include <stdio.h>
     37          #include <string.h>
     38          
     39          // -----------------------------------------------------------------------------
     40          //                          Static Function Declarations
     41          // -----------------------------------------------------------------------------
     42          /**************************************************************************//**
     43           * @brief App util printable line
     44           * @details Static helper function
     45           * @param[in,out] line_buffer Line buffer
     46           * @param[in] data Data ptr
     47           * @param[in] data_length Data length
     48           * @param[in] line_length Line length
     49           * @return int Return with the calculated line length
     50           *****************************************************************************/
     51          static int app_util_printable_line(char *const line_buffer,
     52                                             const uint8_t *const data,
     53                                             const uint16_t data_length,
     54                                             uint8_t line_length);
     55          
     56          /**************************************************************************//**
     57           * @brief App util printable hex line
     58           * @details Static helper function
     59           * @param[in,out] line_buffer Line buffer
     60           * @param[in] data Data ptr
     61           * @param[in] data_length Data length
     62           * @param[in] line_length Line length
     63           * @return int Return with the calculated line length
     64           *****************************************************************************/
     65          static int app_util_printable_hex_line(char *line_buffer,
     66                                                 const uint8_t *data,
     67                                                 const uint16_t data_length,
     68                                                 uint8_t line_length);
     69          
     70          // -----------------------------------------------------------------------------
     71          //                                Global Variables
     72          // -----------------------------------------------------------------------------
     73          
     74          // -----------------------------------------------------------------------------
     75          //                                Static Variables
     76          // -----------------------------------------------------------------------------
     77          
     78          // -----------------------------------------------------------------------------
     79          //                          Public Function Definitions
     80          // -----------------------------------------------------------------------------
     81          /* App util get string */

   \                                 In section .text, align 2, keep-with-next
     82          sl_status_t app_util_get_string(char *const value_str,
     83                                          uint32_t value,
     84                                          const app_enum_t *const value_enum_list,
     85                                          uint8_t is_value_signed,
     86                                          uint8_t is_value_hex,
     87                                          uint8_t value_length)
     88          {
   \                     app_util_get_string: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0xB086             SUB      SP,SP,#+24
   \        0x6   0x4682             MOV      R10,R0
   \        0x8   0x000F             MOVS     R7,R1
   \        0xA   0x4690             MOV      R8,R2
   \        0xC   0x4699             MOV      R9,R3
   \        0xE   0x9D0E             LDR      R5,[SP, #+56]
   \       0x10   0x9E0F             LDR      R6,[SP, #+60]
     89            const app_enum_t* value_enum;
     90            char value_format_str[10];
     91            char value_temp[10];
     92          
     93            // String is empty by default
     94            value_str[0] = '\0';
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0xF88A 0x0000      STRB     R0,[R10, #+0]
     95          
     96            // Attempt to find a matching enumeration
     97            value_enum = app_util_get_enum_by_integer(value_enum_list, value);
   \       0x18   0x0039             MOVS     R1,R7
   \       0x1A   0x4640             MOV      R0,R8
   \       0x1C   0x.... 0x....      BL       app_util_get_enum_by_integer
   \       0x20   0x0004             MOVS     R4,R0
     98          
     99            if (value_length && is_value_hex) {
   \       0x22   0x0030             MOVS     R0,R6
   \       0x24   0xB2C0             UXTB     R0,R0
   \       0x26   0x2800             CMP      R0,#+0
   \       0x28   0xD00B             BEQ.N    ??app_util_get_string_0
   \       0x2A   0x0028             MOVS     R0,R5
   \       0x2C   0xB2C0             UXTB     R0,R0
   \       0x2E   0x2800             CMP      R0,#+0
   \       0x30   0xD007             BEQ.N    ??app_util_get_string_0
    100              // Fixed-length hex values are always zero-filled
    101              sprintf(value_format_str, "%%0%u", value_length);
   \       0x32   0x0032             MOVS     R2,R6
   \       0x34   0xB2D2             UXTB     R2,R2
   \       0x36   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \       0x3A   0x4668             MOV      R0,SP
   \       0x3C   0x.... 0x....      BL       sprintf
   \       0x40   0xE00F             B.N      ??app_util_get_string_1
    102            } else if (value_length) {
   \                     ??app_util_get_string_0: (+1)
   \       0x42   0x0030             MOVS     R0,R6
   \       0x44   0xB2C0             UXTB     R0,R0
   \       0x46   0x2800             CMP      R0,#+0
   \       0x48   0xD007             BEQ.N    ??app_util_get_string_2
    103              // Fixed-length value
    104              sprintf(value_format_str, "%%%u", value_length);
   \       0x4A   0x0032             MOVS     R2,R6
   \       0x4C   0xB2D2             UXTB     R2,R2
   \       0x4E   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \       0x52   0x4668             MOV      R0,SP
   \       0x54   0x.... 0x....      BL       sprintf
   \       0x58   0xE003             B.N      ??app_util_get_string_1
    105            } else {
    106              sprintf(value_format_str, "%%");
   \                     ??app_util_get_string_2: (+1)
   \       0x5A   0x....             ADR.N    R1,??DataTable2
   \       0x5C   0x4668             MOV      R0,SP
   \       0x5E   0x.... 0x....      BL       sprintf
    107            }
    108          
    109            if (is_value_hex) {
   \                     ??app_util_get_string_1: (+1)
   \       0x62   0x0028             MOVS     R0,R5
   \       0x64   0xB2C0             UXTB     R0,R0
   \       0x66   0x2800             CMP      R0,#+0
   \       0x68   0xD009             BEQ.N    ??app_util_get_string_3
    110              // Hex value
    111              strcat(value_format_str, "lx");
   \       0x6A   0x....             ADR.N    R1,??DataTable2_1
   \       0x6C   0x4668             MOV      R0,SP
   \       0x6E   0x.... 0x....      BL       strcat
    112              sprintf(value_temp, value_format_str, value);
   \       0x72   0x003A             MOVS     R2,R7
   \       0x74   0x0001             MOVS     R1,R0
   \       0x76   0xA803             ADD      R0,SP,#+12
   \       0x78   0x.... 0x....      BL       sprintf
   \       0x7C   0xE016             B.N      ??app_util_get_string_4
    113            } else if (is_value_signed) {
   \                     ??app_util_get_string_3: (+1)
   \       0x7E   0x4648             MOV      R0,R9
   \       0x80   0xB2C0             UXTB     R0,R0
   \       0x82   0x2800             CMP      R0,#+0
   \       0x84   0xD009             BEQ.N    ??app_util_get_string_5
    114              // Signed integer value
    115              strcat(value_format_str, "ld");
   \       0x86   0x....             ADR.N    R1,??DataTable2_2
   \       0x88   0x4668             MOV      R0,SP
   \       0x8A   0x.... 0x....      BL       strcat
    116              sprintf(value_temp, value_format_str, (int32_t)value);
   \       0x8E   0x003A             MOVS     R2,R7
   \       0x90   0x0001             MOVS     R1,R0
   \       0x92   0xA803             ADD      R0,SP,#+12
   \       0x94   0x.... 0x....      BL       sprintf
   \       0x98   0xE008             B.N      ??app_util_get_string_4
    117            } else {
    118              // Unsigned integer value
    119              strcat(value_format_str, "lu");
   \                     ??app_util_get_string_5: (+1)
   \       0x9A   0x....             ADR.N    R1,??DataTable3
   \       0x9C   0x4668             MOV      R0,SP
   \       0x9E   0x.... 0x....      BL       strcat
    120              sprintf(value_temp, value_format_str, value);
   \       0xA2   0x003A             MOVS     R2,R7
   \       0xA4   0x0001             MOVS     R1,R0
   \       0xA6   0xA803             ADD      R0,SP,#+12
   \       0xA8   0x.... 0x....      BL       sprintf
    121            }
    122          
    123            // String starts with an enumeration
    124            if (value_enum) {
   \                     ??app_util_get_string_4: (+1)
   \       0xAC   0x2C00             CMP      R4,#+0
   \       0xAE   0xD004             BEQ.N    ??app_util_get_string_6
    125              sprintf(value_str, "%s (", value_enum->value_str);
   \       0xB0   0x6822             LDR      R2,[R4, #+0]
   \       0xB2   0x....             LDR.N    R1,??DataTable3_5
   \       0xB4   0x4650             MOV      R0,R10
   \       0xB6   0x.... 0x....      BL       sprintf
    126            }
    127          
    128            // Hex value is prefixed with "0x"
    129            if (is_value_hex) {
   \                     ??app_util_get_string_6: (+1)
   \       0xBA   0x0028             MOVS     R0,R5
   \       0xBC   0xB2C0             UXTB     R0,R0
   \       0xBE   0x2800             CMP      R0,#+0
   \       0xC0   0xD003             BEQ.N    ??app_util_get_string_7
    130              strcat(value_str, "0x");
   \       0xC2   0x....             ADR.N    R1,??DataTable3_1
   \       0xC4   0x4650             MOV      R0,R10
   \       0xC6   0x.... 0x....      BL       strcat
    131            }
    132          
    133            // Value itself
    134            strcat(value_str, value_temp);
   \                     ??app_util_get_string_7: (+1)
   \       0xCA   0xA903             ADD      R1,SP,#+12
   \       0xCC   0x4650             MOV      R0,R10
   \       0xCE   0x.... 0x....      BL       strcat
    135          
    136            // Closing paranthesis in case an enumeration was used
    137            if (value_enum) {
   \       0xD2   0x2C00             CMP      R4,#+0
   \       0xD4   0xD003             BEQ.N    ??app_util_get_string_8
    138              strcat(value_str, ")");
   \       0xD6   0x....             ADR.N    R1,??DataTable3_2
   \       0xD8   0x4650             MOV      R0,R10
   \       0xDA   0x.... 0x....      BL       strcat
    139            }
    140          
    141            // Success
    142            return SL_STATUS_OK;
   \                     ??app_util_get_string_8: (+1)
   \       0xDE   0x2000             MOVS     R0,#+0
   \       0xE0   0xB006             ADD      SP,SP,#+24
   \       0xE2   0xE8BD 0x87F0      POP      {R4-R10,PC}
    143          }
    144          
    145          /* App util get integer */

   \                                 In section .text, align 2, keep-with-next
    146          sl_status_t app_util_get_integer(uint32_t *const value,
    147                                           const char *value_str,
    148                                           const app_enum_t *const value_enum_list,
    149                                           uint8_t is_value_signed)
    150          {
   \                     app_util_get_integer: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x4681             MOV      R9,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
    151            const app_enum_t* value_enum;
    152            int value_base = 10;
   \        0xC   0xF05F 0x080A      MOVS     R8,#+10
    153            char *value_end = NULL;
   \       0x10   0x2000             MOVS     R0,#+0
   \       0x12   0x9000             STR      R0,[SP, #+0]
    154          
    155            // Attempt to find a matching enumeration
    156            value_enum = app_util_get_enum_by_string(value_enum_list, value_str);
   \       0x14   0x0029             MOVS     R1,R5
   \       0x16   0x0030             MOVS     R0,R6
   \       0x18   0x.... 0x....      BL       app_util_get_enum_by_string
   \       0x1C   0x0004             MOVS     R4,R0
    157          
    158            // Return a matching enumeration value directly
    159            if (value_enum) {
   \       0x1E   0x2C00             CMP      R4,#+0
   \       0x20   0xD004             BEQ.N    ??app_util_get_integer_0
    160              *value = value_enum->value;
   \       0x22   0x6860             LDR      R0,[R4, #+4]
   \       0x24   0xF8C9 0x0000      STR      R0,[R9, #+0]
    161              return SL_STATUS_OK;
   \       0x28   0x2000             MOVS     R0,#+0
   \       0x2A   0xE022             B.N      ??app_util_get_integer_1
    162            }
    163          
    164            // Value string looks like a hex number
    165            if (strstr(value_str, "0x") == value_str) {
   \                     ??app_util_get_integer_0: (+1)
   \       0x2C   0x....             ADR.N    R1,??DataTable3_1
   \       0x2E   0x0028             MOVS     R0,R5
   \       0x30   0x.... 0x....      BL       strstr
   \       0x34   0x42A8             CMP      R0,R5
   \       0x36   0xD102             BNE.N    ??app_util_get_integer_2
    166              value_str += 2;
   \       0x38   0x1CAD             ADDS     R5,R5,#+2
    167              value_base = 16;
   \       0x3A   0x2010             MOVS     R0,#+16
   \       0x3C   0x4680             MOV      R8,R0
    168            }
    169          
    170            if (is_value_signed) {
   \                     ??app_util_get_integer_2: (+1)
   \       0x3E   0x0038             MOVS     R0,R7
   \       0x40   0xB2C0             UXTB     R0,R0
   \       0x42   0x2800             CMP      R0,#+0
   \       0x44   0xD007             BEQ.N    ??app_util_get_integer_3
    171              // Attempt to convert the value string to integer
    172              *value = strtol(value_str, &value_end, value_base);
   \       0x46   0x4642             MOV      R2,R8
   \       0x48   0x4669             MOV      R1,SP
   \       0x4A   0x0028             MOVS     R0,R5
   \       0x4C   0x.... 0x....      BL       strtol
   \       0x50   0xF8C9 0x0000      STR      R0,[R9, #+0]
   \       0x54   0xE006             B.N      ??app_util_get_integer_4
    173            } else {
    174              // Attempt to convert the value string to integer
    175              *value = strtoul(value_str, &value_end, value_base);
   \                     ??app_util_get_integer_3: (+1)
   \       0x56   0x4642             MOV      R2,R8
   \       0x58   0x4669             MOV      R1,SP
   \       0x5A   0x0028             MOVS     R0,R5
   \       0x5C   0x.... 0x....      BL       strtoul
   \       0x60   0xF8C9 0x0000      STR      R0,[R9, #+0]
    176            }
    177          
    178            // Integer conversion failed
    179            if (*value_end != '\0') {
   \                     ??app_util_get_integer_4: (+1)
   \       0x64   0x9800             LDR      R0,[SP, #+0]
   \       0x66   0x7800             LDRB     R0,[R0, #+0]
   \       0x68   0x2800             CMP      R0,#+0
   \       0x6A   0xD001             BEQ.N    ??app_util_get_integer_5
    180              return SL_STATUS_INVALID_KEY;
   \       0x6C   0x2029             MOVS     R0,#+41
   \       0x6E   0xE000             B.N      ??app_util_get_integer_1
    181            }
    182          
    183            // Success
    184            return SL_STATUS_OK;
   \                     ??app_util_get_integer_5: (+1)
   \       0x70   0x2000             MOVS     R0,#+0
   \                     ??app_util_get_integer_1: (+1)
   \       0x72   0xE8BD 0x83F2      POP      {R1,R4-R9,PC}
    185          }
    186          
    187          /* App util get enum by string */

   \                                 In section .text, align 2, keep-with-next
    188          const app_enum_t* app_util_get_enum_by_string(const app_enum_t *value_enum_list,
    189                                                        const char *const value)
    190          {
   \                     app_util_get_enum_by_string: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    191            while (value_enum_list && value_enum_list->value_str) {
   \                     ??app_util_get_enum_by_string_0: (+1)
   \        0x6   0x2C00             CMP      R4,#+0
   \        0x8   0xD00C             BEQ.N    ??app_util_get_enum_by_string_1
   \        0xA   0x6820             LDR      R0,[R4, #+0]
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD009             BEQ.N    ??app_util_get_enum_by_string_1
    192              if (!strcmp(value_enum_list->value_str, value)) {
   \       0x10   0x0029             MOVS     R1,R5
   \       0x12   0x6820             LDR      R0,[R4, #+0]
   \       0x14   0x.... 0x....      BL       strcmp
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD101             BNE.N    ??app_util_get_enum_by_string_2
    193                // Matching enumeration found
    194                return value_enum_list;
   \       0x1C   0x0020             MOVS     R0,R4
   \       0x1E   0xE002             B.N      ??app_util_get_enum_by_string_3
    195              }
    196              value_enum_list++;
   \                     ??app_util_get_enum_by_string_2: (+1)
   \       0x20   0x3408             ADDS     R4,R4,#+8
   \       0x22   0xE7F0             B.N      ??app_util_get_enum_by_string_0
    197            }
    198          
    199            return NULL;
   \                     ??app_util_get_enum_by_string_1: (+1)
   \       0x24   0x2000             MOVS     R0,#+0
   \                     ??app_util_get_enum_by_string_3: (+1)
   \       0x26   0xBD32             POP      {R1,R4,R5,PC}
    200          }
    201          
    202          /* App util get enum by integerApp util get enum by integer */

   \                                 In section .text, align 2, keep-with-next
    203          const app_enum_t* app_util_get_enum_by_integer(const app_enum_t *value_enum_list,
    204                                                         uint32_t value)
    205          {
   \                     app_util_get_enum_by_integer: (+1)
   \        0x0   0x0002             MOVS     R2,R0
    206            while (value_enum_list && value_enum_list->value_str) {
   \                     ??app_util_get_enum_by_integer_0: (+1)
   \        0x2   0x2A00             CMP      R2,#+0
   \        0x4   0xD009             BEQ.N    ??app_util_get_enum_by_integer_1
   \        0x6   0x6810             LDR      R0,[R2, #+0]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD006             BEQ.N    ??app_util_get_enum_by_integer_1
    207              if (value_enum_list->value == value) {
   \        0xC   0x6850             LDR      R0,[R2, #+4]
   \        0xE   0x4288             CMP      R0,R1
   \       0x10   0xD101             BNE.N    ??app_util_get_enum_by_integer_2
    208                // Matching enumeration found
    209                return value_enum_list;
   \       0x12   0x0010             MOVS     R0,R2
   \       0x14   0xE002             B.N      ??app_util_get_enum_by_integer_3
    210              }
    211              value_enum_list++;
   \                     ??app_util_get_enum_by_integer_2: (+1)
   \       0x16   0x3208             ADDS     R2,R2,#+8
   \       0x18   0xE7F3             B.N      ??app_util_get_enum_by_integer_0
    212            }
    213          
    214            return NULL;
   \                     ??app_util_get_enum_by_integer_1: (+1)
   \       0x1A   0x2000             MOVS     R0,#+0
   \                     ??app_util_get_enum_by_integer_3: (+1)
   \       0x1C   0x4770             BX       LR
    215          }
    216          
    217          /* App util get MAC address */

   \                                 In section .text, align 2, keep-with-next
    218          sl_status_t app_util_get_mac_address(sl_wisun_mac_address_t *const value,
    219                                               const char *value_str)
    220          {
   \                     app_util_get_mac_address: (+1)
   \        0x0   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \        0x4   0x0007             MOVS     R7,R0
   \        0x6   0x000C             MOVS     R4,R1
    221            int hex_str_max_length = SL_WISUN_MAC_ADDRESS_SIZE * 2;
   \        0x8   0x2510             MOVS     R5,#+16
    222            int hex_str_length = 0;
   \        0xA   0x2600             MOVS     R6,#+0
   \        0xC   0x2103             MOVS     R1,#+3
   \        0xE   0x2200             MOVS     R2,#+0
   \       0x10   0x46E8             MOV      R8,SP
   \       0x12   0x4640             MOV      R0,R8
   \       0x14   0x.... 0x....      BL       __aeabi_memset
    223            char hex_str[3] = { 0, 0, 0 };
    224            char *hex_str_end = NULL;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x9001             STR      R0,[SP, #+4]
    225          
    226            while (*value_str != '\0') {
   \                     ??app_util_get_mac_address_0: (+1)
   \       0x1C   0x7820             LDRB     R0,[R4, #+0]
   \       0x1E   0x2800             CMP      R0,#+0
   \       0x20   0xD025             BEQ.N    ??app_util_get_mac_address_1
    227              if ((*value_str != ' ') && (*value_str != ':')) {
   \       0x22   0x7820             LDRB     R0,[R4, #+0]
   \       0x24   0x2820             CMP      R0,#+32
   \       0x26   0xD020             BEQ.N    ??app_util_get_mac_address_2
   \       0x28   0x7820             LDRB     R0,[R4, #+0]
   \       0x2A   0x283A             CMP      R0,#+58
   \       0x2C   0xD01D             BEQ.N    ??app_util_get_mac_address_2
    228                if (hex_str_length >= hex_str_max_length) {
   \       0x2E   0x42AE             CMP      R6,R5
   \       0x30   0xDB01             BLT.N    ??app_util_get_mac_address_3
    229                  // Cannot fit any more characters in to the address
    230                  return SL_STATUS_INVALID_KEY;
   \       0x32   0x2029             MOVS     R0,#+41
   \       0x34   0xE020             B.N      ??app_util_get_mac_address_4
    231                }
    232          
    233                if (hex_str_length % 2 == 0) {
   \                     ??app_util_get_mac_address_3: (+1)
   \       0x36   0x07F0             LSLS     R0,R6,#+31
   \       0x38   0xD403             BMI.N    ??app_util_get_mac_address_5
    234                  hex_str[0] = *value_str;
   \       0x3A   0x7820             LDRB     R0,[R4, #+0]
   \       0x3C   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \       0x40   0xE012             B.N      ??app_util_get_mac_address_6
    235                } else {
    236                  hex_str[1] = *value_str;
   \                     ??app_util_get_mac_address_5: (+1)
   \       0x42   0x7820             LDRB     R0,[R4, #+0]
   \       0x44   0xF88D 0x0001      STRB     R0,[SP, #+1]
    237          
    238                  // Attempt to convert the hex value
    239                  value->address[hex_str_length / 2] = (uint8_t)strtol(hex_str, &hex_str_end, 16);
   \       0x48   0x2002             MOVS     R0,#+2
   \       0x4A   0xFB96 0xF8F0      SDIV     R8,R6,R0
   \       0x4E   0x2210             MOVS     R2,#+16
   \       0x50   0xA901             ADD      R1,SP,#+4
   \       0x52   0x4668             MOV      R0,SP
   \       0x54   0x.... 0x....      BL       strtol
   \       0x58   0xF807 0x0008      STRB     R0,[R7, R8]
    240                  if (*hex_str_end != '\0') {
   \       0x5C   0x9801             LDR      R0,[SP, #+4]
   \       0x5E   0x7800             LDRB     R0,[R0, #+0]
   \       0x60   0x2800             CMP      R0,#+0
   \       0x62   0xD001             BEQ.N    ??app_util_get_mac_address_6
    241                    // The full string wasn't converted, the hex value is invalid
    242                    return SL_STATUS_INVALID_KEY;
   \       0x64   0x2029             MOVS     R0,#+41
   \       0x66   0xE007             B.N      ??app_util_get_mac_address_4
    243                  }
    244                }
    245          
    246                hex_str_length++;
   \                     ??app_util_get_mac_address_6: (+1)
   \       0x68   0x1C76             ADDS     R6,R6,#+1
    247              }
    248          
    249              // Move to the next character
    250              value_str++;
   \                     ??app_util_get_mac_address_2: (+1)
   \       0x6A   0x1C64             ADDS     R4,R4,#+1
   \       0x6C   0xE7D6             B.N      ??app_util_get_mac_address_0
    251            }
    252          
    253            if (hex_str_length != hex_str_max_length) {
   \                     ??app_util_get_mac_address_1: (+1)
   \       0x6E   0x42AE             CMP      R6,R5
   \       0x70   0xD001             BEQ.N    ??app_util_get_mac_address_7
    254              // Incomplete MAC address
    255              return SL_STATUS_INVALID_KEY;
   \       0x72   0x2029             MOVS     R0,#+41
   \       0x74   0xE000             B.N      ??app_util_get_mac_address_4
    256            }
    257          
    258            return SL_STATUS_OK;
   \                     ??app_util_get_mac_address_7: (+1)
   \       0x76   0x2000             MOVS     R0,#+0
   \                     ??app_util_get_mac_address_4: (+1)
   \       0x78   0xE8BD 0x81F6      POP      {R1,R2,R4-R8,PC}
    259          }
    260          
    261          /* App util get MAC address string */

   \                                 In section .text, align 2, keep-with-next
    262          sl_status_t app_util_get_mac_address_string(char *value_str,
    263                                                      const sl_wisun_mac_address_t *value)
    264          {
   \                     app_util_get_mac_address_string: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    265            for (uint8_t i = 0; i < SL_WISUN_MAC_ADDRESS_SIZE; ++i) {
   \        0x6   0x2600             MOVS     R6,#+0
   \                     ??app_util_get_mac_address_string_0: (+1)
   \        0x8   0x0030             MOVS     R0,R6
   \        0xA   0xB2C0             UXTB     R0,R0
   \        0xC   0x2808             CMP      R0,#+8
   \        0xE   0xDA09             BGE.N    ??app_util_get_mac_address_string_1
    266              sprintf(value_str, "%02x:", value->address[i]);
   \       0x10   0x0030             MOVS     R0,R6
   \       0x12   0xB2C0             UXTB     R0,R0
   \       0x14   0x5C2A             LDRB     R2,[R5, R0]
   \       0x16   0x....             LDR.N    R1,??DataTable3_6
   \       0x18   0x0020             MOVS     R0,R4
   \       0x1A   0x.... 0x....      BL       sprintf
    267              value_str += 3;
   \       0x1E   0x1CE4             ADDS     R4,R4,#+3
    268            }
   \       0x20   0x1C76             ADDS     R6,R6,#+1
   \       0x22   0xE7F1             B.N      ??app_util_get_mac_address_string_0
    269          
    270            // Remove the last colon
    271            *(value_str - 1) = '\0';
   \                     ??app_util_get_mac_address_string_1: (+1)
   \       0x24   0x2000             MOVS     R0,#+0
   \       0x26   0xF804 0x0C01      STRB     R0,[R4, #-1]
    272          
    273            return SL_STATUS_OK;
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0xBD70             POP      {R4-R6,PC}
    274          }
    275          
    276          /* App util printable data init */

   \                                 In section .text, align 2, keep-with-next
    277          char *app_util_printable_data_init(app_printable_data_ctx_t *const ctx,
    278                                             const uint8_t *const data,
    279                                             const uint16_t data_length,
    280                                             uint8_t is_hex,
    281                                             uint8_t line_length)
    282          {
   \                     app_util_printable_data_init: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0005             MOVS     R5,R0
   \        0x6   0x000E             MOVS     R6,R1
   \        0x8   0x0017             MOVS     R7,R2
   \        0xA   0x4698             MOV      R8,R3
   \        0xC   0x9C06             LDR      R4,[SP, #+24]
    283            if (!line_length) {
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0xB2C0             UXTB     R0,R0
   \       0x12   0x2800             CMP      R0,#+0
   \       0x14   0xD101             BNE.N    ??app_util_printable_data_init_0
    284              return NULL;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xE00F             B.N      ??app_util_printable_data_init_1
    285            }
    286          
    287            if (line_length > APP_UTIL_PRINTABLE_DATA_MAX_LENGTH) {
   \                     ??app_util_printable_data_init_0: (+1)
   \       0x1A   0x0020             MOVS     R0,R4
   \       0x1C   0xB2C0             UXTB     R0,R0
   \       0x1E   0x2841             CMP      R0,#+65
   \       0x20   0xDB01             BLT.N    ??app_util_printable_data_init_2
    288              return NULL;
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0xE009             B.N      ??app_util_printable_data_init_1
    289            }
    290          
    291            // Initialize context
    292            ctx->data = data;
   \                     ??app_util_printable_data_init_2: (+1)
   \       0x26   0x646E             STR      R6,[R5, #+68]
    293            ctx->data_left = data_length;
   \       0x28   0xF8A5 0x7048      STRH     R7,[R5, #+72]
    294            ctx->is_hex = is_hex;
   \       0x2C   0xF885 0x804A      STRB     R8,[R5, #+74]
    295            ctx->line_length = line_length;
   \       0x30   0xF885 0x404B      STRB     R4,[R5, #+75]
    296          
    297            // Get the first line
    298            return app_util_printable_data_next(ctx);
   \       0x34   0x0028             MOVS     R0,R5
   \       0x36   0x.... 0x....      BL       app_util_printable_data_next
   \                     ??app_util_printable_data_init_1: (+1)
   \       0x3A   0xE8BD 0x81F0      POP      {R4-R8,PC}
    299          }
    300          
    301          /* App util get next printable data */

   \                                 In section .text, align 2, keep-with-next
    302          char *app_util_printable_data_next(app_printable_data_ctx_t *const ctx)
    303          {
   \                     app_util_printable_data_next: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    304            int ret;
    305          
    306            if (!ctx->data || !ctx->data_left) {
   \        0x4   0x6C60             LDR      R0,[R4, #+68]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD003             BEQ.N    ??app_util_printable_data_next_0
   \        0xA   0xF8B4 0x0048      LDRH     R0,[R4, #+72]
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD101             BNE.N    ??app_util_printable_data_next_1
    307              // All done
    308              return NULL;
   \                     ??app_util_printable_data_next_0: (+1)
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0xE01F             B.N      ??app_util_printable_data_next_2
    309            }
    310          
    311            // Get the next line
    312            if (ctx->is_hex) {
   \                     ??app_util_printable_data_next_1: (+1)
   \       0x16   0xF894 0x004A      LDRB     R0,[R4, #+74]
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD009             BEQ.N    ??app_util_printable_data_next_3
    313              ret = app_util_printable_hex_line(ctx->line_buffer,
    314                                                ctx->data,
    315                                                ctx->data_left,
    316                                                ctx->line_length);
   \       0x1E   0xF894 0x304B      LDRB     R3,[R4, #+75]
   \       0x22   0xF8B4 0x2048      LDRH     R2,[R4, #+72]
   \       0x26   0x6C61             LDR      R1,[R4, #+68]
   \       0x28   0x0020             MOVS     R0,R4
   \       0x2A   0x.... 0x....      BL       app_util_printable_hex_line
   \       0x2E   0x0001             MOVS     R1,R0
   \       0x30   0xE008             B.N      ??app_util_printable_data_next_4
    317            } else {
    318              ret = app_util_printable_line(ctx->line_buffer,
    319                                            ctx->data,
    320                                            ctx->data_left,
    321                                            ctx->line_length);
   \                     ??app_util_printable_data_next_3: (+1)
   \       0x32   0xF894 0x304B      LDRB     R3,[R4, #+75]
   \       0x36   0xF8B4 0x2048      LDRH     R2,[R4, #+72]
   \       0x3A   0x6C61             LDR      R1,[R4, #+68]
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x.... 0x....      BL       app_util_printable_line
   \       0x42   0x0001             MOVS     R1,R0
    322            }
    323          
    324            // Prepare for the next line
    325            ctx->data += ret;
   \                     ??app_util_printable_data_next_4: (+1)
   \       0x44   0x6C60             LDR      R0,[R4, #+68]
   \       0x46   0x4408             ADD      R0,R0,R1
   \       0x48   0x6460             STR      R0,[R4, #+68]
    326            ctx->data_left -= ret;
   \       0x4A   0xF8B4 0x0048      LDRH     R0,[R4, #+72]
   \       0x4E   0x1A40             SUBS     R0,R0,R1
   \       0x50   0xF8A4 0x0048      STRH     R0,[R4, #+72]
    327          
    328            return ctx->line_buffer;
   \       0x54   0x0020             MOVS     R0,R4
   \                     ??app_util_printable_data_next_2: (+1)
   \       0x56   0xBD10             POP      {R4,PC}
    329          }
    330          
    331          // -----------------------------------------------------------------------------
    332          //                          Static Function Definitions
    333          // -----------------------------------------------------------------------------
    334          /* App util printable line */

   \                                 In section .text, align 2, keep-with-next
    335          static int app_util_printable_line(char *const line_buffer,
    336                                             const uint8_t *const data,
    337                                             const uint16_t data_length,
    338                                             uint8_t line_length)
    339          {
   \                     app_util_printable_line: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
    340            if (data_length < line_length) {
   \        0xC   0x0031             MOVS     R1,R6
   \        0xE   0x0038             MOVS     R0,R7
   \       0x10   0xB2C0             UXTB     R0,R0
   \       0x12   0xB289             UXTH     R1,R1
   \       0x14   0xB280             UXTH     R0,R0
   \       0x16   0x4281             CMP      R1,R0
   \       0x18   0xD201             BCS.N    ??app_util_printable_line_0
    341              line_length = (uint8_t)data_length;
   \       0x1A   0x0030             MOVS     R0,R6
   \       0x1C   0x0007             MOVS     R7,R0
    342            }
    343          
    344            memcpy(line_buffer, data, line_length);
   \                     ??app_util_printable_line_0: (+1)
   \       0x1E   0x46B8             MOV      R8,R7
   \       0x20   0xFA5F 0xF888      UXTB     R8,R8
   \       0x24   0x46A9             MOV      R9,R5
   \       0x26   0x46A2             MOV      R10,R4
   \       0x28   0x4642             MOV      R2,R8
   \       0x2A   0x4649             MOV      R1,R9
   \       0x2C   0x4650             MOV      R0,R10
   \       0x2E   0x.... 0x....      BL       __aeabi_memcpy
    345            line_buffer[line_length] = 0;
   \       0x32   0x2100             MOVS     R1,#+0
   \       0x34   0x0038             MOVS     R0,R7
   \       0x36   0xB2C0             UXTB     R0,R0
   \       0x38   0x5421             STRB     R1,[R4, R0]
    346          
    347            return line_length;
   \       0x3A   0xB2FF             UXTB     R7,R7
   \       0x3C   0x0038             MOVS     R0,R7
   \       0x3E   0xE8BD 0x87F0      POP      {R4-R10,PC}
    348          }
    349          
    350          /* App util printable hex line */

   \                                 In section .text, align 2, keep-with-next
    351          static int app_util_printable_hex_line(char *line_buffer,
    352                                                 const uint8_t *data,
    353                                                 const uint16_t data_length,
    354                                                 uint8_t line_length)
    355          {
   \                     app_util_printable_hex_line: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
    356            int data_left;
    357          
    358            // Hex value takes twice the space
    359            line_length /= 2;
   \        0xA   0xB2DB             UXTB     R3,R3
   \        0xC   0x2002             MOVS     R0,#+2
   \        0xE   0xFB93 0xF7F0      SDIV     R7,R3,R0
    360          
    361            if (data_length < line_length) {
   \       0x12   0x0031             MOVS     R1,R6
   \       0x14   0x0038             MOVS     R0,R7
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0xB289             UXTH     R1,R1
   \       0x1A   0xB280             UXTH     R0,R0
   \       0x1C   0x4281             CMP      R1,R0
   \       0x1E   0xD201             BCS.N    ??app_util_printable_hex_line_0
    362              line_length = (uint8_t)data_length;
   \       0x20   0x0030             MOVS     R0,R6
   \       0x22   0x0007             MOVS     R7,R0
    363            }
    364          
    365            data_left = line_length;
   \                     ??app_util_printable_hex_line_0: (+1)
   \       0x24   0x46B8             MOV      R8,R7
   \       0x26   0xFA5F 0xF888      UXTB     R8,R8
    366            while (data_left--) {
   \                     ??app_util_printable_hex_line_1: (+1)
   \       0x2A   0x4640             MOV      R0,R8
   \       0x2C   0xF1B0 0x0801      SUBS     R8,R0,#+1
   \       0x30   0x2800             CMP      R0,#+0
   \       0x32   0xD007             BEQ.N    ??app_util_printable_hex_line_2
    367              sprintf(line_buffer, "%02x", *data++);
   \       0x34   0x782A             LDRB     R2,[R5, #+0]
   \       0x36   0x....             LDR.N    R1,??DataTable3_7
   \       0x38   0x0020             MOVS     R0,R4
   \       0x3A   0x.... 0x....      BL       sprintf
   \       0x3E   0x1C6D             ADDS     R5,R5,#+1
    368              line_buffer += 2;
   \       0x40   0x1CA4             ADDS     R4,R4,#+2
   \       0x42   0xE7F2             B.N      ??app_util_printable_hex_line_1
    369            }
    370          
    371            return line_length;
   \                     ??app_util_printable_hex_line_2: (+1)
   \       0x44   0xB2FF             UXTB     R7,R7
   \       0x46   0x0038             MOVS     R0,R7
   \       0x48   0xE8BD 0x81F0      POP      {R4-R8,PC}
    372          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \        0x0   0x25 0x25          DC8      0x25, 0x25, 0x00, 0x00
   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \        0x0   0x6C 0x78          DC8      0x6C, 0x78, 0x00, 0x00
   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \        0x0   0x6C 0x64          DC8      0x6C, 0x64, 0x00, 0x00
   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \        0x0   0x6C 0x75          DC8      0x6C, 0x75, 0x00, 0x00
   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \        0x0   0x30 0x78          DC8      0x30, 0x78, 0x00, 0x00
   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \        0x0   0x29 0x00          DC8      ")",0x0,0x0    
   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x25 0x25          DC8 "%%0%u"
   \              0x30 0x25    
   \              0x75 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x25 0x25          DC8 "%%%u"
   \              0x25 0x75    
   \              0x00
   \        0x5                      DS8 3

   \                                 In section .rodata, align 4
   \        0x0   0x25 0x25          DC8 "%%"
   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \        0x0   0x6C 0x78          DC8 "lx"
   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \        0x0   0x6C 0x64          DC8 "ld"
   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \        0x0   0x6C 0x75          DC8 "lu"
   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x25 0x73          DC8 "%s ("
   \              0x20 0x28    
   \              0x00
   \        0x5                      DS8 3

   \                                 In section .rodata, align 4
   \        0x0   0x30 0x78          DC8 "0x"
   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 2
   \        0x0   0x29 0x00          DC8 ")"

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x25 0x30          DC8 "%02x:"
   \              0x32 0x78    
   \              0x3A 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x25 0x30          DC8 "%02x"
   \              0x32 0x78    
   \              0x00
   \        0x5                      DS8 3

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   app_util_get_enum_by_integer
      16   app_util_get_enum_by_string
        16   -> strcmp
      32   app_util_get_integer
        32   -> app_util_get_enum_by_string
        32   -> strstr
        32   -> strtol
        32   -> strtoul
      32   app_util_get_mac_address
        32   -> __aeabi_memset
        32   -> strtol
      16   app_util_get_mac_address_string
        16   -> sprintf
      56   app_util_get_string
        56   -> app_util_get_enum_by_integer
        56   -> sprintf
        56   -> strcat
      24   app_util_printable_data_init
        24   -> app_util_printable_data_next
       8   app_util_printable_data_next
         8   -> app_util_printable_hex_line
         8   -> app_util_printable_line
      24   app_util_printable_hex_line
        24   -> sprintf
      32   app_util_printable_line
        32   -> __aeabi_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       8  ?_0
       8  ?_1
       8  ?_10
       4  ?_2
       4  ?_3
       4  ?_4
       4  ?_5
       8  ?_6
       4  ?_7
       2  ?_8
       8  ?_9
      30  app_util_get_enum_by_integer
      40  app_util_get_enum_by_string
     118  app_util_get_integer
     124  app_util_get_mac_address
      46  app_util_get_mac_address_string
     230  app_util_get_string
      62  app_util_printable_data_init
      88  app_util_printable_data_next
      76  app_util_printable_hex_line
      66  app_util_printable_line

 
  62 bytes in section .rodata
 924 bytes in section .text
 
 924 bytes of CODE  memory
  62 bytes of CONST memory

Errors: none
Warnings: none
