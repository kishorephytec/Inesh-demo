###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         29/Mar/2025  15:52:59
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\os_dbg.c
#    Command line      =
#        -f "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\source_1437350445724322328.dir\os_dbg.o.rsp"
#        ("D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\os_dbg.c"
#        -D DEBUG_EFM=1 -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -lC "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\source_1437350445724322328.dir"
#        --diag_suppress Pa050 -o "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\source_1437350445724322328.dir"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse --cmse -e --fpu=VFPv5_sp --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\rail\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\wisun\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\.\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_project_info\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\Core\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\RTOS2\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\device_init\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emlib\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\iostream\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\preset\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\cpu\include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\ports\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\nvm3\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\peripheral\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_psa_driver\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\common\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ble\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ieee802154\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\wmbus\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\zwave\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\chip\efr32\efr32xg2x\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\sidewalk\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\rail_util_pti\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\segger\systemview\SEGGER\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\silicon_labs\silabs_core\memory_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\toolchain\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\system\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ns_list\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ping\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\udp_client\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\sleeptimer\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\plugin\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\socket\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\autogen\\" -On
#        --use_c++_inline) --dependencies=n "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\source_1437350445724322328.dir\os_dbg.o.iar_deps"
#    Locale            =  C
#    List file         =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\source_1437350445724322328.dir\os_dbg.lst
#    Object file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\source_1437350445724322328.dir\os_dbg.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\os_dbg.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Kernel - Debugger Constants
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * The licensor of this software is Silicon Laboratories Inc.  Your use of this
     10           * software is governed by the terms of Silicon Labs Master Software License
     11           * Agreement (MSLA) available at
     12           * www.silabs.com/about-us/legal/master-software-license-agreement.  This
     13           * software is distributed to you in Source Code format and is governed by the
     14           * sections of the MSLA applicable to Source Code.
     15           *
     16           ******************************************************************************/
     17          
     18          /********************************************************************************************************
     19           ********************************************************************************************************
     20           *                                       DEPENDENCIES & AVAIL CHECK(S)
     21           ********************************************************************************************************
     22           *******************************************************************************************************/
     23          
     24          #include  <rtos_description.h>
     25          
     26          #if (defined(RTOS_MODULE_KERNEL_AVAIL))
     27          
     28          /********************************************************************************************************
     29           ********************************************************************************************************
     30           *                                               INCLUDE FILES
     31           ********************************************************************************************************
     32           *******************************************************************************************************/
     33          
     34          #define  MICRIUM_SOURCE
     35          #include "../include/os.h"
     36          
     37          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     38          const CPU_CHAR *os_dbg__c = "$Id: $";
     39          #endif
     40          
     41          /********************************************************************************************************
     42           ********************************************************************************************************
     43           *                                                   DEFINES
     44           ********************************************************************************************************
     45           *******************************************************************************************************/
     46          
     47          /********************************************************************************************************
     48           *                                               VOLATILE
     49           *******************************************************************************************************/
     50          
     51          #if (OS_CFG_DBG_EN == DEF_ENABLED)
     52          #define  OS_VOLATILE  volatile
     53          #else
     54          #define  OS_VOLATILE
     55          #endif
     56          
     57          /********************************************************************************************************
     58           ********************************************************************************************************
     59           *                                           GLOBAL VARIABLES
     60           ********************************************************************************************************
     61           *******************************************************************************************************/
     62          
     63          /********************************************************************************************************
     64           *                                               DEBUG DATA
     65           *******************************************************************************************************/
     66          

   \                                 In section .bss, align 1
     67          CPU_INT08U OS_VOLATILE OSDbg_DbgEn = OS_CFG_DBG_EN;             // Debug constants are defined below
   \                     OSDbg_DbgEn:
   \        0x0                      DS8 1
     68          
     69          #if (OS_CFG_DBG_EN == DEF_ENABLED)
     70          CPU_INT08U OS_VOLATILE OSDbg_ArgChkEn = OS_ARG_CHK_EN;
     71          CPU_INT08U OS_VOLATILE OSDbg_AppHooksEn = OS_CFG_APP_HOOKS_EN;
     72          
     73          CPU_INT32U OS_VOLATILE OSDbg_EndiannessTest = 0x12345678LU;     // Variable to test CPU endianness
     74          
     75          CPU_INT08U OS_VOLATILE  OSDbg_FlagEn = OS_CFG_FLAG_EN;
     76          OS_FLAG_GRP OS_VOLATILE OSDbg_FlagGrp = { 0u };
     77          #if (OS_CFG_FLAG_EN == DEF_ENABLED)
     78          CPU_INT08U OS_VOLATILE OSDbg_FlagModeClrEn = OS_CFG_FLAG_MODE_CLR_EN;
     79          CPU_INT16U OS_VOLATILE OSDbg_FlagGrpSize = sizeof(OS_FLAG_GRP); // Size in Bytes of OS_FLAG_GRP
     80          CPU_INT16U OS_VOLATILE OSDbg_FlagWidth = sizeof(OS_FLAGS);      // Width (in bytes) of OS_FLAGS
     81          #else
     82          CPU_INT08U OS_VOLATILE OSDbg_FlagModeClrEn = 0u;
     83          CPU_INT16U OS_VOLATILE OSDbg_FlagGrpSize = 0u;
     84          CPU_INT16U OS_VOLATILE OSDbg_FlagWidth = 0u;
     85          #endif
     86          
     87          #if (OS_MSG_EN == DEF_ENABLED)
     88          CPU_INT08U OS_VOLATILE OSDbg_MsgEn = 1u;
     89          CPU_INT16U OS_VOLATILE OSDbg_MsgSize = sizeof(OS_MSG);          // OS_MSG size
     90          CPU_INT16U OS_VOLATILE OSDbg_MsgPoolSize = sizeof(OS_MSG_POOL);
     91          CPU_INT16U OS_VOLATILE OSDbg_MsgQSize = sizeof(OS_MSG_Q);
     92          #else
     93          CPU_INT08U OS_VOLATILE OSDbg_MsgEn = 0u;
     94          CPU_INT16U OS_VOLATILE OSDbg_MsgSize = 0u;
     95          CPU_INT16U OS_VOLATILE OSDbg_MsgPoolSize = 0u;
     96          CPU_INT16U OS_VOLATILE OSDbg_MsgQSize = 0u;
     97          #endif
     98          
     99          OS_MUTEX OS_VOLATILE   OSDbg_Mutex = { 0u };
    100          CPU_INT08U OS_VOLATILE OSDbg_MutexEn = OS_CFG_MUTEX_EN;
    101          #if (OS_CFG_MUTEX_EN == DEF_ENABLED)
    102          CPU_INT16U OS_VOLATILE OSDbg_MutexSize = sizeof(OS_MUTEX);      // Size in bytes of OS_MUTEX
    103          #else
    104          CPU_INT16U OS_VOLATILE OSDbg_MutexSize = 0u;
    105          #endif
    106          
    107          CPU_INT16U OS_VOLATILE OSDbg_PendListSize = sizeof(OS_PEND_LIST);
    108          CPU_INT16U OS_VOLATILE OSDbg_PendObjSize = sizeof(OS_PEND_OBJ);
    109          
    110          CPU_INT16U OS_VOLATILE OSDbg_PrioMax = OS_CFG_PRIO_MAX;         // Maximum number of priorities
    111          CPU_INT16U OS_VOLATILE OSDbg_PrioTblSize = sizeof(OSPrioTbl);
    112          
    113          CPU_INT16U OS_VOLATILE OSDbg_PtrSize = sizeof(void *);          // Size in Bytes of a pointer
    114          
    115          OS_Q OS_VOLATILE       OSDbg_Q = { 0u };
    116          CPU_INT08U OS_VOLATILE OSDbg_QEn = OS_CFG_Q_EN;
    117          #if (OS_CFG_Q_EN == DEF_ENABLED)
    118          CPU_INT16U OS_VOLATILE OSDbg_QSize = sizeof(OS_Q);              // Size in bytes of OS_Q structure
    119          #else
    120          CPU_INT16U OS_VOLATILE OSDbg_QSize = 0u;
    121          #endif
    122          
    123          CPU_INT08U OS_VOLATILE OSDbg_SchedRoundRobinEn = OS_CFG_SCHED_ROUND_ROBIN_EN;
    124          
    125          OS_SEM OS_VOLATILE     OSDbg_Sem = { 0u };
    126          CPU_INT08U OS_VOLATILE OSDbg_SemEn = OS_CFG_SEM_EN;
    127          #if (OS_CFG_SEM_EN == DEF_ENABLED)
    128          CPU_INT16U OS_VOLATILE OSDbg_SemSize = sizeof(OS_SEM);          // Size in bytes of OS_SEM
    129          #else
    130          CPU_INT16U OS_VOLATILE OSDbg_SemSize = 0u;
    131          #endif
    132          
    133          CPU_INT16U OS_VOLATILE OSDbg_RdyList = sizeof(OS_RDY_LIST);
    134          CPU_INT32U OS_VOLATILE OSDbg_RdyListSize = sizeof(OSRdyList);   // Number of bytes in the ready table
    135          
    136          CPU_INT08U OS_VOLATILE OSDbg_StkWidth = sizeof(CPU_STK);
    137          
    138          CPU_INT08U OS_VOLATILE OSDbg_StatTaskEn = OS_CFG_STAT_TASK_EN;
    139          CPU_INT08U OS_VOLATILE OSDbg_StatTaskStkChkEn = OS_CFG_STAT_TASK_STK_CHK_EN;
    140          
    141          CPU_INT08U OS_VOLATILE OSDbg_TaskChangePrioEn = 1u;             // DEPRECATED, always enabled.
    142          CPU_INT08U OS_VOLATILE OSDbg_TaskDelEn = OS_CFG_TASK_DEL_EN;
    143          CPU_INT08U OS_VOLATILE OSDbg_TaskQEn = OS_CFG_TASK_Q_EN;
    144          CPU_INT08U OS_VOLATILE OSDbg_TaskProfileEn = OS_CFG_TASK_PROFILE_EN;
    145          CPU_INT16U OS_VOLATILE OSDbg_TaskRegTblSize = OS_CFG_TASK_REG_TBL_SIZE;
    146          CPU_INT08U OS_VOLATILE OSDbg_TaskSuspendEn = OS_CFG_TASK_SUSPEND_EN;
    147          
    148          CPU_INT16U OS_VOLATILE OSDbg_TCBSize = sizeof(OS_TCB);          // Size in Bytes of OS_TCB
    149          
    150          CPU_INT16U OS_VOLATILE OSDbg_TickListSize = sizeof(OS_TICK_LIST);
    151          
    152          #if defined(OS_CFG_TLS_TBL_SIZE) && (OS_CFG_TLS_TBL_SIZE > 0u)
    153          CPU_INT16U OS_VOLATILE OSDbg_TLS_TblSize = OS_CFG_TLS_TBL_SIZE * sizeof(OS_TLS);
    154          #else
    155          CPU_INT16U OS_VOLATILE OSDbg_TLS_TblSize = 0u;
    156          #endif
    157          
    158          #if (OS_CFG_TMR_EN == DEF_ENABLED)
    159          OS_TMR OS_VOLATILE OSDbg_Tmr = { 0u };
    160          #endif
    161          
    162          CPU_INT08U OS_VOLATILE OSDbg_TmrEn = OS_CFG_TMR_EN;
    163          #if (OS_CFG_TMR_EN == DEF_ENABLED)
    164          CPU_INT16U OS_VOLATILE OSDbg_TmrSize = sizeof(OS_TMR);
    165          #else
    166          CPU_INT16U OS_VOLATILE OSDbg_TmrSize = 0u;
    167          #endif
    168          
    169          CPU_INT16U OS_VOLATILE OSDbg_VersionNbr = RTOS_VERSION;
    170          
    171          /********************************************************************************************************
    172           *                           TOTAL RAM USED BY KERNEL, EXCLUDING CONFIGURATION
    173           *******************************************************************************************************/
    174          
    175          CPU_INT32U OS_VOLATILE const OSDbg_DataSize = 0u
    176          
    177          #if (OS_CFG_APP_HOOKS_EN == DEF_ENABLED)
    178          #if (OS_CFG_TASK_STK_REDZONE_EN == DEF_ENABLED)
    179                                                        + sizeof(OS_AppRedzoneHitHookPtr)
    180          #endif
    181                                                        + sizeof(OS_AppTaskCreateHookPtr)
    182                                                        + sizeof(OS_AppTaskDelHookPtr)
    183                                                        + sizeof(OS_AppTaskReturnHookPtr)
    184          
    185                                                        + sizeof(OS_AppStatTaskHookPtr)
    186                                                        + sizeof(OS_AppTaskSwHookPtr)
    187          #endif
    188          
    189                                                        + sizeof(OSRunning)
    190                                                        + sizeof(OSInitialized)
    191          
    192          #ifdef OS_SAFETY_CRITICAL_IEC61508
    193                                                        + sizeof(OSSafetyCriticalStartFlag)
    194          #endif
    195          
    196          #if (OS_CFG_FLAG_EN == DEF_ENABLED)
    197          #if (OS_CFG_DBG_EN == DEF_ENABLED)
    198                                                        + sizeof(OSFlagDbgListPtr)
    199                                                        + sizeof(OSFlagQty)
    200          #endif
    201          #endif
    202          
    203          #if (OS_CFG_MON_EN == DEF_ENABLED)
    204          #if (OS_CFG_DBG_EN == DEF_ENABLED)
    205                                                        + sizeof(OSMonDbgListPtr)
    206                                                        + sizeof(OSMonQty)
    207          #endif
    208          #endif
    209          
    210          #if (OS_MSG_EN == DEF_ENABLED)
    211                                                        + sizeof(OSMsgPool)
    212          #endif
    213          
    214          #if (OS_CFG_MUTEX_EN == DEF_ENABLED)
    215          #if (OS_CFG_DBG_EN == DEF_ENABLED)
    216                                                        + sizeof(OSMutexDbgListPtr)
    217                                                        + sizeof(OSMutexQty)
    218          #endif
    219          #endif
    220          
    221                                                        + sizeof(OSPrioCur)
    222                                                        + sizeof(OSPrioHighRdy)
    223                                                        + sizeof(OSPrioTbl)
    224          
    225          #if (OS_CFG_Q_EN == DEF_ENABLED)
    226          #if (OS_CFG_DBG_EN == DEF_ENABLED)
    227                                                        + sizeof(OSQDbgListPtr)
    228                                                        + sizeof(OSQQty)
    229          #endif
    230          #endif
    231          
    232                                                        + sizeof(OSRdyList)
    233          
    234                                                        + sizeof(OSSchedLockNestingCtr)
    235          
    236          #if (OS_CFG_SCHED_LOCK_TIME_MEAS_EN == DEF_ENABLED)
    237                                                        + sizeof(OSSchedLockTimeBegin)
    238                                                        + sizeof(OSSchedLockTimeMax)
    239                                                        + sizeof(OSSchedLockTimeMaxCur)
    240          #endif
    241          
    242          #if (OS_CFG_SCHED_ROUND_ROBIN_EN == DEF_ENABLED)
    243                                                        + sizeof(OSSchedRoundRobinDfltTimeQuanta)
    244                                                        + sizeof(OSSchedRoundRobinEn)
    245          #endif
    246          
    247          #if (OS_CFG_SEM_EN == DEF_ENABLED)
    248          #if (OS_CFG_DBG_EN == DEF_ENABLED)
    249                                                        + sizeof(OSSemDbgListPtr)
    250          #endif
    251                                                        + sizeof(OSSemQty)
    252          #endif
    253          #if ((OS_CFG_TASK_PROFILE_EN == DEF_ENABLED) || (OS_CFG_DBG_EN == DEF_ENABLED))
    254                                                        + sizeof(OSTaskCtxSwCtr)
    255          #if (OS_CFG_DBG_EN == DEF_ENABLED)
    256                                                        + sizeof(OSTaskDbgListPtr)
    257          #endif
    258          #endif
    259          
    260                                                        + sizeof(OSTaskQty)
    261          
    262          #if (OS_CFG_STAT_TASK_EN == DEF_ENABLED)
    263                                                        + sizeof(OSStatResetFlag)
    264                                                        + sizeof(OSStatTaskCPUUsage)
    265                                                        + sizeof(OSStatTaskCPUUsageMax)
    266                                                        + sizeof(OSStatTaskRdy)
    267                                                        + sizeof(OSStatTaskTCB)
    268          #if (OS_CFG_TS_EN == DEF_ENABLED)
    269                                                        + sizeof(OSStatTaskTimeMax)
    270          #endif
    271          #endif
    272          
    273          #if (OS_CFG_TMR_EN == DEF_ENABLED)
    274          #if (OS_CFG_DBG_EN == DEF_ENABLED)
    275                                                        + sizeof(OSTmrDbgListPtr)
    276                                                        + sizeof(OSTmrListEntries)
    277          #endif
    278                                                        + sizeof(OSTmrListPtr)
    279          #if (OS_CFG_MUTEX_EN == DEF_ENABLED)
    280                                                        + sizeof(OSTmrMutex)
    281          #endif
    282          #if (OS_CFG_DBG_EN == DEF_ENABLED)
    283                                                        + sizeof(OSTmrQty)
    284          #endif
    285                                                        + sizeof(OSTmrTaskTCB)
    286          #if (OS_CFG_TS_EN == DEF_ENABLED)
    287                                                        + sizeof(OSTmrTaskTimeMax)
    288          #endif
    289                                                        + sizeof(OSTmrTickCtr)
    290                                                        + sizeof(OSTmrUpdateCnt)
    291                                                        + sizeof(OSTmrUpdateCtr)
    292          #endif
    293          
    294          #if (OS_CFG_TASK_REG_TBL_SIZE > 0u)
    295                                                        + sizeof(OSTaskRegNextAvailID)
    296          #endif
    297          
    298                                                        + sizeof(OSTCBCurPtr)
    299                                                        + sizeof(OSTCBHighRdyPtr);
    300          
    301          /********************************************************************************************************
    302           ********************************************************************************************************
    303           *                                           INTERNAL FUNCTIONS
    304           ********************************************************************************************************
    305           *******************************************************************************************************/
    306          
    307          /****************************************************************************************************//**
    308           *                                               OS_Dbg_Init()
    309           *
    310           * @brief    This function is used to make sure that debug variables that are unused in the application
    311           *           are not optimized away. This function might not be necessary for all compilers. In this
    312           *           case, you should simply DELETE the code in this function while still leaving the
    313           *           declaration of the function itself.
    314           *
    315           * @note     (1) This code doesn't do anything, it simply prevents the compiler from optimizing out the
    316           *               'const' variables which are declared in this file.
    317           *
    318           * @note     (2) You may decide to 'compile out' the code (by using #if 0/#endif) INSIDE the function if
    319           *               your compiler DOES NOT optimize out the 'const' variables above.
    320           *******************************************************************************************************/
    321          void OS_Dbg_Init(void)
    322          {
    323            CPU_INT08U OS_VOLATILE temp08;
    324            CPU_INT08U OS_VOLATILE temp16;
    325            CPU_INT08U OS_VOLATILE temp32;
    326          
    327            temp08 = (CPU_INT08U)OSDbg_DbgEn;
    328          
    329            temp32 = (CPU_INT32U)OSDbg_DataSize;
    330          
    331            temp08 = (CPU_INT08U)OSDbg_ArgChkEn;
    332            temp08 = (CPU_INT08U)OSDbg_AppHooksEn;
    333          
    334            temp32 = (CPU_INT32U)OSDbg_EndiannessTest;
    335          
    336            temp32 = (CPU_INT32U)OSDbg_FlagGrp.Flags;
    337            temp08 = (CPU_INT08U)OSDbg_FlagEn;
    338          #if (OS_CFG_FLAG_EN == DEF_ENABLED)
    339            temp08 = (CPU_INT08U)OSDbg_FlagModeClrEn;
    340            temp16 = (CPU_INT16U)OSDbg_FlagGrpSize;
    341            temp16 = (CPU_INT16U)OSDbg_FlagWidth;
    342          #endif
    343          
    344            temp08 = (CPU_INT08U)OSDbg_MsgEn;
    345          #if (OS_MSG_EN == DEF_ENABLED)
    346            temp16 = (CPU_INT16U)OSDbg_MsgSize;
    347            temp16 = (CPU_INT16U)OSDbg_MsgPoolSize;
    348            temp16 = (CPU_INT16U)OSDbg_MsgQSize;
    349          #endif
    350          
    351            temp32 = (CPU_INT32U)OSDbg_Mutex.OwnerNestingCtr;
    352            temp08 = (CPU_INT08U)OSDbg_MutexEn;
    353          #if (OS_CFG_MUTEX_EN == DEF_ENABLED)
    354            temp16 = (CPU_INT16U)OSDbg_MutexSize;
    355          #endif
    356          
    357            temp16 = (CPU_INT16U)OSDbg_PendListSize;
    358            temp16 = (CPU_INT16U)OSDbg_PendObjSize;
    359          
    360            temp16 = (CPU_INT16U)OSDbg_PrioMax;
    361            temp16 = (CPU_INT16U)OSDbg_PrioTblSize;
    362          
    363            temp16 = (CPU_INT16U)OSDbg_PtrSize;
    364          
    365            temp32 = (CPU_INT32U)OSDbg_Q.MsgQ.NbrEntries;
    366            temp08 = (CPU_INT08U)OSDbg_QEn;
    367          #if (OS_CFG_Q_EN == DEF_ENABLED)
    368            temp16 = (CPU_INT16U)OSDbg_QSize;
    369          #endif
    370          
    371            temp16 = (CPU_INT16U)OSDbg_SchedRoundRobinEn;
    372          
    373            temp32 = (CPU_INT32U)OSDbg_Sem.Ctr;
    374            temp08 = (CPU_INT08U)OSDbg_SemEn;
    375          #if (OS_CFG_SEM_EN == DEF_ENABLED)
    376            temp16 = (CPU_INT16U)OSDbg_SemSize;
    377          #endif
    378          
    379            temp16 = (CPU_INT16U)OSDbg_RdyList;
    380            temp32 = (CPU_INT32U)OSDbg_RdyListSize;
    381          
    382            temp16 = (CPU_INT16U)OSDbg_StkWidth;
    383          
    384            temp08 = (CPU_INT08U)OSDbg_StatTaskEn;
    385            temp08 = (CPU_INT08U)OSDbg_StatTaskStkChkEn;
    386          
    387            temp08 = (CPU_INT08U)OSDbg_TaskChangePrioEn;
    388            temp08 = (CPU_INT08U)OSDbg_TaskDelEn;
    389            temp08 = (CPU_INT08U)OSDbg_TaskQEn;
    390            temp08 = (CPU_INT08U)OSDbg_TaskProfileEn;
    391            temp16 = (CPU_INT16U)OSDbg_TaskRegTblSize;
    392            temp08 = (CPU_INT08U)OSDbg_TaskSuspendEn;
    393          
    394            temp16 = (CPU_INT16U)OSDbg_TCBSize;
    395          
    396            temp16 = (CPU_INT16U)OSDbg_TickListSize;
    397          
    398            temp08 = (CPU_INT08U)OSDbg_TmrEn;
    399            temp16 = (CPU_INT16U)OSDbg_TmrSize;
    400          #if (OS_CFG_TMR_EN == DEF_ENABLED)
    401            temp32 = (CPU_INT32U)OSDbg_Tmr.Opt;
    402          #endif
    403          
    404            temp16 = (CPU_INT16U)OSDbg_VersionNbr;
    405          
    406            PP_UNUSED_PARAM(temp08);                                      // Prevent compiler warning for not using 'temp'
    407            PP_UNUSED_PARAM(temp16);
    408            PP_UNUSED_PARAM(temp32);
    409          }
    410          #endif
    411          
    412          /********************************************************************************************************
    413           ********************************************************************************************************
    414           *                                   DEPENDENCIES & AVAIL CHECK(S) END
    415           ********************************************************************************************************
    416           *******************************************************************************************************/
    417          
    418          #endif // (defined(RTOS_MODULE_KERNEL_AVAIL))


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       1  OSDbg_DbgEn

 
 1 byte in section .bss
 
 1 byte of DATA memory

Errors: none
Warnings: none
