###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         29/Mar/2025  15:53:02
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\os_msg.c
#    Command line      =
#        -f "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\source_1437350445724322328.dir\os_msg.o.rsp"
#        ("D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\os_msg.c"
#        -D DEBUG_EFM=1 -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -lC "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\source_1437350445724322328.dir"
#        --diag_suppress Pa050 -o "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\source_1437350445724322328.dir"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse --cmse -e --fpu=VFPv5_sp --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\rail\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\wisun\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\.\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_project_info\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\Core\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\RTOS2\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\device_init\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emlib\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\iostream\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\preset\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\cpu\include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\ports\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\nvm3\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\peripheral\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_psa_driver\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\common\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ble\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ieee802154\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\wmbus\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\zwave\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\chip\efr32\efr32xg2x\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\sidewalk\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\rail_util_pti\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\segger\systemview\SEGGER\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\silicon_labs\silabs_core\memory_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\toolchain\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\system\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ns_list\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ping\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\udp_client\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\sleeptimer\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\plugin\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\socket\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\autogen\\" -On
#        --use_c++_inline) --dependencies=n "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\source_1437350445724322328.dir\os_msg.o.iar_deps"
#    Locale            =  C
#    List file         =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\source_1437350445724322328.dir\os_msg.lst
#    Object file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\source_1437350445724322328.dir\os_msg.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\os_msg.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Kernel - Message Handling Services
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * The licensor of this software is Silicon Laboratories Inc.  Your use of this
     10           * software is governed by the terms of Silicon Labs Master Software License
     11           * Agreement (MSLA) available at
     12           * www.silabs.com/about-us/legal/master-software-license-agreement.  This
     13           * software is distributed to you in Source Code format and is governed by the
     14           * sections of the MSLA applicable to Source Code.
     15           *
     16           ******************************************************************************/
     17          
     18          /********************************************************************************************************
     19           ********************************************************************************************************
     20           *                                       DEPENDENCIES & AVAIL CHECK(S)
     21           ********************************************************************************************************
     22           *******************************************************************************************************/
     23          
     24          #include  <rtos_description.h>
     25          
     26          #if (defined(RTOS_MODULE_KERNEL_AVAIL))
     27          
     28          /********************************************************************************************************
     29           ********************************************************************************************************
     30           *                                               INCLUDE FILES
     31           ********************************************************************************************************
     32           *******************************************************************************************************/
     33          
     34          #define  MICRIUM_SOURCE
     35          #include "../include/os.h"
     36          #include "os_priv.h"
     37          
     38          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     39          const CPU_CHAR *os_msg__c = "$Id: $";
     40          #endif
     41          
     42          /********************************************************************************************************
     43           ********************************************************************************************************
     44           *                                           INTERNAL FUNCTIONS
     45           ********************************************************************************************************
     46           *******************************************************************************************************/
     47          
     48          #if (OS_MSG_EN == DEF_ENABLED)
     49          /****************************************************************************************************//**
     50           *                                               OS_MsgPoolInit()
     51           *
     52           * @brief    This function is called by OSInit() to initialize the free list of OS_MSGs.
     53           *
     54           * @param    p_err   Pointer to variable that will receive the return error code from this function :
     55           *                       - RTOS_ERR_NONE
     56           *
     57           * @note     (1) This function is INTERNAL to the Kernel and your application MUST NOT call it.
     58           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     59          void OS_MsgPoolInit(RTOS_ERR *p_err)
     60          {
   \                     OS_MsgPoolInit: (+1)
   \        0x0   0xB4F0             PUSH     {R4-R7}
     61            OS_MSG     *p_msg1;
     62            OS_MSG     *p_msg2;
     63            OS_MSG_QTY i;
     64            OS_MSG_QTY loops;
     65          
     66            p_msg1 = OSCfg_MsgPoolBasePtr;
   \        0x2   0x....             LDR.N    R1,??DataTable3
   \        0x4   0x680A             LDR      R2,[R1, #+0]
     67            p_msg2 = OSCfg_MsgPoolBasePtr;
   \        0x6   0x680B             LDR      R3,[R1, #+0]
     68            p_msg2++;
   \        0x8   0x330C             ADDS     R3,R3,#+12
     69            loops = OSCfg_MsgPoolSize - 1u;
   \        0xA   0x....             LDR.N    R4,??DataTable3_1
   \        0xC   0x8825             LDRH     R5,[R4, #+0]
   \        0xE   0x1E6E             SUBS     R6,R5,#+1
     70            for (i = 0u; i < loops; i++) {                                // Init. list of free OS_MSGs
   \       0x10   0x2500             MOVS     R5,#+0
   \                     ??OS_MsgPoolInit_0: (+1)
   \       0x12   0x46AC             MOV      R12,R5
   \       0x14   0x0037             MOVS     R7,R6
   \       0x16   0xFA1F 0xFC8C      UXTH     R12,R12
   \       0x1A   0xB2BF             UXTH     R7,R7
   \       0x1C   0x45BC             CMP      R12,R7
   \       0x1E   0xD208             BCS.N    ??OS_MsgPoolInit_1
     71              p_msg1->NextPtr = p_msg2;
   \       0x20   0x6013             STR      R3,[R2, #+0]
     72              p_msg1->MsgPtr = DEF_NULL;
   \       0x22   0x2700             MOVS     R7,#+0
   \       0x24   0x6057             STR      R7,[R2, #+4]
     73              p_msg1->MsgSize = 0u;
   \       0x26   0x2700             MOVS     R7,#+0
   \       0x28   0x8117             STRH     R7,[R2, #+8]
     74          #if (OS_CFG_TS_EN == DEF_ENABLED)
     75              p_msg1->MsgTS = 0u;
     76          #endif
     77              p_msg1++;
   \       0x2A   0x320C             ADDS     R2,R2,#+12
     78              p_msg2++;
   \       0x2C   0x330C             ADDS     R3,R3,#+12
     79            }
   \       0x2E   0x1C6D             ADDS     R5,R5,#+1
   \       0x30   0xE7EF             B.N      ??OS_MsgPoolInit_0
     80            p_msg1->NextPtr = DEF_NULL;                                   // Last OS_MSG
   \                     ??OS_MsgPoolInit_1: (+1)
   \       0x32   0x2700             MOVS     R7,#+0
   \       0x34   0x6017             STR      R7,[R2, #+0]
     81            p_msg1->MsgPtr = DEF_NULL;
   \       0x36   0x2700             MOVS     R7,#+0
   \       0x38   0x6057             STR      R7,[R2, #+4]
     82            p_msg1->MsgSize = 0u;
   \       0x3A   0x2700             MOVS     R7,#+0
   \       0x3C   0x8117             STRH     R7,[R2, #+8]
     83          #if (OS_CFG_TS_EN == DEF_ENABLED)
     84            p_msg1->MsgTS = 0u;
     85          #endif
     86          
     87            OSMsgPool.NextPtr = OSCfg_MsgPoolBasePtr;
   \       0x3E   0x....             LDR.N    R7,??DataTable3_2
   \       0x40   0x6809             LDR      R1,[R1, #+0]
   \       0x42   0x6039             STR      R1,[R7, #+0]
     88            OSMsgPool.NbrFree = OSCfg_MsgPoolSize;
   \       0x44   0x8821             LDRH     R1,[R4, #+0]
   \       0x46   0x80B9             STRH     R1,[R7, #+4]
     89            OSMsgPool.NbrUsed = 0u;
   \       0x48   0x2100             MOVS     R1,#+0
   \       0x4A   0x80F9             STRH     R1,[R7, #+6]
     90          #if (OS_CFG_DBG_EN == DEF_ENABLED)
     91            OSMsgPool.NbrUsedMax = 0u;
     92          #endif
     93            RTOS_ERR_SET(*p_err, RTOS_ERR_NONE);
   \       0x4C   0x2100             MOVS     R1,#+0
   \       0x4E   0x7001             STRB     R1,[R0, #+0]
   \       0x50   0x....             LDR.N    R1,??DataTable3_3
   \       0x52   0x6041             STR      R1,[R0, #+4]
   \       0x54   0x215D             MOVS     R1,#+93
   \       0x56   0x6081             STR      R1,[R0, #+8]
   \       0x58   0x....             LDR.N    R1,??DataTable3_4
   \       0x5A   0x60C1             STR      R1,[R0, #+12]
     94          }
   \       0x5C   0xBCF0             POP      {R4-R7}
   \       0x5E   0x4770             BX       LR
     95          
     96          /****************************************************************************************************//**
     97           *                                               OS_MsgQFreeAll()
     98           *
     99           * @brief    This function returns all the messages in a message queue to the free list.
    100           *
    101           * @param    p_msg_q     Pointer to the OS_MSG_Q structure containing messages to free.
    102           *
    103           * @return   The number of OS_MSGs returned to the free list.
    104           *
    105           * @note     (1) This function is INTERNAL to the Kernel and your application MUST NOT call it.
    106           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    107          OS_MSG_QTY OS_MsgQFreeAll(OS_MSG_Q *p_msg_q)
    108          {
   \                     OS_MsgQFreeAll: (+1)
   \        0x0   0xB430             PUSH     {R4,R5}
   \        0x2   0x0002             MOVS     R2,R0
    109            OS_MSG     *p_msg;
    110            OS_MSG_QTY qty;
    111          
    112            qty = p_msg_q->NbrEntries;                                    // Get the number of OS_MSGs being freed
   \        0x4   0x8950             LDRH     R0,[R2, #+10]
    113            if (p_msg_q->NbrEntries > 0u) {
   \        0x6   0x8951             LDRH     R1,[R2, #+10]
   \        0x8   0x2900             CMP      R1,#+0
   \        0xA   0xD014             BEQ.N    ??OS_MsgQFreeAll_0
    114              p_msg = p_msg_q->InPtr;                                     // Point to end of message chain
   \        0xC   0x6811             LDR      R1,[R2, #+0]
   \        0xE   0x000B             MOVS     R3,R1
    115              p_msg->NextPtr = OSMsgPool.NextPtr;
   \       0x10   0x....             LDR.N    R4,??DataTable3_2
   \       0x12   0x6821             LDR      R1,[R4, #+0]
   \       0x14   0x6019             STR      R1,[R3, #+0]
    116              OSMsgPool.NextPtr = p_msg_q->OutPtr;                        // Point to beginning of message chain
   \       0x16   0x6851             LDR      R1,[R2, #+4]
   \       0x18   0x6021             STR      R1,[R4, #+0]
    117              OSMsgPool.NbrUsed -= p_msg_q->NbrEntries;                   // Update statistics for free list of messages
   \       0x1A   0x88E5             LDRH     R5,[R4, #+6]
   \       0x1C   0x8951             LDRH     R1,[R2, #+10]
   \       0x1E   0x1A6D             SUBS     R5,R5,R1
   \       0x20   0x80E5             STRH     R5,[R4, #+6]
    118              OSMsgPool.NbrFree += p_msg_q->NbrEntries;
   \       0x22   0x88A5             LDRH     R5,[R4, #+4]
   \       0x24   0x8951             LDRH     R1,[R2, #+10]
   \       0x26   0x194D             ADDS     R5,R1,R5
   \       0x28   0x80A5             STRH     R5,[R4, #+4]
    119              p_msg_q->NbrEntries = 0u;                                   // Flush the message queue
   \       0x2A   0x2100             MOVS     R1,#+0
   \       0x2C   0x8151             STRH     R1,[R2, #+10]
    120          #if (OS_CFG_DBG_EN == DEF_ENABLED)
    121              p_msg_q->NbrEntriesMax = 0u;
    122          #endif
    123              p_msg_q->InPtr = DEF_NULL;
   \       0x2E   0x2100             MOVS     R1,#+0
   \       0x30   0x6011             STR      R1,[R2, #+0]
    124              p_msg_q->OutPtr = DEF_NULL;
   \       0x32   0x2100             MOVS     R1,#+0
   \       0x34   0x6051             STR      R1,[R2, #+4]
    125            }
    126            return (qty);
   \                     ??OS_MsgQFreeAll_0: (+1)
   \       0x36   0xB280             UXTH     R0,R0
   \       0x38   0xBC30             POP      {R4,R5}
   \       0x3A   0x4770             BX       LR
    127          }
    128          
    129          /****************************************************************************************************//**
    130           *                                               OS_MsgQInit()
    131           *
    132           * @brief    This function is called to initialize a message queue.
    133           *
    134           * @param    p_msg_q     Pointer to the message queue to initialize.
    135           *
    136           * @param    size        The maximum number of entries that the message queue can have.
    137           *
    138           * @note     (1) This function is INTERNAL to the Kernel and your application MUST NOT call it.
    139           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    140          void OS_MsgQInit(OS_MSG_Q   *p_msg_q,
    141                           OS_MSG_QTY size)
    142          {
   \                     OS_MsgQInit: (+1)
   \        0x0   0xB410             PUSH     {R4}
    143            *p_msg_q = (OS_MSG_Q){ 0 };
   \        0x2   0x2400             MOVS     R4,#+0
   \        0x4   0x2200             MOVS     R2,#+0
   \        0x6   0x2300             MOVS     R3,#+0
   \        0x8   0xE880 0x001C      STM      R0,{R2-R4}
    144            p_msg_q->NbrEntriesSize = size;
   \        0xC   0x8101             STRH     R1,[R0, #+8]
    145          }
   \        0xE   0xBC10             POP      {R4}
   \       0x10   0x4770             BX       LR
    146          
    147          /****************************************************************************************************//**
    148           *                                               OS_MsgQGet()
    149           *
    150           * @brief    This function retrieves a message from a message queue.
    151           *
    152           * @param    p_msg_q     Pointer to the message queue where we want to extract the message from.
    153           *
    154           * @param    p_msg_size  Pointer to where the size (in bytes) of the message will be placed.
    155           *
    156           * @param    p_ts        Pointer to where the timestamp will be placed.
    157           *
    158           * @param    p_err       Pointer to variable that will receive the return error code from this function :
    159           *                           - RTOS_ERR_NONE
    160           *                           - RTOS_ERR_NOT_FOUND
    161           *
    162           * @return   The message (a pointer).
    163           *
    164           * @note     (1) This function is INTERNAL to the Kernel and your application MUST NOT call it.
    165           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    166          void *OS_MsgQGet(OS_MSG_Q    *p_msg_q,
    167                           OS_MSG_SIZE *p_msg_size,
    168                           CPU_TS      *p_ts,
    169                           RTOS_ERR    *p_err)
    170          {
   \                     OS_MsgQGet: (+1)
   \        0x0   0xB4F0             PUSH     {R4-R7}
   \        0x2   0x0005             MOVS     R5,R0
    171            OS_MSG *p_msg;
    172            void   *p_void;
    173          
    174          #if (OS_CFG_TS_EN == DEF_DISABLED)
    175            (void)p_ts;                                                   // Prevent compiler warning for not using 'ts'
    176          #endif
    177          
    178            if (p_msg_q->NbrEntries == 0u) {                              // Is the queue empty?
   \        0x4   0x8968             LDRH     R0,[R5, #+10]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD10B             BNE.N    ??OS_MsgQGet_0
    179              *p_msg_size = 0u;                                           // Yes
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0x8008             STRH     R0,[R1, #+0]
    180          #if (OS_CFG_TS_EN == DEF_ENABLED)
    181              if (p_ts != DEF_NULL) {
    182                *p_ts = 0u;
    183              }
    184          #endif
    185              RTOS_ERR_SET(*p_err, RTOS_ERR_NOT_FOUND);
   \        0xE   0x200F             MOVS     R0,#+15
   \       0x10   0x7018             STRB     R0,[R3, #+0]
   \       0x12   0x....             LDR.N    R0,??DataTable3_3
   \       0x14   0x6058             STR      R0,[R3, #+4]
   \       0x16   0x20B9             MOVS     R0,#+185
   \       0x18   0x6098             STR      R0,[R3, #+8]
   \       0x1A   0x....             LDR.N    R0,??DataTable3_5
   \       0x1C   0x60D8             STR      R0,[R3, #+12]
    186              return (DEF_NULL);
   \       0x1E   0x2000             MOVS     R0,#+0
   \       0x20   0xE022             B.N      ??OS_MsgQGet_1
    187            }
    188          
    189            p_msg = p_msg_q->OutPtr;                                      // No, get the next message to extract from the queue
   \                     ??OS_MsgQGet_0: (+1)
   \       0x22   0x686E             LDR      R6,[R5, #+4]
    190            p_void = p_msg->MsgPtr;
   \       0x24   0x6870             LDR      R0,[R6, #+4]
    191            *p_msg_size = p_msg->MsgSize;
   \       0x26   0x8934             LDRH     R4,[R6, #+8]
   \       0x28   0x800C             STRH     R4,[R1, #+0]
    192          #if (OS_CFG_TS_EN == DEF_ENABLED)
    193            if (p_ts != DEF_NULL) {
    194              *p_ts = p_msg->MsgTS;
    195            }
    196          #endif
    197          
    198            p_msg_q->OutPtr = p_msg->NextPtr;                             // Point to next message to extract
   \       0x2A   0x6834             LDR      R4,[R6, #+0]
   \       0x2C   0x606C             STR      R4,[R5, #+4]
    199          
    200            if (p_msg_q->OutPtr == DEF_NULL) {                            // Are there any more messages in the queue?
   \       0x2E   0x686C             LDR      R4,[R5, #+4]
   \       0x30   0x2C00             CMP      R4,#+0
   \       0x32   0xD104             BNE.N    ??OS_MsgQGet_2
    201              p_msg_q->InPtr = DEF_NULL;                                  // No
   \       0x34   0x2400             MOVS     R4,#+0
   \       0x36   0x602C             STR      R4,[R5, #+0]
    202              p_msg_q->NbrEntries = 0u;
   \       0x38   0x2400             MOVS     R4,#+0
   \       0x3A   0x816C             STRH     R4,[R5, #+10]
   \       0x3C   0xE002             B.N      ??OS_MsgQGet_3
    203            } else {
    204              p_msg_q->NbrEntries--;                                      // Yes, One less message in the queue
   \                     ??OS_MsgQGet_2: (+1)
   \       0x3E   0x896C             LDRH     R4,[R5, #+10]
   \       0x40   0x1E64             SUBS     R4,R4,#+1
   \       0x42   0x816C             STRH     R4,[R5, #+10]
    205            }
    206          
    207            p_msg->NextPtr = OSMsgPool.NextPtr;                           // Return message control block to free list
   \                     ??OS_MsgQGet_3: (+1)
   \       0x44   0x....             LDR.N    R4,??DataTable3_2
   \       0x46   0x6827             LDR      R7,[R4, #+0]
   \       0x48   0x6037             STR      R7,[R6, #+0]
    208            OSMsgPool.NextPtr = p_msg;
   \       0x4A   0x6026             STR      R6,[R4, #+0]
    209            OSMsgPool.NbrFree++;
   \       0x4C   0x88A7             LDRH     R7,[R4, #+4]
   \       0x4E   0x1C7F             ADDS     R7,R7,#+1
   \       0x50   0x80A7             STRH     R7,[R4, #+4]
    210            OSMsgPool.NbrUsed--;
   \       0x52   0x88E7             LDRH     R7,[R4, #+6]
   \       0x54   0x1E7F             SUBS     R7,R7,#+1
   \       0x56   0x80E7             STRH     R7,[R4, #+6]
    211          
    212            RTOS_ERR_SET(*p_err, RTOS_ERR_NONE);
   \       0x58   0x2400             MOVS     R4,#+0
   \       0x5A   0x701C             STRB     R4,[R3, #+0]
   \       0x5C   0x....             LDR.N    R4,??DataTable3_3
   \       0x5E   0x605C             STR      R4,[R3, #+4]
   \       0x60   0x24D4             MOVS     R4,#+212
   \       0x62   0x609C             STR      R4,[R3, #+8]
   \       0x64   0x....             LDR.N    R4,??DataTable3_5
   \       0x66   0x60DC             STR      R4,[R3, #+12]
    213            return (p_void);
   \                     ??OS_MsgQGet_1: (+1)
   \       0x68   0xBCF0             POP      {R4-R7}
   \       0x6A   0x4770             BX       LR
    214          }
    215          
    216          /****************************************************************************************************//**
    217           *                                               OS_MsgQPut()
    218           *
    219           * @brief    This function places a message in a message queue.
    220           *
    221           * @param    p_msg_q     Pointer to the OS_TCB of the task to post the message to.
    222           *
    223           * @param    p_void      Pointer to the message to send.
    224           *
    225           * @param    msg_size    The size of the message (in bytes).
    226           *
    227           * @param    opt         Specifies whether the message will be posted in FIFO or LIFO order:
    228           *                       OS_OPT_POST_FIFO    First-in, First-out.
    229           *                       OS_OPT_POST_LIFO    Last-in,  First-out.
    230           *
    231           * @param    ts          Timestamp as to when the message was posted.
    232           *
    233           * @param    p_err       Pointer to variable that will receive the return error code from this function :
    234           *                           - RTOS_ERR_NONE
    235           *                           - RTOS_ERR_WOULD_OVF
    236           *                           - RTOS_ERR_NO_MORE_RSRC
    237           *
    238           * @note     (1) This function is INTERNAL to the Kernel and your application MUST NOT call it.
    239           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    240          void OS_MsgQPut(OS_MSG_Q    *p_msg_q,
    241                          void        *p_void,
    242                          OS_MSG_SIZE msg_size,
    243                          OS_OPT      opt,
    244                          CPU_TS      ts,
    245                          RTOS_ERR    *p_err)
    246          {
   \                     OS_MsgQPut: (+1)
   \        0x0   0xB4F0             PUSH     {R4-R7}
   \        0x2   0x9D05             LDR      R5,[SP, #+20]
    247            OS_MSG *p_msg;
    248            OS_MSG *p_msg_in;
    249          
    250          #if (OS_CFG_TS_EN == DEF_DISABLED)
    251            (void)ts;                                                     // Prevent compiler warning for not using 'ts'
    252          #endif
    253          
    254            if (p_msg_q->NbrEntries >= p_msg_q->NbrEntriesSize) {
   \        0x4   0x8947             LDRH     R7,[R0, #+10]
   \        0x6   0x8904             LDRH     R4,[R0, #+8]
   \        0x8   0x42A7             CMP      R7,R4
   \        0xA   0xD308             BCC.N    ??OS_MsgQPut_0
    255              RTOS_ERR_SET(*p_err, RTOS_ERR_WOULD_OVF);                   // Message queue cannot accept any more messages
   \        0xC   0x241E             MOVS     R4,#+30
   \        0xE   0x702C             STRB     R4,[R5, #+0]
   \       0x10   0x....             LDR.N    R4,??DataTable3_3
   \       0x12   0x606C             STR      R4,[R5, #+4]
   \       0x14   0x24FF             MOVS     R4,#+255
   \       0x16   0x60AC             STR      R4,[R5, #+8]
   \       0x18   0x....             LDR.N    R4,??DataTable3_6
   \       0x1A   0x60EC             STR      R4,[R5, #+12]
    256              return;
   \       0x1C   0xE046             B.N      ??OS_MsgQPut_1
    257            }
    258          
    259            if (OSMsgPool.NbrFree == 0u) {
   \                     ??OS_MsgQPut_0: (+1)
   \       0x1E   0x....             LDR.N    R7,??DataTable3_2
   \       0x20   0x88BC             LDRH     R4,[R7, #+4]
   \       0x22   0x2C00             CMP      R4,#+0
   \       0x24   0xD109             BNE.N    ??OS_MsgQPut_2
    260              RTOS_ERR_SET(*p_err, RTOS_ERR_NO_MORE_RSRC);                // No more OS_MSG to use
   \       0x26   0x2411             MOVS     R4,#+17
   \       0x28   0x702C             STRB     R4,[R5, #+0]
   \       0x2A   0x....             LDR.N    R4,??DataTable3_3
   \       0x2C   0x606C             STR      R4,[R5, #+4]
   \       0x2E   0xF44F 0x7482      MOV      R4,#+260
   \       0x32   0x60AC             STR      R4,[R5, #+8]
   \       0x34   0x....             LDR.N    R4,??DataTable3_6
   \       0x36   0x60EC             STR      R4,[R5, #+12]
    261              return;
   \       0x38   0xE038             B.N      ??OS_MsgQPut_1
    262            }
    263          
    264            p_msg = OSMsgPool.NextPtr;                                    // Remove message control block from free list
   \                     ??OS_MsgQPut_2: (+1)
   \       0x3A   0xF8D7 0xC000      LDR      R12,[R7, #+0]
    265            OSMsgPool.NextPtr = p_msg->NextPtr;
   \       0x3E   0xF8DC 0x4000      LDR      R4,[R12, #+0]
   \       0x42   0x603C             STR      R4,[R7, #+0]
    266            OSMsgPool.NbrFree--;
   \       0x44   0x88BC             LDRH     R4,[R7, #+4]
   \       0x46   0x1E64             SUBS     R4,R4,#+1
   \       0x48   0x80BC             STRH     R4,[R7, #+4]
    267            OSMsgPool.NbrUsed++;
   \       0x4A   0x88FC             LDRH     R4,[R7, #+6]
   \       0x4C   0x1C64             ADDS     R4,R4,#+1
   \       0x4E   0x80FC             STRH     R4,[R7, #+6]
    268          
    269          #if (OS_CFG_DBG_EN == DEF_ENABLED)
    270            if (OSMsgPool.NbrUsedMax < OSMsgPool.NbrUsed) {
    271              OSMsgPool.NbrUsedMax = OSMsgPool.NbrUsed;
    272            }
    273          #endif
    274          
    275            if (p_msg_q->NbrEntries == 0u) {                              // Is this first message placed in the queue?
   \       0x50   0x8944             LDRH     R4,[R0, #+10]
   \       0x52   0x2C00             CMP      R4,#+0
   \       0x54   0xD109             BNE.N    ??OS_MsgQPut_3
    276              p_msg_q->InPtr = p_msg;                                     // Yes
   \       0x56   0xF8C0 0xC000      STR      R12,[R0, #+0]
    277              p_msg_q->OutPtr = p_msg;
   \       0x5A   0xF8C0 0xC004      STR      R12,[R0, #+4]
    278              p_msg_q->NbrEntries = 1u;
   \       0x5E   0x2401             MOVS     R4,#+1
   \       0x60   0x8144             STRH     R4,[R0, #+10]
    279              p_msg->NextPtr = DEF_NULL;
   \       0x62   0x2400             MOVS     R4,#+0
   \       0x64   0xF8CC 0x4000      STR      R4,[R12, #+0]
   \       0x68   0xE013             B.N      ??OS_MsgQPut_4
    280            } else {                                                      // No
    281              if ((opt & OS_OPT_POST_LIFO) == OS_OPT_POST_FIFO) {         // Is it FIFO or LIFO?
   \                     ??OS_MsgQPut_3: (+1)
   \       0x6A   0x06DC             LSLS     R4,R3,#+27
   \       0x6C   0xD409             BMI.N    ??OS_MsgQPut_5
    282                p_msg_in = p_msg_q->InPtr;                                // FIFO, add to the head
   \       0x6E   0x6804             LDR      R4,[R0, #+0]
   \       0x70   0x0026             MOVS     R6,R4
    283                p_msg_in->NextPtr = p_msg;
   \       0x72   0xF8C6 0xC000      STR      R12,[R6, #+0]
    284                p_msg_q->InPtr = p_msg;
   \       0x76   0xF8C0 0xC000      STR      R12,[R0, #+0]
    285                p_msg->NextPtr = DEF_NULL;
   \       0x7A   0x2400             MOVS     R4,#+0
   \       0x7C   0xF8CC 0x4000      STR      R4,[R12, #+0]
   \       0x80   0xE004             B.N      ??OS_MsgQPut_6
    286              } else {
    287                p_msg->NextPtr = p_msg_q->OutPtr;                         // LIFO, add to the tail
   \                     ??OS_MsgQPut_5: (+1)
   \       0x82   0x6844             LDR      R4,[R0, #+4]
   \       0x84   0xF8CC 0x4000      STR      R4,[R12, #+0]
    288                p_msg_q->OutPtr = p_msg;
   \       0x88   0xF8C0 0xC004      STR      R12,[R0, #+4]
    289              }
    290              p_msg_q->NbrEntries++;
   \                     ??OS_MsgQPut_6: (+1)
   \       0x8C   0x8944             LDRH     R4,[R0, #+10]
   \       0x8E   0x1C64             ADDS     R4,R4,#+1
   \       0x90   0x8144             STRH     R4,[R0, #+10]
    291            }
    292          
    293          #if (OS_CFG_DBG_EN == DEF_ENABLED)
    294            if (p_msg_q->NbrEntriesMax < p_msg_q->NbrEntries) {
    295              p_msg_q->NbrEntriesMax = p_msg_q->NbrEntries;
    296            }
    297          #endif
    298          
    299            p_msg->MsgPtr = p_void;                                       // Deposit message in the message queue entry
   \                     ??OS_MsgQPut_4: (+1)
   \       0x92   0xF8CC 0x1004      STR      R1,[R12, #+4]
    300            p_msg->MsgSize = msg_size;
   \       0x96   0xF8AC 0x2008      STRH     R2,[R12, #+8]
    301          #if (OS_CFG_TS_EN == DEF_ENABLED)
    302            p_msg->MsgTS = ts;
    303          #endif
    304            RTOS_ERR_SET(*p_err, RTOS_ERR_NONE);
   \       0x9A   0x2400             MOVS     R4,#+0
   \       0x9C   0x702C             STRB     R4,[R5, #+0]
   \       0x9E   0x....             LDR.N    R4,??DataTable3_3
   \       0xA0   0x606C             STR      R4,[R5, #+4]
   \       0xA2   0xF44F 0x7498      MOV      R4,#+304
   \       0xA6   0x60AC             STR      R4,[R5, #+8]
   \       0xA8   0x....             LDR.N    R4,??DataTable3_6
   \       0xAA   0x60EC             STR      R4,[R5, #+12]
    305          }
   \                     ??OS_MsgQPut_1: (+1)
   \       0xAC   0xBCF0             POP      {R4-R7}
   \       0xAE   0x4770             BX       LR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \        0x0   0x....'....        DC32     OSCfg_MsgPoolBasePtr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \        0x0   0x....'....        DC32     OSCfg_MsgPoolSize

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \        0x0   0x....'....        DC32     OSMsgPool

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \        0x0   0x....'....        DC32     `OS_MsgPoolInit::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \        0x0   0x....'....        DC32     `OS_MsgQGet::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \        0x0   0x....'....        DC32     `OS_MsgQPut::__func__`

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x44 0x3A          DC8 0x44, 0x3A, 0x5C, 0x49, 0x6E, 0x65, 0x73, 0x68
   \              0x5C 0x49    
   \              0x6E 0x65    
   \              0x73 0x68
   \        0x8   0x5F 0x77          DC8 0x5F, 0x77, 0x69, 0x73, 0x75, 0x6E, 0x5C, 0x57
   \              0x69 0x73    
   \              0x75 0x6E    
   \              0x5C 0x57
   \       0x10   0x69 0x73          DC8 0x69, 0x73, 0x75, 0x6E, 0x5F, 0x4E, 0x6F, 0x64
   \              0x75 0x6E    
   \              0x5F 0x4E    
   \              0x6F 0x64
   \       0x18   0x65 0x5F          DC8 0x65, 0x5F, 0x41, 0x70, 0x70, 0x20, 0x31, 0x5C
   \              0x41 0x70    
   \              0x70 0x20    
   \              0x31 0x5C
   \       0x20   0x57 0x69          DC8 0x57, 0x69, 0x73, 0x75, 0x6E, 0x5F, 0x4E, 0x6F
   \              0x73 0x75    
   \              0x6E 0x5F    
   \              0x4E 0x6F
   \       0x28   0x64 0x65          DC8 0x64, 0x65, 0x5F, 0x41, 0x70, 0x70, 0x5C, 0x67
   \              0x5F 0x41    
   \              0x70 0x70    
   \              0x5C 0x67
   \       0x30   0x65 0x63          DC8 0x65, 0x63, 0x6B, 0x6F, 0x5F, 0x73, 0x64, 0x6B
   \              0x6B 0x6F    
   \              0x5F 0x73    
   \              0x64 0x6B
   \       0x38   0x5F 0x34          DC8 0x5F, 0x34, 0x2E, 0x34, 0x2E, 0x35, 0x5C, 0x70
   \              0x2E 0x34    
   \              0x2E 0x35    
   \              0x5C 0x70
   \       0x40   0x6C 0x61          DC8 0x6C, 0x61, 0x74, 0x66, 0x6F, 0x72, 0x6D, 0x5C
   \              0x74 0x66    
   \              0x6F 0x72    
   \              0x6D 0x5C
   \       0x48   0x6D 0x69          DC8 0x6D, 0x69, 0x63, 0x72, 0x69, 0x75, 0x6D, 0x5F
   \              0x63 0x72    
   \              0x69 0x75    
   \              0x6D 0x5F
   \       0x50   0x6F 0x73          DC8 0x6F, 0x73, 0x5C, 0x6B, 0x65, 0x72, 0x6E, 0x65
   \              0x5C 0x6B    
   \              0x65 0x72    
   \              0x6E 0x65
   \       0x58   0x6C 0x5C          DC8 0x6C, 0x5C, 0x73, 0x6F, 0x75, 0x72, 0x63, 0x65
   \              0x73 0x6F    
   \              0x75 0x72    
   \              0x63 0x65
   \       0x60   0x5C 0x6F          DC8 0x5C, 0x6F, 0x73, 0x5F, 0x6D, 0x73, 0x67, 0x2E
   \              0x73 0x5F    
   \              0x6D 0x73    
   \              0x67 0x2E
   \       0x68   0x63 0x00          DC8 0x63, 0
   \       0x6A                      DS8 2
    306          #endif
    307          
    308          /********************************************************************************************************
    309           ********************************************************************************************************
    310           *                                   DEPENDENCIES & AVAIL CHECK(S) END
    311           ********************************************************************************************************
    312           *******************************************************************************************************/
    313          
    314          #endif // (defined(RTOS_MODULE_KERNEL_AVAIL))

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   OS_MsgPoolInit
       8   OS_MsgQFreeAll
      16   OS_MsgQGet
       4   OS_MsgQInit
      16   OS_MsgQPut


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
     108  ?_0
      96  OS_MsgPoolInit
      60  OS_MsgQFreeAll
     108  OS_MsgQGet
      18  OS_MsgQInit
     176  OS_MsgQPut
      52  -- Other

 
 160 bytes in section .rodata
 486 bytes in section .text
 
 486 bytes of CODE  memory
 160 bytes of CONST memory

Errors: none
Warnings: none
