###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         29/Mar/2025  15:53:20
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Source\startup_efr32fg28.c
#    Command line      =
#        -f "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\Source_1138393501331105767.dir\startup_efr32fg28.o.rsp"
#        ("D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Source\startup_efr32fg28.c"
#        -D DEBUG_EFM=1 -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -lC "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\Source_1138393501331105767.dir"
#        --diag_suppress Pa050 -o "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\Source_1138393501331105767.dir"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse --cmse -e --fpu=VFPv5_sp --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\rail\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\wisun\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\.\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_project_info\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\Core\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\RTOS2\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\device_init\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emlib\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\iostream\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\preset\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\cpu\include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\ports\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\nvm3\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\peripheral\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_psa_driver\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\common\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ble\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ieee802154\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\wmbus\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\zwave\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\chip\efr32\efr32xg2x\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\sidewalk\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\rail_util_pti\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\segger\systemview\SEGGER\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\silicon_labs\silabs_core\memory_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\toolchain\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\system\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ns_list\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ping\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\udp_client\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\sleeptimer\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\plugin\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\socket\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\autogen\\" -On
#        --use_c++_inline) --dependencies=n "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\Source_1138393501331105767.dir\startup_efr32fg28.o.iar_deps"
#    Locale            =  C
#    List file         =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\Source_1138393501331105767.dir\startup_efr32fg28.lst
#    Object file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\Source_1138393501331105767.dir\startup_efr32fg28.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Source\startup_efr32fg28.c
      1          /******************************************************************************
      2          * @file     startup_efr32fg28.c
      3          * @brief    CMSIS-Core(M) Device Startup File for
      4          *           Device EFR32FG28
      5          * @version  V2.1.0
      6          * @date     16. December 2020
      7          *******************************************************************************
      8          * # License
      9          *
     10          * The licensor of this software is Silicon Laboratories Inc. Your use of this
     11          * software is governed by the terms of Silicon Labs Master Software License
     12          * Agreement (MSLA) available at
     13          * www.silabs.com/about-us/legal/master-software-license-agreement. This
     14          * software is Third Party Software licensed by Silicon Labs from a third party
     15          * and is governed by the sections of the MSLA applicable to Third Party
     16          * Software and the additional terms set forth below.
     17          *
     18          ******************************************************************************/
     19          /*
     20           * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
     21           *
     22           * SPDX-License-Identifier: Apache-2.0
     23           *
     24           * Licensed under the Apache License, Version 2.0 (the License); you may
     25           * not use this file except in compliance with the License.
     26           * You may obtain a copy of the License at
     27           *
     28           * www.apache.org/licenses/LICENSE-2.0
     29           *
     30           * Unless required by applicable law or agreed to in writing, software
     31           * distributed under the License is distributed on an AS IS BASIS, WITHOUT
     32           * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     33           * See the License for the specific language governing permissions and
     34           * limitations under the License.
     35           */
     36          
     37          #include <stdbool.h>
     38          #include "em_device.h"

   \                                 In section .text, align 2, keep-with-next
   \                     Default_Handler: (+1)
   \   extern __vfp void NMI_Handler(void)
   \                     NMI_Handler: (+1)
   \   extern __vfp void HardFault_Handler(void)
   \                     HardFault_Handler: (+1)
   \   extern __vfp void MemManage_Handler(void)
   \                     MemManage_Handler: (+1)
   \   extern __vfp void BusFault_Handler(void)
   \                     BusFault_Handler: (+1)
   \   extern __vfp void UsageFault_Handler(void)
   \                     UsageFault_Handler: (+1)
   \   extern __vfp void SecureFault_Handler(void)
   \                     SecureFault_Handler: (+1)
   \   extern __vfp void SVC_Handler(void)
   \                     SVC_Handler: (+1)
   \   extern __vfp void DebugMon_Handler(void)
   \                     DebugMon_Handler: (+1)
   \   extern __vfp void PendSV_Handler(void)
   \                     PendSV_Handler: (+1)
   \   extern __vfp void SysTick_Handler(void)
   \                     SysTick_Handler: (+1)
   \   extern __vfp void SMU_SECURE_IRQHandler(void)
   \                     SMU_SECURE_IRQHandler: (+1)
   \   extern __vfp void SMU_S_PRIVILEGED_IRQHandler(void)
   \                     SMU_S_PRIVILEGED_IRQHandler: (+1)
   \   extern __vfp void SMU_NS_PRIVILEGED_IRQHandler(void)
   \                     SMU_NS_PRIVILEGED_IRQHandler: (+1)
   \   extern __vfp void EMU_IRQHandler(void)
   \                     EMU_IRQHandler: (+1)
   \   extern __vfp void TIMER0_IRQHandler(void)
   \                     TIMER0_IRQHandler: (+1)
   \   extern __vfp void TIMER1_IRQHandler(void)
   \                     TIMER1_IRQHandler: (+1)
   \   extern __vfp void TIMER2_IRQHandler(void)
   \                     TIMER2_IRQHandler: (+1)
   \   extern __vfp void TIMER3_IRQHandler(void)
   \                     TIMER3_IRQHandler: (+1)
   \   extern __vfp void TIMER4_IRQHandler(void)
   \                     TIMER4_IRQHandler: (+1)
   \   extern __vfp void USART0_RX_IRQHandler(void)
   \                     USART0_RX_IRQHandler: (+1)
   \   extern __vfp void USART0_TX_IRQHandler(void)
   \                     USART0_TX_IRQHandler: (+1)
   \   extern __vfp void EUSART0_RX_IRQHandler(void)
   \                     EUSART0_RX_IRQHandler: (+1)
   \   extern __vfp void EUSART0_TX_IRQHandler(void)
   \                     EUSART0_TX_IRQHandler: (+1)
   \   extern __vfp void EUSART1_RX_IRQHandler(void)
   \                     EUSART1_RX_IRQHandler: (+1)
   \   extern __vfp void EUSART1_TX_IRQHandler(void)
   \                     EUSART1_TX_IRQHandler: (+1)
   \   extern __vfp void EUSART2_RX_IRQHandler(void)
   \                     EUSART2_RX_IRQHandler: (+1)
   \   extern __vfp void EUSART2_TX_IRQHandler(void)
   \                     EUSART2_TX_IRQHandler: (+1)
   \   extern __vfp void ICACHE0_IRQHandler(void)
   \                     ICACHE0_IRQHandler: (+1)
   \   extern __vfp void BURTC_IRQHandler(void)
   \                     BURTC_IRQHandler: (+1)
   \   extern __vfp void LETIMER0_IRQHandler(void)
   \                     LETIMER0_IRQHandler: (+1)
   \   extern __vfp void SYSCFG_IRQHandler(void)
   \                     SYSCFG_IRQHandler: (+1)
   \   extern __vfp void MPAHBRAM_IRQHandler(void)
   \                     MPAHBRAM_IRQHandler: (+1)
   \   extern __vfp void LDMA_IRQHandler(void)
   \                     LDMA_IRQHandler: (+1)
   \   extern __vfp void LFXO_IRQHandler(void)
   \                     LFXO_IRQHandler: (+1)
   \   extern __vfp void LFRCO_IRQHandler(void)
   \                     LFRCO_IRQHandler: (+1)
   \   extern __vfp void ULFRCO_IRQHandler(void)
   \                     ULFRCO_IRQHandler: (+1)
   \   extern __vfp void GPIO_ODD_IRQHandler(void)
   \                     GPIO_ODD_IRQHandler: (+1)
   \   extern __vfp void GPIO_EVEN_IRQHandler(void)
   \                     GPIO_EVEN_IRQHandler: (+1)
   \   extern __vfp void I2C0_IRQHandler(void)
   \                     I2C0_IRQHandler: (+1)
   \   extern __vfp void I2C1_IRQHandler(void)
   \                     I2C1_IRQHandler: (+1)
   \   extern __vfp void EMUDG_IRQHandler(void)
   \                     EMUDG_IRQHandler: (+1)
   \   extern __vfp void AGC_IRQHandler(void)
   \                     AGC_IRQHandler: (+1)
   \   extern __vfp void BUFC_IRQHandler(void)
   \                     BUFC_IRQHandler: (+1)
   \   extern __vfp void FRC_PRI_IRQHandler(void)
   \                     FRC_PRI_IRQHandler: (+1)
   \   extern __vfp void FRC_IRQHandler(void)
   \                     FRC_IRQHandler: (+1)
   \   extern __vfp void MODEM_IRQHandler(void)
   \                     MODEM_IRQHandler: (+1)
   \   extern __vfp void PROTIMER_IRQHandler(void)
   \                     PROTIMER_IRQHandler: (+1)
   \   extern __vfp void RAC_RSM_IRQHandler(void)
   \                     RAC_RSM_IRQHandler: (+1)
   \   extern __vfp void RAC_SEQ_IRQHandler(void)
   \                     RAC_SEQ_IRQHandler: (+1)
   \   extern __vfp void HOSTMAILBOX_IRQHandler(void)
   \                     HOSTMAILBOX_IRQHandler: (+1)
   \   extern __vfp void SYNTH_IRQHandler(void)
   \                     SYNTH_IRQHandler: (+1)
   \   extern __vfp void ACMP0_IRQHandler(void)
   \                     ACMP0_IRQHandler: (+1)
   \   extern __vfp void ACMP1_IRQHandler(void)
   \                     ACMP1_IRQHandler: (+1)
   \   extern __vfp void WDOG0_IRQHandler(void)
   \                     WDOG0_IRQHandler: (+1)
   \   extern __vfp void WDOG1_IRQHandler(void)
   \                     WDOG1_IRQHandler: (+1)
   \   extern __vfp void HFXO0_IRQHandler(void)
   \                     HFXO0_IRQHandler: (+1)
   \   extern __vfp void HFRCO0_IRQHandler(void)
   \                     HFRCO0_IRQHandler: (+1)
   \   extern __vfp void HFRCOEM23_IRQHandler(void)
   \                     HFRCOEM23_IRQHandler: (+1)
   \   extern __vfp void CMU_IRQHandler(void)
   \                     CMU_IRQHandler: (+1)
   \   extern __vfp void AES_IRQHandler(void)
   \                     AES_IRQHandler: (+1)
   \   extern __vfp void IADC_IRQHandler(void)
   \                     IADC_IRQHandler: (+1)
   \   extern __vfp void MSC_IRQHandler(void)
   \                     MSC_IRQHandler: (+1)
   \   extern __vfp void DPLL0_IRQHandler(void)
   \                     DPLL0_IRQHandler: (+1)
   \   extern __vfp void EMUEFP_IRQHandler(void)
   \                     EMUEFP_IRQHandler: (+1)
   \   extern __vfp void DCDC_IRQHandler(void)
   \                     DCDC_IRQHandler: (+1)
   \   extern __vfp void VDAC0_IRQHandler(void)
   \                     VDAC0_IRQHandler: (+1)
   \   extern __vfp void PCNT0_IRQHandler(void)
   \                     PCNT0_IRQHandler: (+1)
   \   extern __vfp void SW0_IRQHandler(void)
   \                     SW0_IRQHandler: (+1)
   \   extern __vfp void SW1_IRQHandler(void)
   \                     SW1_IRQHandler: (+1)
   \   extern __vfp void SW2_IRQHandler(void)
   \                     SW2_IRQHandler: (+1)
   \   extern __vfp void SW3_IRQHandler(void)
   \                     SW3_IRQHandler: (+1)
   \   extern __vfp void KERNEL0_IRQHandler(void)
   \                     KERNEL0_IRQHandler: (+1)
   \   extern __vfp void KERNEL1_IRQHandler(void)
   \                     KERNEL1_IRQHandler: (+1)
   \   extern __vfp void M33CTI0_IRQHandler(void)
   \                     M33CTI0_IRQHandler: (+1)
   \   extern __vfp void M33CTI1_IRQHandler(void)
   \                     M33CTI1_IRQHandler: (+1)
   \   extern __vfp void FPUEXH_IRQHandler(void)
   \                     FPUEXH_IRQHandler: (+1)
   \   extern __vfp void SETAMPERHOST_IRQHandler(void)
   \                     SETAMPERHOST_IRQHandler: (+1)
   \   extern __vfp void SEMBRX_IRQHandler(void)
   \                     SEMBRX_IRQHandler: (+1)
   \   extern __vfp void SEMBTX_IRQHandler(void)
   \                     SEMBTX_IRQHandler: (+1)
   \   extern __vfp void LESENSE_IRQHandler(void)
   \                     LESENSE_IRQHandler: (+1)
   \   extern __vfp void SYSRTC_APP_IRQHandler(void)
   \                     SYSRTC_APP_IRQHandler: (+1)
   \   extern __vfp void SYSRTC_SEQ_IRQHandler(void)
   \                     SYSRTC_SEQ_IRQHandler: (+1)
   \   extern __vfp void LCD_IRQHandler(void)
   \                     LCD_IRQHandler: (+1)
   \   extern __vfp void KEYSCAN_IRQHandler(void)
   \                     KEYSCAN_IRQHandler: (+1)
   \   extern __vfp void RFECA0_IRQHandler(void)
   \                     RFECA0_IRQHandler: (+1)
   \   extern __vfp void RFECA1_IRQHandler(void)
   \                     RFECA1_IRQHandler: (+1)
   \   extern __vfp void AHB2AHB0_IRQHandler(void)
   \                     AHB2AHB0_IRQHandler: (+1)
   \   extern __vfp void AHB2AHB1_IRQHandler(void)
   \                     AHB2AHB1_IRQHandler: (+1)
   \   extern __vfp void MVP_IRQHandler(void)
   \                     MVP_IRQHandler: (+1)
     39          
     40          #ifdef BOOTLOADER_ENABLE
     41          #include "api/btl_interface.h"
     42          
     43          #endif // BOOTLOADER_ENABLE
     44          #ifdef SL_APP_PROPERTIES
     45          #include "api/application_properties.h"
     46          
     47          #endif // SL_APP_PROPERTIES
     48          
     49          #define TOTAL_INTERRUPTS    (16 + EXT_IRQ_COUNT)
     50          
     51          #ifdef BOOTLOADER_ENABLE
     52          extern MainBootloaderTable_t mainStageTable;
     53          extern void SystemInit2(void);
     54          
     55          /*----------------------------------------------------------------------------
     56           * Exception / Interrupt Handler Function Prototype
     57           *----------------------------------------------------------------------------*/
     58          typedef void (*VECTOR_TABLE_Type)(void);
     59          #endif
     60          
     61          #ifdef SL_APP_PROPERTIES
     62          extern ApplicationProperties_t sl_app_properties;
     63          
     64          /*----------------------------------------------------------------------------
     65           * Exception / Interrupt Handler Function Prototype
     66           *----------------------------------------------------------------------------*/
     67          typedef void (*VECTOR_TABLE_Type)(void);
     68          #endif
     69          
     70          /*---------------------------------------------------------------------------
     71           * External References
     72           *---------------------------------------------------------------------------*/
     73          extern uint32_t __INITIAL_SP;
     74          #if defined (SL_TRUSTZONE_SECURE)
     75          extern uint32_t __STACK_LIMIT;
     76          #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
     77          extern uint64_t __STACK_SEAL;
     78          #endif // __ARM_FEATURE_CMSE
     79          #endif // SL_TRUSTZONE_SECURE
     80          
     81          extern __NO_RETURN void __PROGRAM_START(void);
     82          
     83          #if defined (__START) && defined (__GNUC__)
     84          extern int  __START(void) __attribute__((noreturn));    /* main entry point */
     85          void Copy_Table();
     86          void Zero_Table();
     87          #endif // __START
     88          #if !defined(SL_LEGACY_LINKER)
     89          #if defined (__GNUC__)
     90          // Function to copy RAM functions from Flash to RAM at startup time
     91          void CopyRamFuncs();
     92          #endif
     93          #endif
     94          
     95          /*---------------------------------------------------------------------------
     96           * Internal References
     97           *---------------------------------------------------------------------------*/
     98          __NO_RETURN void Reset_Handler(void);
     99          void Default_Handler(void);
    100          
    101          #if defined (__GNUC__)
    102          #ifndef __STACK_SIZE
    103          #define __STACK_SIZE    0x00000400
    104          #endif // __STACK_SIZE
    105          
    106          #ifndef __HEAP_SIZE
    107          #define __HEAP_SIZE    0x00000C00
    108          #endif // __HEAP_SIZE
    109          #endif // __GNUC__
    110          
    111          /*----------------------------------------------------------------------------
    112           * Exception / Interrupt Handler
    113           *----------------------------------------------------------------------------*/
    114          /* Cortex-M Processor Exceptions */
    115          void NMI_Handler(void) __attribute__ ((weak, alias("Default_Handler")));
    116          void HardFault_Handler(void) __attribute__ ((weak, alias("Default_Handler")));
    117          void MemManage_Handler(void) __attribute__ ((weak, alias("Default_Handler")));
    118          void BusFault_Handler(void) __attribute__ ((weak, alias("Default_Handler")));
    119          void UsageFault_Handler(void) __attribute__ ((weak, alias("Default_Handler")));
    120          void SecureFault_Handler(void) __attribute__ ((weak, alias("Default_Handler")));
    121          void DebugMon_Handler(void) __attribute__ ((weak, alias("Default_Handler")));
    122          void SVC_Handler(void) __attribute__ ((weak, alias("Default_Handler")));
    123          void PendSV_Handler(void) __attribute__ ((weak, alias("Default_Handler")));
    124          void SysTick_Handler(void) __attribute__ ((weak, alias("Default_Handler")));
    125          #ifndef SL_APP_PROPERTIES
    126          /* Provide a dummy value for the sl_app_properties symbol. */
    127          void sl_app_properties(void);    /* Prototype to please MISRA checkers. */
   \                     sl_app_properties: (+1)
   \                     ??Default_Handler_0: (+1)
   \        0x0   0xE7FE             B.N      ??Default_Handler_0
    128          void sl_app_properties(void) __attribute__ ((weak, alias("Default_Handler")));
    129          #endif
    130          
    131          /* Part Specific Interrupts */
    132          void SMU_SECURE_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    133          void SMU_S_PRIVILEGED_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    134          void SMU_NS_PRIVILEGED_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    135          void EMU_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    136          void TIMER0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    137          void TIMER1_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    138          void TIMER2_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    139          void TIMER3_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    140          void TIMER4_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    141          void USART0_RX_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    142          void USART0_TX_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    143          void EUSART0_RX_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    144          void EUSART0_TX_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    145          void EUSART1_RX_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    146          void EUSART1_TX_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    147          void EUSART2_RX_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    148          void EUSART2_TX_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    149          void ICACHE0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    150          void BURTC_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    151          void LETIMER0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    152          void SYSCFG_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    153          void MPAHBRAM_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    154          void LDMA_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    155          void LFXO_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    156          void LFRCO_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    157          void ULFRCO_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    158          void GPIO_ODD_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    159          void GPIO_EVEN_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    160          void I2C0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    161          void I2C1_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    162          void EMUDG_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    163          void AGC_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    164          void BUFC_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    165          void FRC_PRI_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    166          void FRC_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    167          void MODEM_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    168          void PROTIMER_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    169          void RAC_RSM_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    170          void RAC_SEQ_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    171          void HOSTMAILBOX_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    172          void SYNTH_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    173          void ACMP0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    174          void ACMP1_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    175          void WDOG0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    176          void WDOG1_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    177          void HFXO0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    178          void HFRCO0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    179          void HFRCOEM23_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    180          void CMU_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    181          void AES_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    182          void IADC_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    183          void MSC_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    184          void DPLL0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    185          void EMUEFP_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    186          void DCDC_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    187          void VDAC0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    188          void PCNT0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    189          void SW0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    190          void SW1_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    191          void SW2_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    192          void SW3_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    193          void KERNEL0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    194          void KERNEL1_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    195          void M33CTI0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    196          void M33CTI1_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    197          void FPUEXH_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    198          void SETAMPERHOST_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    199          void SEMBRX_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    200          void SEMBTX_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    201          void LESENSE_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    202          void SYSRTC_APP_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    203          void SYSRTC_SEQ_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    204          void LCD_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    205          void KEYSCAN_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    206          void RFECA0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    207          void RFECA1_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    208          void AHB2AHB0_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    209          void AHB2AHB1_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    210          void MVP_IRQHandler(void) __attribute__ ((weak, alias("Default_Handler")));
    211          
    212          /*----------------------------------------------------------------------------
    213           * Exception / Interrupt Vector table
    214           *----------------------------------------------------------------------------*/
    215          
    216          #if defined (__GNUC__)
    217          #pragma GCC diagnostic push
    218          #pragma GCC diagnostic ignored "-Wpedantic"
    219          #endif // __GNUC__
    220          
    221          #if defined (__ICCARM__)
    222          #pragma data_alignment=512
    223          extern const tVectorEntry __VECTOR_TABLE[TOTAL_INTERRUPTS];

   \                                 In section .intvec, align 512
    224          const tVectorEntry        __VECTOR_TABLE[TOTAL_INTERRUPTS] __VECTOR_TABLE_ATTRIBUTE = {
   \                     __vector_table:
   \        0x0   0x....'....        DC32 `CSTACK$$Limit`, Reset_Handler, NMI_Handler, HardFault_Handler
   \              0x....'....  
   \              0x....'....  
   \              0x....'....
   \       0x10   0x....'....        DC32 MemManage_Handler, BusFault_Handler, UsageFault_Handler
   \              0x....'....  
   \              0x....'....
   \       0x1C   0x....'....        DC32 SecureFault_Handler, Default_Handler, Default_Handler
   \              0x....'....  
   \              0x....'....
   \       0x28   0x....'....        DC32 Default_Handler, SVC_Handler, DebugMon_Handler, sl_app_properties
   \              0x....'....  
   \              0x....'....  
   \              0x....'....
   \       0x38   0x....'....        DC32 PendSV_Handler, SysTick_Handler, SMU_SECURE_IRQHandler
   \              0x....'....  
   \              0x....'....
   \       0x44   0x....'....        DC32 SMU_S_PRIVILEGED_IRQHandler, SMU_NS_PRIVILEGED_IRQHandler
   \              0x....'....
   \       0x4C   0x....'....        DC32 EMU_IRQHandler, TIMER0_IRQHandler, TIMER1_IRQHandler
   \              0x....'....  
   \              0x....'....
   \       0x58   0x....'....        DC32 TIMER2_IRQHandler, TIMER3_IRQHandler, TIMER4_IRQHandler
   \              0x....'....  
   \              0x....'....
   \       0x64   0x....'....        DC32 USART0_RX_IRQHandler, USART0_TX_IRQHandler, EUSART0_RX_IRQHandler
   \              0x....'....  
   \              0x....'....
   \       0x70   0x....'....        DC32 EUSART0_TX_IRQHandler, EUSART1_RX_IRQHandler
   \              0x....'....
   \       0x78   0x....'....        DC32 EUSART1_TX_IRQHandler, EUSART2_RX_IRQHandler
   \              0x....'....
   \       0x80   0x....'....        DC32 EUSART2_TX_IRQHandler, ICACHE0_IRQHandler, BURTC_IRQHandler
   \              0x....'....  
   \              0x....'....
   \       0x8C   0x....'....        DC32 LETIMER0_IRQHandler, SYSCFG_IRQHandler, MPAHBRAM_IRQHandler
   \              0x....'....  
   \              0x....'....
   \       0x98   0x....'....        DC32 LDMA_IRQHandler, LFXO_IRQHandler, LFRCO_IRQHandler
   \              0x....'....  
   \              0x....'....
   \       0xA4   0x....'....        DC32 ULFRCO_IRQHandler, GPIO_ODD_IRQHandler, GPIO_EVEN_IRQHandler
   \              0x....'....  
   \              0x....'....
   \       0xB0   0x....'....        DC32 I2C0_IRQHandler, I2C1_IRQHandler, EMUDG_IRQHandler, AGC_IRQHandler
   \              0x....'....  
   \              0x....'....  
   \              0x....'....
   \       0xC0   0x....'....        DC32 BUFC_IRQHandler, FRC_PRI_IRQHandler, FRC_IRQHandler
   \              0x....'....  
   \              0x....'....
   \       0xCC   0x....'....        DC32 MODEM_IRQHandler, PROTIMER_IRQHandler, RAC_RSM_IRQHandler
   \              0x....'....  
   \              0x....'....
   \       0xD8   0x....'....        DC32 RAC_SEQ_IRQHandler, HOSTMAILBOX_IRQHandler, SYNTH_IRQHandler
   \              0x....'....  
   \              0x....'....
   \       0xE4   0x....'....        DC32 ACMP0_IRQHandler, ACMP1_IRQHandler, WDOG0_IRQHandler
   \              0x....'....  
   \              0x....'....
   \       0xF0   0x....'....        DC32 WDOG1_IRQHandler, HFXO0_IRQHandler, HFRCO0_IRQHandler
   \              0x....'....  
   \              0x....'....
   \       0xFC   0x....'....        DC32 HFRCOEM23_IRQHandler, CMU_IRQHandler, AES_IRQHandler
   \              0x....'....  
   \              0x....'....
   \      0x108   0x....'....        DC32 IADC_IRQHandler, MSC_IRQHandler, DPLL0_IRQHandler
   \              0x....'....  
   \              0x....'....
   \      0x114   0x....'....        DC32 EMUEFP_IRQHandler, DCDC_IRQHandler, VDAC0_IRQHandler
   \              0x....'....  
   \              0x....'....
   \      0x120   0x....'....        DC32 PCNT0_IRQHandler, SW0_IRQHandler, SW1_IRQHandler, SW2_IRQHandler
   \              0x....'....  
   \              0x....'....  
   \              0x....'....
   \      0x130   0x....'....        DC32 SW3_IRQHandler, KERNEL0_IRQHandler, KERNEL1_IRQHandler
   \              0x....'....  
   \              0x....'....
   \      0x13C   0x....'....        DC32 M33CTI0_IRQHandler, M33CTI1_IRQHandler, FPUEXH_IRQHandler
   \              0x....'....  
   \              0x....'....
   \      0x148   0x....'....        DC32 SETAMPERHOST_IRQHandler, SEMBRX_IRQHandler, SEMBTX_IRQHandler
   \              0x....'....  
   \              0x....'....
   \      0x154   0x....'....        DC32 LESENSE_IRQHandler, SYSRTC_APP_IRQHandler, SYSRTC_SEQ_IRQHandler
   \              0x....'....  
   \              0x....'....
   \      0x160   0x....'....        DC32 LCD_IRQHandler, KEYSCAN_IRQHandler, RFECA0_IRQHandler
   \              0x....'....  
   \              0x....'....
   \      0x16C   0x....'....        DC32 RFECA1_IRQHandler, AHB2AHB0_IRQHandler, AHB2AHB1_IRQHandler
   \              0x....'....  
   \              0x....'....
   \      0x178   0x....'....        DC32 MVP_IRQHandler
    225          #elif defined(__GNUC__)
    226          extern const tVectorEntry __VECTOR_TABLE[TOTAL_INTERRUPTS];
    227          const tVectorEntry __VECTOR_TABLE[TOTAL_INTERRUPTS] __attribute__((aligned(512)))
    228          __VECTOR_TABLE_ATTRIBUTE = {
    229          #else
    230          extern const tVectorEntry __VECTOR_TABLE[TOTAL_INTERRUPTS];
    231          const tVectorEntry __VECTOR_TABLE[TOTAL_INTERRUPTS] __VECTOR_TABLE_ATTRIBUTE = {
    232          #endif
    233            { .topOfStack = &__INITIAL_SP },            /*      Initial Stack Pointer     */
    234            { Reset_Handler },                          /*      Reset Handler             */
    235            { NMI_Handler },                            /*      -14 NMI Handler           */
    236            { HardFault_Handler },                      /*      -13 Hard Fault Handler    */
    237            { MemManage_Handler },                      /*      -12 MPU Fault Handler     */
    238            { BusFault_Handler },                       /*      -11 Bus Fault Handler     */
    239            { UsageFault_Handler },                     /*      -10 Usage Fault Handler   */
    240            { SecureFault_Handler },                    /*      -9 Secure Fault Handler   */
    241            { Default_Handler },                        /*      Reserved                  */
    242            { Default_Handler },                        /*      Reserved                  */
    243          #ifdef BOOTLOADER_ENABLE
    244            { (VECTOR_TABLE_Type) & mainStageTable },
    245          #else
    246            { Default_Handler },                         /*      Reserved                  */
    247          #endif
    248            { SVC_Handler },                             /*      -5 SVCall Handler         */
    249            { DebugMon_Handler },                        /*      -4 Debug Monitor Handler  */
    250          #ifdef SL_APP_PROPERTIES
    251            { (VECTOR_TABLE_Type) & sl_app_properties }, /*      Application properties    */
    252          #else
    253            { sl_app_properties },                       /*      Application properties    */
    254          #endif
    255            { PendSV_Handler },                          /*      -2 PendSV Handler         */
    256            { SysTick_Handler },                         /*      -1 SysTick Handler        */
    257          
    258            /* External interrupts */
    259            { SMU_SECURE_IRQHandler },                       /* 00 = SMU_SECURE */
    260            { SMU_S_PRIVILEGED_IRQHandler },                 /* 01 = SMU_S_PRIVILEGED */
    261            { SMU_NS_PRIVILEGED_IRQHandler },                /* 02 = SMU_NS_PRIVILEGED */
    262            { EMU_IRQHandler },                              /* 03 = EMU */
    263            { TIMER0_IRQHandler },                           /* 04 = TIMER0 */
    264            { TIMER1_IRQHandler },                           /* 05 = TIMER1 */
    265            { TIMER2_IRQHandler },                           /* 06 = TIMER2 */
    266            { TIMER3_IRQHandler },                           /* 07 = TIMER3 */
    267            { TIMER4_IRQHandler },                           /* 08 = TIMER4 */
    268            { USART0_RX_IRQHandler },                        /* 09 = USART0_RX */
    269            { USART0_TX_IRQHandler },                        /* 10 = USART0_TX */
    270            { EUSART0_RX_IRQHandler },                       /* 11 = EUSART0_RX */
    271            { EUSART0_TX_IRQHandler },                       /* 12 = EUSART0_TX */
    272            { EUSART1_RX_IRQHandler },                       /* 13 = EUSART1_RX */
    273            { EUSART1_TX_IRQHandler },                       /* 14 = EUSART1_TX */
    274            { EUSART2_RX_IRQHandler },                       /* 15 = EUSART2_RX */
    275            { EUSART2_TX_IRQHandler },                       /* 16 = EUSART2_TX */
    276            { ICACHE0_IRQHandler },                          /* 17 = ICACHE0 */
    277            { BURTC_IRQHandler },                            /* 18 = BURTC */
    278            { LETIMER0_IRQHandler },                         /* 19 = LETIMER0 */
    279            { SYSCFG_IRQHandler },                           /* 20 = SYSCFG */
    280            { MPAHBRAM_IRQHandler },                         /* 21 = MPAHBRAM */
    281            { LDMA_IRQHandler },                             /* 22 = LDMA */
    282            { LFXO_IRQHandler },                             /* 23 = LFXO */
    283            { LFRCO_IRQHandler },                            /* 24 = LFRCO */
    284            { ULFRCO_IRQHandler },                           /* 25 = ULFRCO */
    285            { GPIO_ODD_IRQHandler },                         /* 26 = GPIO_ODD */
    286            { GPIO_EVEN_IRQHandler },                        /* 27 = GPIO_EVEN */
    287            { I2C0_IRQHandler },                             /* 28 = I2C0 */
    288            { I2C1_IRQHandler },                             /* 29 = I2C1 */
    289            { EMUDG_IRQHandler },                            /* 30 = EMUDG */
    290            { AGC_IRQHandler },                              /* 31 = AGC */
    291            { BUFC_IRQHandler },                             /* 32 = BUFC */
    292            { FRC_PRI_IRQHandler },                          /* 33 = FRC_PRI */
    293            { FRC_IRQHandler },                              /* 34 = FRC */
    294            { MODEM_IRQHandler },                            /* 35 = MODEM */
    295            { PROTIMER_IRQHandler },                         /* 36 = PROTIMER */
    296            { RAC_RSM_IRQHandler },                          /* 37 = RAC_RSM */
    297            { RAC_SEQ_IRQHandler },                          /* 38 = RAC_SEQ */
    298            { HOSTMAILBOX_IRQHandler },                      /* 39 = HOSTMAILBOX */
    299            { SYNTH_IRQHandler },                            /* 40 = SYNTH */
    300            { ACMP0_IRQHandler },                            /* 41 = ACMP0 */
    301            { ACMP1_IRQHandler },                            /* 42 = ACMP1 */
    302            { WDOG0_IRQHandler },                            /* 43 = WDOG0 */
    303            { WDOG1_IRQHandler },                            /* 44 = WDOG1 */
    304            { HFXO0_IRQHandler },                            /* 45 = HFXO0 */
    305            { HFRCO0_IRQHandler },                           /* 46 = HFRCO0 */
    306            { HFRCOEM23_IRQHandler },                        /* 47 = HFRCOEM23 */
    307            { CMU_IRQHandler },                              /* 48 = CMU */
    308            { AES_IRQHandler },                              /* 49 = AES */
    309            { IADC_IRQHandler },                             /* 50 = IADC */
    310            { MSC_IRQHandler },                              /* 51 = MSC */
    311            { DPLL0_IRQHandler },                            /* 52 = DPLL0 */
    312            { EMUEFP_IRQHandler },                           /* 53 = EMUEFP */
    313            { DCDC_IRQHandler },                             /* 54 = DCDC */
    314            { VDAC0_IRQHandler },                            /* 55 = VDAC0 */
    315            { PCNT0_IRQHandler },                            /* 56 = PCNT0 */
    316            { SW0_IRQHandler },                              /* 57 = SW0 */
    317            { SW1_IRQHandler },                              /* 58 = SW1 */
    318            { SW2_IRQHandler },                              /* 59 = SW2 */
    319            { SW3_IRQHandler },                              /* 60 = SW3 */
    320            { KERNEL0_IRQHandler },                          /* 61 = KERNEL0 */
    321            { KERNEL1_IRQHandler },                          /* 62 = KERNEL1 */
    322            { M33CTI0_IRQHandler },                          /* 63 = M33CTI0 */
    323            { M33CTI1_IRQHandler },                          /* 64 = M33CTI1 */
    324            { FPUEXH_IRQHandler },                           /* 65 = FPUEXH */
    325            { SETAMPERHOST_IRQHandler },                     /* 66 = SETAMPERHOST */
    326            { SEMBRX_IRQHandler },                           /* 67 = SEMBRX */
    327            { SEMBTX_IRQHandler },                           /* 68 = SEMBTX */
    328            { LESENSE_IRQHandler },                          /* 69 = LESENSE */
    329            { SYSRTC_APP_IRQHandler },                       /* 70 = SYSRTC_APP */
    330            { SYSRTC_SEQ_IRQHandler },                       /* 71 = SYSRTC_SEQ */
    331            { LCD_IRQHandler },                              /* 72 = LCD */
    332            { KEYSCAN_IRQHandler },                          /* 73 = KEYSCAN */
    333            { RFECA0_IRQHandler },                           /* 74 = RFECA0 */
    334            { RFECA1_IRQHandler },                           /* 75 = RFECA1 */
    335            { AHB2AHB0_IRQHandler },                         /* 76 = AHB2AHB0 */
    336            { AHB2AHB1_IRQHandler },                         /* 77 = AHB2AHB1 */
    337            { MVP_IRQHandler },                              /* 78 = MVP */
    338          };
    339          
    340          #if defined (__GNUC__)
    341          #pragma GCC diagnostic pop
    342          #endif // __GNUC__
    343          
    344          #if defined (__START) && defined (__GNUC__)
    345          void Copy_Table()
    346          {
    347            uint32_t        *pSrc, *pDest;
    348            extern uint32_t __etext;
    349            extern uint32_t __data_start__;
    350            extern uint32_t __data_end__;
    351            pSrc  = &__etext;
    352            pDest = &__data_start__;
    353          
    354            for (; pDest < &__data_end__; ) {
    355              *pDest++ = *pSrc++;
    356            }
    357          }
    358          
    359          void Zero_Table()
    360          {
    361            uint32_t        *pDest;
    362            extern uint32_t __bss_start__;
    363            extern uint32_t __bss_end__;
    364            pDest = &__bss_start__;
    365          
    366            for (; pDest < &__bss_end__; ) {
    367              *pDest++ = 0UL;
    368            }
    369          }
    370          #endif // __START
    371          
    372          #if !defined(SL_LEGACY_LINKER)
    373          #if defined (__GNUC__)
    374          void CopyRamFuncs()
    375          {
    376            extern uint32_t __lma_ramfuncs_start__;
    377            extern uint32_t __lma_ramfuncs_end__;
    378            extern uint32_t __ramfuncs_start__;
    379            uint32_t        size = &__lma_ramfuncs_end__ - &__lma_ramfuncs_start__;
    380          
    381            FlashToRamCopy(&__lma_ramfuncs_start__, &__ramfuncs_start__, size);
    382          }
    383          #endif
    384          #endif
    385          
    386          /*---------------------------------------------------------------------------
    387           * Reset Handler called on controller reset
    388           *---------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    389          __NO_RETURN void Reset_Handler(void)
    390          {
   \                     Reset_Handler: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    391          #if defined (SL_TRUSTZONE_SECURE)
    392            __set_MSPLIM((uint32_t) (&__STACK_LIMIT));
    393          
    394          #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
    395            __TZ_set_STACKSEAL_S((uint32_t *) (&__STACK_SEAL));
    396          #endif // __ARM_FEATURE_CMSE
    397          #endif // SL_TRUSTZONE_SECURE
    398          
    399            #ifndef __NO_SYSTEM_INIT
    400            SystemInit();                    /* CMSIS System Initialization */
   \        0x2   0x.... 0x....      BL       SystemInit
    401            #endif
    402          
    403          #ifdef BOOTLOADER_ENABLE
    404            SystemInit2();
    405          #endif // BOOTLOADER_ENABLE
    406          #if !defined(SL_LEGACY_LINKER)
    407          #if defined (__GNUC__)
    408            CopyRamFuncs();
    409          #endif
    410          #endif
    411          #if defined (__GNUC__) && defined (__START)
    412            Copy_Table();
    413            Zero_Table();
    414            __START();
    415          #else
    416            __PROGRAM_START();               /* Enter PreMain (C library entry point) */
   \        0x6   0x.... 0x....      BL       __iar_program_start
    417          #endif // __GNUC__
    418          }
   \        0xA   0xBD01             POP      {R0,PC}
    419          
    420          #if defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
    421            #pragma clang diagnostic push
    422            #pragma clang diagnostic ignored "-Wmissing-noreturn"
    423          #endif // __ARMCC_VERSION
    424          
    425          /*----------------------------------------------------------------------------
    426           * Default Handler for Exceptions / Interrupts
    427           *----------------------------------------------------------------------------*/
    428          void Default_Handler(void)
    429          {
    430            while (true) {
    431            }
    432          }
    433          
    434          #if defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
    435            #pragma clang diagnostic pop
    436          #endif // __ARMCC_VERSION

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ACMP0_IRQHandler
       0   ACMP1_IRQHandler
       0   AES_IRQHandler
       0   AGC_IRQHandler
       0   AHB2AHB0_IRQHandler
       0   AHB2AHB1_IRQHandler
       0   BUFC_IRQHandler
       0   BURTC_IRQHandler
       0   BusFault_Handler
       0   CMU_IRQHandler
       0   DCDC_IRQHandler
       0   DPLL0_IRQHandler
       0   DebugMon_Handler
       0   Default_Handler
       0   EMUDG_IRQHandler
       0   EMUEFP_IRQHandler
       0   EMU_IRQHandler
       0   EUSART0_RX_IRQHandler
       0   EUSART0_TX_IRQHandler
       0   EUSART1_RX_IRQHandler
       0   EUSART1_TX_IRQHandler
       0   EUSART2_RX_IRQHandler
       0   EUSART2_TX_IRQHandler
       0   FPUEXH_IRQHandler
       0   FRC_IRQHandler
       0   FRC_PRI_IRQHandler
       0   GPIO_EVEN_IRQHandler
       0   GPIO_ODD_IRQHandler
       0   HFRCO0_IRQHandler
       0   HFRCOEM23_IRQHandler
       0   HFXO0_IRQHandler
       0   HOSTMAILBOX_IRQHandler
       0   HardFault_Handler
       0   I2C0_IRQHandler
       0   I2C1_IRQHandler
       0   IADC_IRQHandler
       0   ICACHE0_IRQHandler
       0   KERNEL0_IRQHandler
       0   KERNEL1_IRQHandler
       0   KEYSCAN_IRQHandler
       0   LCD_IRQHandler
       0   LDMA_IRQHandler
       0   LESENSE_IRQHandler
       0   LETIMER0_IRQHandler
       0   LFRCO_IRQHandler
       0   LFXO_IRQHandler
       0   M33CTI0_IRQHandler
       0   M33CTI1_IRQHandler
       0   MODEM_IRQHandler
       0   MPAHBRAM_IRQHandler
       0   MSC_IRQHandler
       0   MVP_IRQHandler
       0   MemManage_Handler
       0   NMI_Handler
       0   PCNT0_IRQHandler
       0   PROTIMER_IRQHandler
       0   PendSV_Handler
       0   RAC_RSM_IRQHandler
       0   RAC_SEQ_IRQHandler
       0   RFECA0_IRQHandler
       0   RFECA1_IRQHandler
       8   Reset_Handler
         8   -> SystemInit
         8   -> __iar_program_start
       0   SEMBRX_IRQHandler
       0   SEMBTX_IRQHandler
       0   SETAMPERHOST_IRQHandler
       0   SMU_NS_PRIVILEGED_IRQHandler
       0   SMU_SECURE_IRQHandler
       0   SMU_S_PRIVILEGED_IRQHandler
       0   SVC_Handler
       0   SW0_IRQHandler
       0   SW1_IRQHandler
       0   SW2_IRQHandler
       0   SW3_IRQHandler
       0   SYNTH_IRQHandler
       0   SYSCFG_IRQHandler
       0   SYSRTC_APP_IRQHandler
       0   SYSRTC_SEQ_IRQHandler
       0   SecureFault_Handler
       0   SysTick_Handler
       0   TIMER0_IRQHandler
       0   TIMER1_IRQHandler
       0   TIMER2_IRQHandler
       0   TIMER3_IRQHandler
       0   TIMER4_IRQHandler
       0   ULFRCO_IRQHandler
       0   USART0_RX_IRQHandler
       0   USART0_TX_IRQHandler
       0   UsageFault_Handler
       0   VDAC0_IRQHandler
       0   WDOG0_IRQHandler
       0   WDOG1_IRQHandler
       0   sl_app_properties


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  NMI_Handler
          HardFault_Handler
          MemManage_Handler
          BusFault_Handler
          UsageFault_Handler
          SecureFault_Handler
          LFXO_IRQHandler
          HFRCO0_IRQHandler
          CMU_IRQHandler
          DPLL0_IRQHandler
          AGC_IRQHandler
          MODEM_IRQHandler
          MPAHBRAM_IRQHandler
          ULFRCO_IRQHandler
          TIMER4_IRQHandler
          PendSV_Handler
          GPIO_ODD_IRQHandler
          I2C1_IRQHandler
          RAC_RSM_IRQHandler
          DCDC_IRQHandler
          LDMA_IRQHandler
          PCNT0_IRQHandler
          SVC_Handler
          WDOG1_IRQHandler
          EUSART2_RX_IRQHandler
          SMU_S_PRIVILEGED_IRQHandler
          SYNTH_IRQHandler
          FRC_PRI_IRQHandler
          SW1_IRQHandler
          SW2_IRQHandler
          BURTC_IRQHandler
          BUFC_IRQHandler
          TIMER3_IRQHandler
          ICACHE0_IRQHandler
          ACMP0_IRQHandler
          HFRCOEM23_IRQHandler
          AES_IRQHandler
          IADC_IRQHandler
          MSC_IRQHandler
          TIMER2_IRQHandler
          EUSART0_RX_IRQHandler
          HOSTMAILBOX_IRQHandler
          EMUEFP_IRQHandler
          EMU_IRQHandler
          GPIO_EVEN_IRQHandler
          SYSCFG_IRQHandler
          EMUDG_IRQHandler
          RAC_SEQ_IRQHandler
          VDAC0_IRQHandler
          HFXO0_IRQHandler
          SW0_IRQHandler
          DebugMon_Handler
          SMU_SECURE_IRQHandler
          TIMER0_IRQHandler
          TIMER1_IRQHandler
          USART0_RX_IRQHandler
          EUSART0_TX_IRQHandler
          EUSART1_TX_IRQHandler
          SysTick_Handler
          USART0_TX_IRQHandler
          LETIMER0_IRQHandler
          SMU_NS_PRIVILEGED_IRQHandler
          EUSART1_RX_IRQHandler
          LFRCO_IRQHandler
          FRC_IRQHandler
          PROTIMER_IRQHandler
          ACMP1_IRQHandler
          EUSART2_TX_IRQHandler
          I2C0_IRQHandler
          WDOG0_IRQHandler
          SEMBTX_IRQHandler
          KERNEL0_IRQHandler
          M33CTI0_IRQHandler
          KERNEL1_IRQHandler
          SETAMPERHOST_IRQHandler
          LCD_IRQHandler
          M33CTI1_IRQHandler
          LESENSE_IRQHandler
          MVP_IRQHandler
          AHB2AHB1_IRQHandler
          FPUEXH_IRQHandler
          SEMBRX_IRQHandler
          SYSRTC_APP_IRQHandler
          SYSRTC_SEQ_IRQHandler
          RFECA0_IRQHandler
          KEYSCAN_IRQHandler
          SW3_IRQHandler
          RFECA1_IRQHandler
          AHB2AHB0_IRQHandler
          Default_Handler
          sl_app_properties
      12  Reset_Handler
     380  __vector_table

 
 380 bytes in section .intvec
  14 bytes in section .text
 
  14 bytes of CODE  memory
 380 bytes of CONST memory

Errors: none
Warnings: none
