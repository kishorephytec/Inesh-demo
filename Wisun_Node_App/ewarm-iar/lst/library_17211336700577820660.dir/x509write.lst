###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         29/Mar/2025  15:54:08
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\x509write.c
#    Command line                 =
#        -f "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\library_17211336700577820660.dir\x509write.o.rsp"
#        ("D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\x509write.c"
#        -D DEBUG_EFM=1 -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -lC "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\library_17211336700577820660.dir"
#        --diag_suppress Pa050 -o "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\library_17211336700577820660.dir"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse --cmse -e --fpu=VFPv5_sp --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\rail\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\wisun\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\.\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_project_info\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\Core\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\RTOS2\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\device_init\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emlib\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\iostream\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\preset\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\cpu\include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\ports\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\nvm3\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\peripheral\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_psa_driver\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\common\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ble\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ieee802154\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\wmbus\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\zwave\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\chip\efr32\efr32xg2x\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\sidewalk\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\rail_util_pti\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\segger\systemview\SEGGER\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\silicon_labs\silabs_core\memory_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\toolchain\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\system\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ns_list\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ping\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\udp_client\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\sleeptimer\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\plugin\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\socket\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\autogen\\" -On
#        --use_c++_inline) --dependencies=n "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\library_17211336700577820660.dir\x509write.o.iar_deps"
#    Locale                       =  C
#    List file                    =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\library_17211336700577820660.dir\x509write.lst
#    Object file                  =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\library_17211336700577820660.dir\x509write.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  0
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#
###############################################################################

D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\x509write.c
      1          /*
      2           *  X.509 internal, common functions for writing
      3           *
      4           *  Copyright The Mbed TLS Contributors
      5           *  SPDX-License-Identifier: Apache-2.0
      6           *
      7           *  Licensed under the Apache License, Version 2.0 (the "License"); you may
      8           *  not use this file except in compliance with the License.
      9           *  You may obtain a copy of the License at
     10           *
     11           *  http://www.apache.org/licenses/LICENSE-2.0
     12           *
     13           *  Unless required by applicable law or agreed to in writing, software
     14           *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
     15           *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     16           *  See the License for the specific language governing permissions and
     17           *  limitations under the License.
     18           */
     19          #include "common.h"
     20          #if defined(MBEDTLS_X509_CSR_WRITE_C) || defined(MBEDTLS_X509_CRT_WRITE_C)
     21          
     22          #include "mbedtls/x509_crt.h"
     23          #include "mbedtls/asn1write.h"
     24          #include "mbedtls/error.h"
     25          #include "mbedtls/oid.h"
     26          #include "mbedtls/platform.h"
     27          #include "mbedtls/platform_util.h"
     28          #include "mbedtls/md.h"
     29          
     30          #include <string.h>
     31          #include <stdint.h>
     32          
     33          #if defined(MBEDTLS_PEM_WRITE_C)
     34          #include "mbedtls/pem.h"
     35          #endif /* MBEDTLS_PEM_WRITE_C */
     36          
     37          #if defined(MBEDTLS_USE_PSA_CRYPTO)
     38          #include "psa/crypto.h"
     39          #include "mbedtls/psa_util.h"
     40          #include "md_psa.h"
     41          #endif /* MBEDTLS_USE_PSA_CRYPTO */
     42          
     43          #define CHECK_OVERFLOW_ADD(a, b) \
     44              do                         \
     45              {                           \
     46                  if (a > SIZE_MAX - (b)) \
     47                  { \
     48                      return MBEDTLS_ERR_X509_BAD_INPUT_DATA; \
     49                  }                            \
     50                  a += b; \
     51              } while (0)
     52          

   \                                 In section .text, align 4, keep-with-next
     53          int mbedtls_x509_write_set_san_common(mbedtls_asn1_named_data **extensions,
     54                                                const mbedtls_x509_san_list *san_list)
     55          {
   \                     mbedtls_x509_write_set_san_common: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB084             SUB      SP,SP,#+16
   \        0x6   0x0007             MOVS     R7,R0
   \        0x8   0x4688             MOV      R8,R1
     56              int ret = 0;
   \        0xA   0xF05F 0x0900      MOVS     R9,#+0
     57              const mbedtls_x509_san_list *cur;
     58              unsigned char *buf;
     59              unsigned char *p;
     60              size_t len;
     61              size_t buflen = 0;
   \        0xE   0x2200             MOVS     R2,#+0
     62          
     63              /* Determine the maximum size of the SubjectAltName list */
     64              for (cur = san_list; cur != NULL; cur = cur->next) {
   \       0x10   0x4644             MOV      R4,R8
   \                     ??mbedtls_x509_write_set_san_common_1: (+1)
   \       0x12   0x2C00             CMP      R4,#+0
   \       0x14   0xD044             BEQ.N    ??mbedtls_x509_write_set_san_common_2
     65                  /* Calculate size of the required buffer */
     66                  switch (cur->node.type) {
   \       0x16   0x6820             LDR      R0,[R4, #+0]
   \       0x18   0x1E40             SUBS     R0,R0,#+1
   \       0x1A   0x2801             CMP      R0,#+1
   \       0x1C   0xD904             BLS.N    ??mbedtls_x509_write_set_san_common_3
   \       0x1E   0x1EC0             SUBS     R0,R0,#+3
   \       0x20   0xD013             BEQ.N    ??mbedtls_x509_write_set_san_common_4
   \       0x22   0x1E80             SUBS     R0,R0,#+2
   \       0x24   0x2801             CMP      R0,#+1
   \       0x26   0xD837             BHI.N    ??mbedtls_x509_write_set_san_common_5
     67                      case MBEDTLS_X509_SAN_DNS_NAME:
     68                      case MBEDTLS_X509_SAN_UNIFORM_RESOURCE_IDENTIFIER:
     69                      case MBEDTLS_X509_SAN_IP_ADDRESS:
     70                      case MBEDTLS_X509_SAN_RFC822_NAME:
     71                          /* length of value for each name entry,
     72                           * maximum 4 bytes for the length field,
     73                           * 1 byte for the tag/type.
     74                           */
     75                          CHECK_OVERFLOW_ADD(buflen, cur->node.san.unstructured_name.len);
   \                     ??mbedtls_x509_write_set_san_common_3: (+1)
   \       0x28   0xF05F 0x31FF      MOVS     R1,#+4294967295
   \       0x2C   0x68A0             LDR      R0,[R4, #+8]
   \       0x2E   0x1A09             SUBS     R1,R1,R0
   \       0x30   0x4291             CMP      R1,R2
   \       0x32   0xD201             BCS.N    ??mbedtls_x509_write_set_san_common_6
   \       0x34   0x486F             LDR.N    R0,??mbedtls_x509_write_set_san_common_0+4
   \       0x36   0xE0D8             B.N      ??mbedtls_x509_write_set_san_common_7
   \                     ??mbedtls_x509_write_set_san_common_6: (+1)
   \       0x38   0x68A0             LDR      R0,[R4, #+8]
   \       0x3A   0x1882             ADDS     R2,R0,R2
     76                          CHECK_OVERFLOW_ADD(buflen, 4 + 1);
   \       0x3C   0xF112 0x0F05      CMN      R2,#+5
   \       0x40   0xD301             BCC.N    ??mbedtls_x509_write_set_san_common_8
   \       0x42   0x486C             LDR.N    R0,??mbedtls_x509_write_set_san_common_0+4
   \       0x44   0xE0D1             B.N      ??mbedtls_x509_write_set_san_common_7
   \                     ??mbedtls_x509_write_set_san_common_8: (+1)
   \       0x46   0x1D52             ADDS     R2,R2,#+5
     77                          break;
   \       0x48   0xE028             B.N      ??mbedtls_x509_write_set_san_common_9
     78                      case MBEDTLS_X509_SAN_DIRECTORY_NAME:
     79                      {
     80                          const mbedtls_asn1_named_data *chunk = &cur->node.san.directory_name;
   \                     ??mbedtls_x509_write_set_san_common_4: (+1)
   \       0x4A   0x1D21             ADDS     R1,R4,#+4
     81                          while (chunk != NULL) {
   \                     ??mbedtls_x509_write_set_san_common_10: (+1)
   \       0x4C   0x2900             CMP      R1,#+0
   \       0x4E   0xD01C             BEQ.N    ??mbedtls_x509_write_set_san_common_11
     82                              // Max 4 bytes for length, +1 for tag,
     83                              // additional 4 max for length, +1 for tag.
     84                              // See x509_write_name for more information.
     85                              CHECK_OVERFLOW_ADD(buflen, 4 + 1 + 4 + 1);
   \       0x50   0xF112 0x0F0A      CMN      R2,#+10
   \       0x54   0xD301             BCC.N    ??mbedtls_x509_write_set_san_common_12
   \       0x56   0x4867             LDR.N    R0,??mbedtls_x509_write_set_san_common_0+4
   \       0x58   0xE0C7             B.N      ??mbedtls_x509_write_set_san_common_7
   \                     ??mbedtls_x509_write_set_san_common_12: (+1)
   \       0x5A   0x320A             ADDS     R2,R2,#+10
     86                              CHECK_OVERFLOW_ADD(buflen, chunk->oid.len);
   \       0x5C   0xF05F 0x33FF      MOVS     R3,#+4294967295
   \       0x60   0x6848             LDR      R0,[R1, #+4]
   \       0x62   0x1A1B             SUBS     R3,R3,R0
   \       0x64   0x4293             CMP      R3,R2
   \       0x66   0xD201             BCS.N    ??mbedtls_x509_write_set_san_common_13
   \       0x68   0x4862             LDR.N    R0,??mbedtls_x509_write_set_san_common_0+4
   \       0x6A   0xE0BE             B.N      ??mbedtls_x509_write_set_san_common_7
   \                     ??mbedtls_x509_write_set_san_common_13: (+1)
   \       0x6C   0x6848             LDR      R0,[R1, #+4]
   \       0x6E   0x1882             ADDS     R2,R0,R2
     87                              CHECK_OVERFLOW_ADD(buflen, chunk->val.len);
   \       0x70   0xF05F 0x33FF      MOVS     R3,#+4294967295
   \       0x74   0x6908             LDR      R0,[R1, #+16]
   \       0x76   0x1A1B             SUBS     R3,R3,R0
   \       0x78   0x4293             CMP      R3,R2
   \       0x7A   0xD201             BCS.N    ??mbedtls_x509_write_set_san_common_14
   \       0x7C   0x485D             LDR.N    R0,??mbedtls_x509_write_set_san_common_0+4
   \       0x7E   0xE0B4             B.N      ??mbedtls_x509_write_set_san_common_7
   \                     ??mbedtls_x509_write_set_san_common_14: (+1)
   \       0x80   0x0010             MOVS     R0,R2
   \       0x82   0x690A             LDR      R2,[R1, #+16]
   \       0x84   0x1812             ADDS     R2,R2,R0
     88                              chunk = chunk->next;
   \       0x86   0x6989             LDR      R1,[R1, #+24]
   \       0x88   0xE7E0             B.N      ??mbedtls_x509_write_set_san_common_10
     89                          }
     90                          CHECK_OVERFLOW_ADD(buflen, 4 + 1);
   \                     ??mbedtls_x509_write_set_san_common_11: (+1)
   \       0x8A   0xF112 0x0F05      CMN      R2,#+5
   \       0x8E   0xD301             BCC.N    ??mbedtls_x509_write_set_san_common_15
   \       0x90   0x4858             LDR.N    R0,??mbedtls_x509_write_set_san_common_0+4
   \       0x92   0xE0AA             B.N      ??mbedtls_x509_write_set_san_common_7
   \                     ??mbedtls_x509_write_set_san_common_15: (+1)
   \       0x94   0x1D52             ADDS     R2,R2,#+5
     91                          break;
   \       0x96   0xE001             B.N      ??mbedtls_x509_write_set_san_common_9
     92                      }
     93                      default:
     94                          /* Not supported - return. */
     95                          return MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE;
   \                     ??mbedtls_x509_write_set_san_common_5: (+1)
   \       0x98   0x4857             LDR.N    R0,??mbedtls_x509_write_set_san_common_0+8
   \       0x9A   0xE0A6             B.N      ??mbedtls_x509_write_set_san_common_7
     96                  }
     97              }
   \                     ??mbedtls_x509_write_set_san_common_9: (+1)
   \       0x9C   0x6AA4             LDR      R4,[R4, #+40]
   \       0x9E   0xE7B8             B.N      ??mbedtls_x509_write_set_san_common_1
     98          
     99              /* Add the extra length field and tag */
    100              CHECK_OVERFLOW_ADD(buflen, 4 + 1);
   \                     ??mbedtls_x509_write_set_san_common_2: (+1)
   \       0xA0   0xF112 0x0F05      CMN      R2,#+5
   \       0xA4   0xD301             BCC.N    ??mbedtls_x509_write_set_san_common_16
   \       0xA6   0x4853             LDR.N    R0,??mbedtls_x509_write_set_san_common_0+4
   \       0xA8   0xE09F             B.N      ??mbedtls_x509_write_set_san_common_7
   \                     ??mbedtls_x509_write_set_san_common_16: (+1)
   \       0xAA   0x1D52             ADDS     R2,R2,#+5
   \       0xAC   0x9203             STR      R2,[SP, #+12]
    101          
    102              /* Allocate buffer */
    103              buf = mbedtls_calloc(1, buflen);
   \       0xAE   0x9903             LDR      R1,[SP, #+12]
   \       0xB0   0x2001             MOVS     R0,#+1
   \       0xB2   0x.... 0x....      BL       sl_calloc
   \       0xB6   0x0006             MOVS     R6,R0
    104              if (buf == NULL) {
   \       0xB8   0x2E00             CMP      R6,#+0
   \       0xBA   0xD102             BNE.N    ??mbedtls_x509_write_set_san_common_17
    105                  return MBEDTLS_ERR_ASN1_ALLOC_FAILED;
   \       0xBC   0xF07F 0x0069      MVNS     R0,#+105
   \       0xC0   0xE093             B.N      ??mbedtls_x509_write_set_san_common_7
    106              }
    107              p = buf + buflen;
   \                     ??mbedtls_x509_write_set_san_common_17: (+1)
   \       0xC2   0x9803             LDR      R0,[SP, #+12]
   \       0xC4   0x4430             ADD      R0,R6,R0
   \       0xC6   0x9002             STR      R0,[SP, #+8]
    108          
    109              /* Write ASN.1-based structure */
    110              cur = san_list;
   \       0xC8   0x4645             MOV      R5,R8
    111              len = 0;
   \       0xCA   0xF05F 0x0A00      MOVS     R10,#+0
    112              while (cur != NULL) {
   \                     ??mbedtls_x509_write_set_san_common_18: (+1)
   \       0xCE   0x2D00             CMP      R5,#+0
   \       0xD0   0xD05E             BEQ.N    ??mbedtls_x509_write_set_san_common_19
    113                  size_t single_san_len = 0;
   \       0xD2   0x2400             MOVS     R4,#+0
    114                  switch (cur->node.type) {
   \       0xD4   0x6828             LDR      R0,[R5, #+0]
   \       0xD6   0x1E40             SUBS     R0,R0,#+1
   \       0xD8   0x2801             CMP      R0,#+1
   \       0xDA   0xD904             BLS.N    ??mbedtls_x509_write_set_san_common_20
   \       0xDC   0x1EC0             SUBS     R0,R0,#+3
   \       0xDE   0xD029             BEQ.N    ??mbedtls_x509_write_set_san_common_21
   \       0xE0   0x1E80             SUBS     R0,R0,#+2
   \       0xE2   0x2801             CMP      R0,#+1
   \       0xE4   0xD845             BHI.N    ??mbedtls_x509_write_set_san_common_22
    115                      case MBEDTLS_X509_SAN_DNS_NAME:
    116                      case MBEDTLS_X509_SAN_RFC822_NAME:
    117                      case MBEDTLS_X509_SAN_UNIFORM_RESOURCE_IDENTIFIER:
    118                      case MBEDTLS_X509_SAN_IP_ADDRESS:
    119                      {
    120                          const unsigned char *unstructured_name =
    121                              (const unsigned char *) cur->node.san.unstructured_name.p;
   \                     ??mbedtls_x509_write_set_san_common_20: (+1)
   \       0xE6   0x68E8             LDR      R0,[R5, #+12]
   \       0xE8   0x9000             STR      R0,[SP, #+0]
    122                          size_t unstructured_name_len = cur->node.san.unstructured_name.len;
   \       0xEA   0xF8D5 0xB008      LDR      R11,[R5, #+8]
    123          
    124                          MBEDTLS_ASN1_CHK_CLEANUP_ADD(single_san_len,
    125                                                       mbedtls_asn1_write_raw_buffer(
    126                                                           &p, buf,
    127                                                           unstructured_name, unstructured_name_len));
   \       0xEE   0x465B             MOV      R3,R11
   \       0xF0   0x9A00             LDR      R2,[SP, #+0]
   \       0xF2   0x0031             MOVS     R1,R6
   \       0xF4   0xA802             ADD      R0,SP,#+8
   \       0xF6   0x.... 0x....      BL       mbedtls_asn1_write_raw_buffer
   \       0xFA   0x4681             MOV      R9,R0
   \       0xFC   0x2800             CMP      R0,#+0
   \       0xFE   0xD470             BMI.N    ??mbedtls_x509_write_set_san_common_23
   \                     ??mbedtls_x509_write_set_san_common_24: (+1)
   \      0x100   0xEB19 0x0404      ADDS     R4,R9,R4
    128                          MBEDTLS_ASN1_CHK_CLEANUP_ADD(single_san_len, mbedtls_asn1_write_len(
    129                                                           &p, buf, unstructured_name_len));
   \      0x104   0x465A             MOV      R2,R11
   \      0x106   0x0031             MOVS     R1,R6
   \      0x108   0xA802             ADD      R0,SP,#+8
   \      0x10A   0x.... 0x....      BL       mbedtls_asn1_write_len
   \      0x10E   0x4681             MOV      R9,R0
   \      0x110   0x2800             CMP      R0,#+0
   \      0x112   0xD466             BMI.N    ??mbedtls_x509_write_set_san_common_23
   \                     ??mbedtls_x509_write_set_san_common_25: (+1)
   \      0x114   0xEB19 0x0404      ADDS     R4,R9,R4
    130                          MBEDTLS_ASN1_CHK_CLEANUP_ADD(single_san_len,
    131                                                       mbedtls_asn1_write_tag(
    132                                                           &p, buf,
    133                                                           MBEDTLS_ASN1_CONTEXT_SPECIFIC | cur->node.type));
   \      0x118   0x682A             LDR      R2,[R5, #+0]
   \      0x11A   0xF052 0x0280      ORRS     R2,R2,#0x80
   \      0x11E   0xB2D2             UXTB     R2,R2
   \      0x120   0x0031             MOVS     R1,R6
   \      0x122   0xA802             ADD      R0,SP,#+8
   \      0x124   0x.... 0x....      BL       mbedtls_asn1_write_tag
   \      0x128   0x4681             MOV      R9,R0
   \      0x12A   0x2800             CMP      R0,#+0
   \      0x12C   0xD459             BMI.N    ??mbedtls_x509_write_set_san_common_23
   \                     ??mbedtls_x509_write_set_san_common_26: (+1)
   \      0x12E   0xEB19 0x0404      ADDS     R4,R9,R4
    134                      }
    135                      break;
   \      0x132   0xE021             B.N      ??mbedtls_x509_write_set_san_common_27
    136                      case MBEDTLS_X509_SAN_DIRECTORY_NAME:
    137                          MBEDTLS_ASN1_CHK_CLEANUP_ADD(single_san_len,
    138                                                       mbedtls_x509_write_names(&p, buf,
    139                                                                                (mbedtls_asn1_named_data *) &
    140                                                                                cur->node
    141                                                                                .san.directory_name));
   \                     ??mbedtls_x509_write_set_san_common_21: (+1)
   \      0x134   0x1D2A             ADDS     R2,R5,#+4
   \      0x136   0x0031             MOVS     R1,R6
   \      0x138   0xA802             ADD      R0,SP,#+8
   \      0x13A   0x.... 0x....      BL       mbedtls_x509_write_names
   \      0x13E   0x4681             MOV      R9,R0
   \      0x140   0x2800             CMP      R0,#+0
   \      0x142   0xD44E             BMI.N    ??mbedtls_x509_write_set_san_common_23
   \                     ??mbedtls_x509_write_set_san_common_28: (+1)
   \      0x144   0xEB19 0x0404      ADDS     R4,R9,R4
    142                          MBEDTLS_ASN1_CHK_CLEANUP_ADD(single_san_len,
    143                                                       mbedtls_asn1_write_len(&p, buf, single_san_len));
   \      0x148   0x0022             MOVS     R2,R4
   \      0x14A   0x0031             MOVS     R1,R6
   \      0x14C   0xA802             ADD      R0,SP,#+8
   \      0x14E   0x.... 0x....      BL       mbedtls_asn1_write_len
   \      0x152   0x4681             MOV      R9,R0
   \      0x154   0x2800             CMP      R0,#+0
   \      0x156   0xD444             BMI.N    ??mbedtls_x509_write_set_san_common_23
   \                     ??mbedtls_x509_write_set_san_common_29: (+1)
   \      0x158   0xEB19 0x0404      ADDS     R4,R9,R4
    144                          MBEDTLS_ASN1_CHK_CLEANUP_ADD(single_san_len,
    145                                                       mbedtls_asn1_write_tag(&p, buf,
    146                                                                              MBEDTLS_ASN1_CONTEXT_SPECIFIC |
    147                                                                              MBEDTLS_ASN1_CONSTRUCTED |
    148                                                                              MBEDTLS_X509_SAN_DIRECTORY_NAME));
   \      0x15C   0x22A4             MOVS     R2,#+164
   \      0x15E   0x0031             MOVS     R1,R6
   \      0x160   0xA802             ADD      R0,SP,#+8
   \      0x162   0x.... 0x....      BL       mbedtls_asn1_write_tag
   \      0x166   0x4681             MOV      R9,R0
   \      0x168   0x2800             CMP      R0,#+0
   \      0x16A   0xD43A             BMI.N    ??mbedtls_x509_write_set_san_common_23
   \                     ??mbedtls_x509_write_set_san_common_30: (+1)
   \      0x16C   0xEB19 0x0404      ADDS     R4,R9,R4
    149                          break;
   \      0x170   0xE002             B.N      ??mbedtls_x509_write_set_san_common_27
    150                      default:
    151                          /* Error out on an unsupported SAN */
    152                          ret = MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE;
   \                     ??mbedtls_x509_write_set_san_common_22: (+1)
   \      0x172   0x4821             LDR.N    R0,??mbedtls_x509_write_set_san_common_0+8
   \      0x174   0x4681             MOV      R9,R0
    153                          goto cleanup;
   \      0x176   0xE034             B.N      ??mbedtls_x509_write_set_san_common_23
    154                  }
    155                  cur = cur->next;
   \                     ??mbedtls_x509_write_set_san_common_27: (+1)
   \      0x178   0x6AAD             LDR      R5,[R5, #+40]
    156                  /* check for overflow */
    157                  if (len > SIZE_MAX - single_san_len) {
   \      0x17A   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x17E   0x1B00             SUBS     R0,R0,R4
   \      0x180   0x4550             CMP      R0,R10
   \      0x182   0xD202             BCS.N    ??mbedtls_x509_write_set_san_common_31
    158                      ret = MBEDTLS_ERR_X509_BAD_INPUT_DATA;
   \      0x184   0x481B             LDR.N    R0,??mbedtls_x509_write_set_san_common_0+4
   \      0x186   0x4681             MOV      R9,R0
    159                      goto cleanup;
   \      0x188   0xE02B             B.N      ??mbedtls_x509_write_set_san_common_23
    160                  }
    161                  len += single_san_len;
   \                     ??mbedtls_x509_write_set_san_common_31: (+1)
   \      0x18A   0xEB14 0x0A0A      ADDS     R10,R4,R10
   \      0x18E   0xE79E             B.N      ??mbedtls_x509_write_set_san_common_18
    162              }
    163          
    164              MBEDTLS_ASN1_CHK_CLEANUP_ADD(len, mbedtls_asn1_write_len(&p, buf, len));
   \                     ??mbedtls_x509_write_set_san_common_19: (+1)
   \      0x190   0x4652             MOV      R2,R10
   \      0x192   0x0031             MOVS     R1,R6
   \      0x194   0xA802             ADD      R0,SP,#+8
   \      0x196   0x.... 0x....      BL       mbedtls_asn1_write_len
   \      0x19A   0x4681             MOV      R9,R0
   \      0x19C   0x2800             CMP      R0,#+0
   \      0x19E   0xD420             BMI.N    ??mbedtls_x509_write_set_san_common_23
   \                     ??mbedtls_x509_write_set_san_common_32: (+1)
   \      0x1A0   0xEB19 0x0A0A      ADDS     R10,R9,R10
    165              MBEDTLS_ASN1_CHK_CLEANUP_ADD(len,
    166                                           mbedtls_asn1_write_tag(&p, buf,
    167                                                                  MBEDTLS_ASN1_CONSTRUCTED |
    168                                                                  MBEDTLS_ASN1_SEQUENCE));
   \      0x1A4   0x2230             MOVS     R2,#+48
   \      0x1A6   0x0031             MOVS     R1,R6
   \      0x1A8   0xA802             ADD      R0,SP,#+8
   \      0x1AA   0x.... 0x....      BL       mbedtls_asn1_write_tag
   \      0x1AE   0x4681             MOV      R9,R0
   \      0x1B0   0x2800             CMP      R0,#+0
   \      0x1B2   0xD416             BMI.N    ??mbedtls_x509_write_set_san_common_23
   \                     ??mbedtls_x509_write_set_san_common_33: (+1)
   \      0x1B4   0xEB19 0x0A0A      ADDS     R10,R9,R10
    169          
    170              ret = mbedtls_x509_set_extension(extensions,
    171                                               MBEDTLS_OID_SUBJECT_ALT_NAME,
    172                                               MBEDTLS_OID_SIZE(MBEDTLS_OID_SUBJECT_ALT_NAME),
    173                                               0,
    174                                               buf + buflen - len, len);
   \      0x1B8   0xF8CD 0xA004      STR      R10,[SP, #+4]
   \      0x1BC   0x9803             LDR      R0,[SP, #+12]
   \      0x1BE   0x4430             ADD      R0,R6,R0
   \      0x1C0   0xF1DA 0x0100      RSBS     R1,R10,#+0
   \      0x1C4   0x4408             ADD      R0,R0,R1
   \      0x1C6   0x9000             STR      R0,[SP, #+0]
   \      0x1C8   0x2300             MOVS     R3,#+0
   \      0x1CA   0x2203             MOVS     R2,#+3
   \      0x1CC   0xA108             ADR.N    R1,??mbedtls_x509_write_set_san_common_0
   \      0x1CE   0x0038             MOVS     R0,R7
   \      0x1D0   0x.... 0x....      BL       mbedtls_x509_set_extension
   \      0x1D4   0x4681             MOV      R9,R0
    175          
    176              /* If we exceeded the allocated buffer it means that maximum size of the SubjectAltName list
    177               * was incorrectly calculated and memory is corrupted. */
    178              if (p < buf) {
   \      0x1D6   0x9802             LDR      R0,[SP, #+8]
   \      0x1D8   0x42B0             CMP      R0,R6
   \      0x1DA   0xD202             BCS.N    ??mbedtls_x509_write_set_san_common_23
    179                  ret = MBEDTLS_ERR_ASN1_LENGTH_MISMATCH;
   \      0x1DC   0xF07F 0x0065      MVNS     R0,#+101
   \      0x1E0   0x4681             MOV      R9,R0
    180              }
    181          cleanup:
    182              mbedtls_free(buf);
   \                     ??mbedtls_x509_write_set_san_common_23: (+1)
   \      0x1E2   0x0030             MOVS     R0,R6
   \      0x1E4   0x.... 0x....      BL       sl_free
    183              return ret;
   \      0x1E8   0x4648             MOV      R0,R9
   \                     ??mbedtls_x509_write_set_san_common_7: (+1)
   \      0x1EA   0xB005             ADD      SP,SP,#+20
   \      0x1EC   0xE8BD 0x8FF0      POP      {R4-R11,PC}
   \                     ??mbedtls_x509_write_set_san_common_0:
   \      0x1F0   0x55 0x1D          DC8      "U\035\021"    
   \              0x11 0x00
   \      0x1F4   0xFFFF'D800        DC32     0xffffd800
   \      0x1F8   0xFFFF'DF80        DC32     0xffffdf80
    184          }

   \                                 In section .rodata, align 4
   \        0x0   0x55 0x1D          DC8 "U\035\021"
   \              0x11 0x00
    185          
    186          #endif /* MBEDTLS_X509_CSR_WRITE_C || MBEDTLS_X509_CRT_WRITE_C */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      56   mbedtls_x509_write_set_san_common
        56   -> mbedtls_asn1_write_len
        56   -> mbedtls_asn1_write_raw_buffer
        56   -> mbedtls_asn1_write_tag
        56   -> mbedtls_x509_set_extension
        56   -> mbedtls_x509_write_names
        56   -> sl_calloc
        56   -> sl_free


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?_0
     508  mbedtls_x509_write_set_san_common

 
   4 bytes in section .rodata
 508 bytes in section .text
 
 508 bytes of CODE  memory
   4 bytes of CONST memory

Errors: none
Warnings: none
