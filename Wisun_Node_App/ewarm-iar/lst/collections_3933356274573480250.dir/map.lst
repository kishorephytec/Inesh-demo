###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         29/Mar/2025  15:53:26
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\collections\map.c
#    Command line      =
#        -f "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\collections_3933356274573480250.dir\map.o.rsp"
#        ("D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\collections\map.c"
#        -D DEBUG_EFM=1 -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -lC "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\collections_3933356274573480250.dir"
#        --diag_suppress Pa050 -o "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\collections_3933356274573480250.dir"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse --cmse -e --fpu=VFPv5_sp --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\collections\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\rail\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\config\wisun\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\.\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\Device\SiliconLabs\EFR32FG28\Include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_project_info\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\cli\src\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\Core\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\CMSIS\RTOS2\Include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\device_init\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\common\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emlib\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\iostream\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\config\preset\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_mbedtls_support\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\mbedtls\library\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\cpu\include\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\ports\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\source\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\kernel\include\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\emdrv\nvm3\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\peripheral\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\printf\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\sl_psa_driver\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\common\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ble\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\ieee802154\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\wmbus\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\zwave\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\chip\efr32\efr32xg2x\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\protocol\sidewalk\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\radio\rail_lib\plugin\rail_util_pti\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\inc\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\security\sl_component\se_manager\src\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\third_party\segger\systemview\SEGGER\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\util\silicon_labs\silabs_core\memory_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\common\toolchain\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\system\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_core\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\app_setting\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\cli_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\event_manager\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ns_list\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\ping\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\\"
#        -I "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\app\wisun\component\udp_client\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\platform\service\sleeptimer\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\plugin\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\gecko_sdk_4.4.5\protocol\wisun\stack\inc\socket\\" -I
#        "D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\autogen\\" -On
#        --use_c++_inline) --dependencies=n "D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\collections_3933356274573480250.dir\map.o.iar_deps"
#    Locale            =  C
#    List file         =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\lst\collections_3933356274573480250.dir\map.lst
#    Object file       =
#        D:\Inesh_wisun\Wisun_Node_App
#        1\Wisun_Node_App\ewarm-iar\obj\collections_3933356274573480250.dir\map.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

D:\Inesh_wisun\Wisun_Node_App 1\Wisun_Node_App\gecko_sdk_4.4.5\platform\micrium_os\common\source\collections\map.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Common - Map Interface
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * The licensor of this software is Silicon Laboratories Inc.  Your use of this
     10           * software is governed by the terms of Silicon Labs Master Software License
     11           * Agreement (MSLA) available at
     12           * www.silabs.com/about-us/legal/master-software-license-agreement.  This
     13           * software is distributed to you in Source Code format and is governed by the
     14           * sections of the MSLA applicable to Source Code.
     15           *
     16           ******************************************************************************/
     17          
     18          /********************************************************************************************************
     19           ********************************************************************************************************
     20           *                                               INCLUDE FILES
     21           ********************************************************************************************************
     22           *******************************************************************************************************/
     23          
     24          #include  <common/source/collections/map_priv.h>
     25          
     26          #include  <cpu/include/cpu.h>
     27          #include  <common/include/lib_def.h>
     28          
     29          #include  <common/source/rtos/rtos_utils_priv.h>
     30          
     31          /********************************************************************************************************
     32           ********************************************************************************************************
     33           *                                               LOCAL DEFINES
     34           ********************************************************************************************************
     35           *******************************************************************************************************/
     36          
     37          #define  LOG_DFLT_CH                       (COMMON, COLLECTIONS, MAP)
     38          #define  RTOS_MODULE_CUR                    RTOS_CFG_MODULE_COMMON
     39          
     40          /********************************************************************************************************
     41           ********************************************************************************************************
     42           *                                       LOCAL FUNCTION PROTOTYPES
     43           ********************************************************************************************************
     44           *******************************************************************************************************/
     45          
     46          static CPU_BOOLEAN MapItemExists(MAP_INSTANCE *p_map_instance,
     47                                           MAP_ITEM     *p_map_item);
     48          
     49          static CPU_BOOLEAN MapKeyExists(MAP_INSTANCE *p_map_instance,
     50                                          CPU_CHAR     *key);
     51          
     52          /********************************************************************************************************
     53           ********************************************************************************************************
     54           *                                           GLOBAL FUNCTIONS
     55           ********************************************************************************************************
     56           *******************************************************************************************************/
     57          
     58          /****************************************************************************************************//**
     59           *                                                   MapInit()
     60           *
     61           * @brief    Initializes map instance object.
     62           *
     63           * @param    p_map_instance  Pointer to map instance object.
     64           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     65          void MapInit(MAP_INSTANCE *p_map_instance)
     66          {
   \                     MapInit: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
     67            RTOS_ASSERT_DBG((p_map_instance != DEF_NULL), RTOS_ERR_NULL_PTR,; );
   \        0x4   0x2C00             CMP      R4,#+0
   \        0x6   0xD100             BNE.N    ??MapInit_0
   \                     ??MapInit_1: (+1)
   \        0x8   0xE7FE             B.N      ??MapInit_1
     68          
     69            SList_Init((SLIST_MEMBER **)p_map_instance);
   \                     ??MapInit_0: (+1)
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0x.... 0x....      BL       SList_Init
     70          }
   \       0x10   0xBD10             POP      {R4,PC}
     71          
     72          /****************************************************************************************************//**
     73           *                                               MapItemAdd()
     74           *
     75           * @brief    Add item to map instance.
     76           *
     77           * @param    p_map_instance  Pointer to map instance object.
     78           *
     79           * @param    p_map_item      Pointer to map item to add to map instance.
     80           *
     81           * @param    p_err           Pointer to the variable that will receive one of the following error
     82           *                           code(s) from this function:
     83           *                               - RTOS_ERR_NONE
     84           *                               - RTOS_ERR_ALREADY_EXISTS
     85           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     86          void MapItemAdd(MAP_INSTANCE *p_map_instance,
     87                          MAP_ITEM     *p_map_item,
     88                          RTOS_ERR     *p_err)
     89          {
   \                     MapItemAdd: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
     90            RTOS_ASSERT_DBG_ERR_PTR_VALIDATE(p_err,; );
   \        0x8   0x2E00             CMP      R6,#+0
   \        0xA   0xD101             BNE.N    ??MapItemAdd_0
   \        0xC   0x.... 0x....      BL       CPU_SW_Exception
     91          
     92            RTOS_ASSERT_DBG_ERR_SET((p_map_instance != DEF_NULL), *p_err, RTOS_ERR_NULL_PTR,; );
   \                     ??MapItemAdd_0: (+1)
   \       0x10   0x2C00             CMP      R4,#+0
   \       0x12   0xD108             BNE.N    ??MapItemAdd_1
   \       0x14   0x200A             MOVS     R0,#+10
   \       0x16   0x7030             STRB     R0,[R6, #+0]
   \       0x18   0x....             LDR.N    R0,??DataTable5
   \       0x1A   0x6070             STR      R0,[R6, #+4]
   \       0x1C   0x205C             MOVS     R0,#+92
   \       0x1E   0x60B0             STR      R0,[R6, #+8]
   \       0x20   0x....             LDR.N    R0,??DataTable5_1
   \       0x22   0x60F0             STR      R0,[R6, #+12]
   \                     ??MapItemAdd_2: (+1)
   \       0x24   0xE7FE             B.N      ??MapItemAdd_2
     93            RTOS_ASSERT_DBG_ERR_SET((p_map_item != DEF_NULL), *p_err, RTOS_ERR_NULL_PTR,; );
   \                     ??MapItemAdd_1: (+1)
   \       0x26   0x2D00             CMP      R5,#+0
   \       0x28   0xD108             BNE.N    ??MapItemAdd_3
   \       0x2A   0x200A             MOVS     R0,#+10
   \       0x2C   0x7030             STRB     R0,[R6, #+0]
   \       0x2E   0x....             LDR.N    R0,??DataTable5
   \       0x30   0x6070             STR      R0,[R6, #+4]
   \       0x32   0x205D             MOVS     R0,#+93
   \       0x34   0x60B0             STR      R0,[R6, #+8]
   \       0x36   0x....             LDR.N    R0,??DataTable5_1
   \       0x38   0x60F0             STR      R0,[R6, #+12]
   \                     ??MapItemAdd_4: (+1)
   \       0x3A   0xE7FE             B.N      ??MapItemAdd_4
     94          
     95            if (MapItemExists(p_map_instance, p_map_item)) {
   \                     ??MapItemAdd_3: (+1)
   \       0x3C   0x0029             MOVS     R1,R5
   \       0x3E   0x0020             MOVS     R0,R4
   \       0x40   0x.... 0x....      BL       MapItemExists
   \       0x44   0x2800             CMP      R0,#+0
   \       0x46   0xD008             BEQ.N    ??MapItemAdd_5
     96              RTOS_ERR_SET(*p_err, RTOS_ERR_ALREADY_EXISTS);
   \       0x48   0x2015             MOVS     R0,#+21
   \       0x4A   0x7030             STRB     R0,[R6, #+0]
   \       0x4C   0x....             LDR.N    R0,??DataTable5
   \       0x4E   0x6070             STR      R0,[R6, #+4]
   \       0x50   0x2060             MOVS     R0,#+96
   \       0x52   0x60B0             STR      R0,[R6, #+8]
   \       0x54   0x....             LDR.N    R0,??DataTable5_1
   \       0x56   0x60F0             STR      R0,[R6, #+12]
     97              return;
   \       0x58   0xE01A             B.N      ??MapItemAdd_6
     98            }
     99          
    100            if (MapKeyExists(p_map_instance, p_map_item->Key)) {
   \                     ??MapItemAdd_5: (+1)
   \       0x5A   0x6869             LDR      R1,[R5, #+4]
   \       0x5C   0x0020             MOVS     R0,R4
   \       0x5E   0x.... 0x....      BL       MapKeyExists
   \       0x62   0x2800             CMP      R0,#+0
   \       0x64   0xD008             BEQ.N    ??MapItemAdd_7
    101              RTOS_ERR_SET(*p_err, RTOS_ERR_ALREADY_EXISTS);
   \       0x66   0x2015             MOVS     R0,#+21
   \       0x68   0x7030             STRB     R0,[R6, #+0]
   \       0x6A   0x....             LDR.N    R0,??DataTable5
   \       0x6C   0x6070             STR      R0,[R6, #+4]
   \       0x6E   0x2065             MOVS     R0,#+101
   \       0x70   0x60B0             STR      R0,[R6, #+8]
   \       0x72   0x....             LDR.N    R0,??DataTable5_1
   \       0x74   0x60F0             STR      R0,[R6, #+12]
    102              return;
   \       0x76   0xE00B             B.N      ??MapItemAdd_6
    103            }
    104          
    105            SList_Push((SLIST_MEMBER **)p_map_instance,
    106                       &p_map_item->ListNode);
   \                     ??MapItemAdd_7: (+1)
   \       0x78   0x0029             MOVS     R1,R5
   \       0x7A   0x0020             MOVS     R0,R4
   \       0x7C   0x.... 0x....      BL       SList_Push
    107          
    108            RTOS_ERR_SET(*p_err, RTOS_ERR_NONE);
   \       0x80   0x2000             MOVS     R0,#+0
   \       0x82   0x7030             STRB     R0,[R6, #+0]
   \       0x84   0x....             LDR.N    R0,??DataTable5
   \       0x86   0x6070             STR      R0,[R6, #+4]
   \       0x88   0x206C             MOVS     R0,#+108
   \       0x8A   0x60B0             STR      R0,[R6, #+8]
   \       0x8C   0x....             LDR.N    R0,??DataTable5_1
   \       0x8E   0x60F0             STR      R0,[R6, #+12]
    109          
    110            return;
   \                     ??MapItemAdd_6: (+1)
   \       0x90   0xBD70             POP      {R4-R6,PC}
    111          }
    112          
    113          /****************************************************************************************************//**
    114           *                                               MapItemRemove()
    115           *
    116           * @brief    Remove map item from map instance.
    117           *
    118           * @param    p_map_instance  Pointer to map instance object.
    119           *
    120           * @param    p_map_item      Pointer to map item to remove from map instance.
    121           *
    122           * @param    p_err           Pointer to the variable that will receive one of the following error
    123           *                           code(s) from this function:
    124           *                               - RTOS_ERR_NONE
    125           *                               - RTOS_ERR_NOT_FOUND
    126           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    127          void MapItemRemove(MAP_INSTANCE *p_map_instance,
    128                             MAP_ITEM     *p_map_item,
    129                             RTOS_ERR     *p_err)
    130          {
   \                     MapItemRemove: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
    131            RTOS_ASSERT_DBG_ERR_PTR_VALIDATE(p_err,; );
   \        0x8   0x2E00             CMP      R6,#+0
   \        0xA   0xD101             BNE.N    ??MapItemRemove_0
   \        0xC   0x.... 0x....      BL       CPU_SW_Exception
    132          
    133            RTOS_ASSERT_DBG_ERR_SET((p_map_instance != DEF_NULL), *p_err, RTOS_ERR_NULL_PTR,; );
   \                     ??MapItemRemove_0: (+1)
   \       0x10   0x2C00             CMP      R4,#+0
   \       0x12   0xD108             BNE.N    ??MapItemRemove_1
   \       0x14   0x200A             MOVS     R0,#+10
   \       0x16   0x7030             STRB     R0,[R6, #+0]
   \       0x18   0x....             LDR.N    R0,??DataTable5
   \       0x1A   0x6070             STR      R0,[R6, #+4]
   \       0x1C   0x2085             MOVS     R0,#+133
   \       0x1E   0x60B0             STR      R0,[R6, #+8]
   \       0x20   0x....             LDR.N    R0,??DataTable5_2
   \       0x22   0x60F0             STR      R0,[R6, #+12]
   \                     ??MapItemRemove_2: (+1)
   \       0x24   0xE7FE             B.N      ??MapItemRemove_2
    134            RTOS_ASSERT_DBG_ERR_SET((p_map_item != DEF_NULL), *p_err, RTOS_ERR_NULL_PTR,; );
   \                     ??MapItemRemove_1: (+1)
   \       0x26   0x2D00             CMP      R5,#+0
   \       0x28   0xD108             BNE.N    ??MapItemRemove_3
   \       0x2A   0x200A             MOVS     R0,#+10
   \       0x2C   0x7030             STRB     R0,[R6, #+0]
   \       0x2E   0x....             LDR.N    R0,??DataTable5
   \       0x30   0x6070             STR      R0,[R6, #+4]
   \       0x32   0x2086             MOVS     R0,#+134
   \       0x34   0x60B0             STR      R0,[R6, #+8]
   \       0x36   0x....             LDR.N    R0,??DataTable5_2
   \       0x38   0x60F0             STR      R0,[R6, #+12]
   \                     ??MapItemRemove_4: (+1)
   \       0x3A   0xE7FE             B.N      ??MapItemRemove_4
    135          
    136            if (MapItemExists(p_map_instance, p_map_item)) {
   \                     ??MapItemRemove_3: (+1)
   \       0x3C   0x0029             MOVS     R1,R5
   \       0x3E   0x0020             MOVS     R0,R4
   \       0x40   0x.... 0x....      BL       MapItemExists
   \       0x44   0x2800             CMP      R0,#+0
   \       0x46   0xD00C             BEQ.N    ??MapItemRemove_5
    137              SList_Rem((SLIST_MEMBER **)p_map_instance, &(p_map_item->ListNode));
   \       0x48   0x0029             MOVS     R1,R5
   \       0x4A   0x0020             MOVS     R0,R4
   \       0x4C   0x.... 0x....      BL       SList_Rem
    138              RTOS_ERR_SET(*p_err, RTOS_ERR_NONE);
   \       0x50   0x2000             MOVS     R0,#+0
   \       0x52   0x7030             STRB     R0,[R6, #+0]
   \       0x54   0x....             LDR.N    R0,??DataTable5
   \       0x56   0x6070             STR      R0,[R6, #+4]
   \       0x58   0x208A             MOVS     R0,#+138
   \       0x5A   0x60B0             STR      R0,[R6, #+8]
   \       0x5C   0x....             LDR.N    R0,??DataTable5_2
   \       0x5E   0x60F0             STR      R0,[R6, #+12]
   \       0x60   0xE007             B.N      ??MapItemRemove_6
    139            } else {
    140              RTOS_ERR_SET(*p_err, RTOS_ERR_NOT_FOUND);
   \                     ??MapItemRemove_5: (+1)
   \       0x62   0x200F             MOVS     R0,#+15
   \       0x64   0x7030             STRB     R0,[R6, #+0]
   \       0x66   0x....             LDR.N    R0,??DataTable5
   \       0x68   0x6070             STR      R0,[R6, #+4]
   \       0x6A   0x208C             MOVS     R0,#+140
   \       0x6C   0x60B0             STR      R0,[R6, #+8]
   \       0x6E   0x....             LDR.N    R0,??DataTable5_2
   \       0x70   0x60F0             STR      R0,[R6, #+12]
    141            }
    142          
    143            return;
   \                     ??MapItemRemove_6: (+1)
   \       0x72   0xBD70             POP      {R4-R6,PC}
    144          }
    145          
    146          /****************************************************************************************************//**
    147           *                                               MapKeyRemove()
    148           *
    149           * @brief    Remove map item associated to 'key'.
    150           *
    151           * @param    p_map_instance  Pointer to map instance object.
    152           *
    153           * @param    key             String containing key of map item to remove.
    154           *
    155           * @param    p_err           Pointer to the variable that will receive one of the following error
    156           *                           code(s) from this function:
    157           *                               - RTOS_ERR_NONE
    158           *                               - RTOS_ERR_NOT_FOUND
    159           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    160          void MapKeyRemove(MAP_INSTANCE *p_map_instance,
    161                            CPU_CHAR     *key,
    162                            RTOS_ERR     *p_err)
    163          {
   \                     MapKeyRemove: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
    164            MAP_ITEM *p_remove_item;
    165          
    166            RTOS_ASSERT_DBG_ERR_PTR_VALIDATE(p_err,; );
   \        0x8   0x2E00             CMP      R6,#+0
   \        0xA   0xD101             BNE.N    ??MapKeyRemove_0
   \        0xC   0x.... 0x....      BL       CPU_SW_Exception
    167          
    168            RTOS_ASSERT_DBG_ERR_SET((p_map_instance != DEF_NULL), *p_err, RTOS_ERR_NULL_PTR,; );
   \                     ??MapKeyRemove_0: (+1)
   \       0x10   0x2C00             CMP      R4,#+0
   \       0x12   0xD108             BNE.N    ??MapKeyRemove_1
   \       0x14   0x200A             MOVS     R0,#+10
   \       0x16   0x7030             STRB     R0,[R6, #+0]
   \       0x18   0x....             LDR.N    R0,??DataTable5
   \       0x1A   0x6070             STR      R0,[R6, #+4]
   \       0x1C   0x20A8             MOVS     R0,#+168
   \       0x1E   0x60B0             STR      R0,[R6, #+8]
   \       0x20   0x....             LDR.N    R0,??DataTable5_3
   \       0x22   0x60F0             STR      R0,[R6, #+12]
   \                     ??MapKeyRemove_2: (+1)
   \       0x24   0xE7FE             B.N      ??MapKeyRemove_2
    169            RTOS_ASSERT_DBG_ERR_SET((key != DEF_NULL), *p_err, RTOS_ERR_NULL_PTR,; );
   \                     ??MapKeyRemove_1: (+1)
   \       0x26   0x2D00             CMP      R5,#+0
   \       0x28   0xD108             BNE.N    ??MapKeyRemove_3
   \       0x2A   0x200A             MOVS     R0,#+10
   \       0x2C   0x7030             STRB     R0,[R6, #+0]
   \       0x2E   0x....             LDR.N    R0,??DataTable5
   \       0x30   0x6070             STR      R0,[R6, #+4]
   \       0x32   0x20A9             MOVS     R0,#+169
   \       0x34   0x60B0             STR      R0,[R6, #+8]
   \       0x36   0x....             LDR.N    R0,??DataTable5_3
   \       0x38   0x60F0             STR      R0,[R6, #+12]
   \                     ??MapKeyRemove_4: (+1)
   \       0x3A   0xE7FE             B.N      ??MapKeyRemove_4
    170          
    171            p_remove_item = MapKeyItemGet(p_map_instance, key, p_err);
   \                     ??MapKeyRemove_3: (+1)
   \       0x3C   0x0032             MOVS     R2,R6
   \       0x3E   0x0029             MOVS     R1,R5
   \       0x40   0x0020             MOVS     R0,R4
   \       0x42   0x.... 0x....      BL       MapKeyItemGet
   \       0x46   0x0007             MOVS     R7,R0
    172            if (RTOS_ERR_CODE_GET(*p_err) == RTOS_ERR_NONE) {
   \       0x48   0x7830             LDRB     R0,[R6, #+0]
   \       0x4A   0x2800             CMP      R0,#+0
   \       0x4C   0xD103             BNE.N    ??MapKeyRemove_5
    173              SList_Rem((SLIST_MEMBER **)p_map_instance, &(p_remove_item->ListNode));
   \       0x4E   0x0039             MOVS     R1,R7
   \       0x50   0x0020             MOVS     R0,R4
   \       0x52   0x.... 0x....      BL       SList_Rem
    174            }
    175          
    176            return;
   \                     ??MapKeyRemove_5: (+1)
   \       0x56   0xBDF1             POP      {R0,R4-R7,PC}
    177          }
    178          
    179          /****************************************************************************************************//**
    180           *                                               MapKeyItemGet()
    181           *
    182           * @brief    Obtain pointer to map item with corresponding 'key'.
    183           *
    184           * @param    p_map_instance  Pointer to map instance object.
    185           *
    186           * @param    key             String containing key of map item to obtain.
    187           *
    188           * @param    p_err           Pointer to the variable that will receive one of the following error
    189           *                           code(s) from this function:
    190           *                               - RTOS_ERR_NONE
    191           *                               - RTOS_ERR_NOT_FOUND
    192           *
    193           * @return   Pointer to map item, if item exists,
    194           *           DEF_NULL, otherwise.
    195           *
    196           * @note     (1) Item is not removed from list at this point. This function merely returns a pointer
    197           *               to the requested map item.
    198           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    199          MAP_ITEM *MapKeyItemGet(MAP_INSTANCE *p_map_instance,
    200                                  CPU_CHAR     *key,
    201                                  RTOS_ERR     *p_err)
    202          {
   \                     MapKeyItemGet: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0x0005             MOVS     R5,R0
   \        0x6   0x000E             MOVS     R6,R1
   \        0x8   0x0017             MOVS     R7,R2
    203            MAP_ITEM *p_map_item_ret = DEF_NULL;
   \        0xA   0xF05F 0x0A00      MOVS     R10,#+0
    204            MAP_ITEM *p_map_item_iter;
    205          
    206            RTOS_ASSERT_DBG_ERR_PTR_VALIDATE(p_err, DEF_NULL);
   \        0xE   0x2F00             CMP      R7,#+0
   \       0x10   0xD101             BNE.N    ??MapKeyItemGet_0
   \       0x12   0x.... 0x....      BL       CPU_SW_Exception
    207          
    208            RTOS_ASSERT_DBG_ERR_SET((p_map_instance != DEF_NULL), *p_err, RTOS_ERR_NULL_PTR, DEF_NULL);
   \                     ??MapKeyItemGet_0: (+1)
   \       0x16   0x2D00             CMP      R5,#+0
   \       0x18   0xD108             BNE.N    ??MapKeyItemGet_1
   \       0x1A   0x200A             MOVS     R0,#+10
   \       0x1C   0x7038             STRB     R0,[R7, #+0]
   \       0x1E   0x....             LDR.N    R0,??DataTable5
   \       0x20   0x6078             STR      R0,[R7, #+4]
   \       0x22   0x20D0             MOVS     R0,#+208
   \       0x24   0x60B8             STR      R0,[R7, #+8]
   \       0x26   0x....             LDR.N    R0,??DataTable5_4
   \       0x28   0x60F8             STR      R0,[R7, #+12]
   \                     ??MapKeyItemGet_2: (+1)
   \       0x2A   0xE7FE             B.N      ??MapKeyItemGet_2
    209            RTOS_ASSERT_DBG_ERR_SET((key != DEF_NULL), *p_err, RTOS_ERR_NULL_PTR, DEF_NULL);
   \                     ??MapKeyItemGet_1: (+1)
   \       0x2C   0x2E00             CMP      R6,#+0
   \       0x2E   0xD108             BNE.N    ??MapKeyItemGet_3
   \       0x30   0x200A             MOVS     R0,#+10
   \       0x32   0x7038             STRB     R0,[R7, #+0]
   \       0x34   0x....             LDR.N    R0,??DataTable5
   \       0x36   0x6078             STR      R0,[R7, #+4]
   \       0x38   0x20D1             MOVS     R0,#+209
   \       0x3A   0x60B8             STR      R0,[R7, #+8]
   \       0x3C   0x....             LDR.N    R0,??DataTable5_4
   \       0x3E   0x60F8             STR      R0,[R7, #+12]
   \                     ??MapKeyItemGet_4: (+1)
   \       0x40   0xE7FE             B.N      ??MapKeyItemGet_4
    210          
    211            RTOS_ERR_SET(*p_err, RTOS_ERR_NOT_FOUND);
   \                     ??MapKeyItemGet_3: (+1)
   \       0x42   0x200F             MOVS     R0,#+15
   \       0x44   0x7038             STRB     R0,[R7, #+0]
   \       0x46   0x.... 0x....      LDR.W    R8,??DataTable5
   \       0x4A   0xF8C7 0x8004      STR      R8,[R7, #+4]
   \       0x4E   0x20D3             MOVS     R0,#+211
   \       0x50   0x60B8             STR      R0,[R7, #+8]
   \       0x52   0x.... 0x....      LDR.W    R9,??DataTable5_4
   \       0x56   0xF8C7 0x900C      STR      R9,[R7, #+12]
    212            if (*p_map_instance != DEF_NULL) {
   \       0x5A   0x6828             LDR      R0,[R5, #+0]
   \       0x5C   0x2800             CMP      R0,#+0
   \       0x5E   0xD016             BEQ.N    ??MapKeyItemGet_5
    213              SLIST_FOR_EACH_ENTRY(*p_map_instance, p_map_item_iter, MAP_ITEM, ListNode) {
   \       0x60   0x6828             LDR      R0,[R5, #+0]
   \       0x62   0x0004             MOVS     R4,R0
   \                     ??MapKeyItemGet_6: (+1)
   \       0x64   0x2C00             CMP      R4,#+0
   \       0x66   0xD012             BEQ.N    ??MapKeyItemGet_5
    214                if (Str_Cmp_N(p_map_item_iter->Key, key, DEF_INT_08U_MAX_VAL) == 0) {
   \       0x68   0x22FF             MOVS     R2,#+255
   \       0x6A   0x0031             MOVS     R1,R6
   \       0x6C   0x6860             LDR      R0,[R4, #+4]
   \       0x6E   0x.... 0x....      BL       Str_Cmp_N
   \       0x72   0x2800             CMP      R0,#+0
   \       0x74   0xD109             BNE.N    ??MapKeyItemGet_7
    215                  RTOS_ERR_SET(*p_err, RTOS_ERR_NONE);
   \       0x76   0x2000             MOVS     R0,#+0
   \       0x78   0x7038             STRB     R0,[R7, #+0]
   \       0x7A   0xF8C7 0x8004      STR      R8,[R7, #+4]
   \       0x7E   0x20D7             MOVS     R0,#+215
   \       0x80   0x60B8             STR      R0,[R7, #+8]
   \       0x82   0xF8C7 0x900C      STR      R9,[R7, #+12]
    216                  p_map_item_ret = p_map_item_iter;
   \       0x86   0x46A2             MOV      R10,R4
    217                  break;
   \       0x88   0xE001             B.N      ??MapKeyItemGet_5
    218                }
    219              }
   \                     ??MapKeyItemGet_7: (+1)
   \       0x8A   0x6824             LDR      R4,[R4, #+0]
   \       0x8C   0xE7EA             B.N      ??MapKeyItemGet_6
    220            }
    221          
    222            return (p_map_item_ret);
   \                     ??MapKeyItemGet_5: (+1)
   \       0x8E   0x4650             MOV      R0,R10
   \       0x90   0xE8BD 0x87F0      POP      {R4-R10,PC}
    223          }
    224          
    225          /****************************************************************************************************//**
    226           *                                               MapKeyValueGet()
    227           *
    228           * @brief    Obtain value associated to the map item corresponding to the 'key' passed.
    229           *
    230           * @param    p_map_instance  Pointer to map instance object.
    231           *
    232           * @param    key             String containing key of map item to obtain value from.
    233           *
    234           * @param    p_err           Pointer to the variable that will receive one of the following error
    235           *                           code(s) from this function:
    236           *                               - RTOS_ERR_NONE
    237           *                               - RTOS_ERR_NOT_FOUND
    238           *
    239           * @return   Value to map item, if item exists,
    240           *           DEF_NULL, otherwise.
    241           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    242          void *MapKeyValueGet(MAP_INSTANCE *p_map_instance,
    243                               CPU_CHAR     *key,
    244                               RTOS_ERR     *p_err)
    245          {
   \                     MapKeyValueGet: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
    246            MAP_ITEM *p_ret_item;
    247          
    248            RTOS_ASSERT_DBG_ERR_PTR_VALIDATE(p_err, DEF_NULL);
   \        0x8   0x2E00             CMP      R6,#+0
   \        0xA   0xD101             BNE.N    ??MapKeyValueGet_0
   \        0xC   0x.... 0x....      BL       CPU_SW_Exception
    249          
    250            RTOS_ASSERT_DBG_ERR_SET((p_map_instance != DEF_NULL), *p_err, RTOS_ERR_NULL_PTR, DEF_NULL);
   \                     ??MapKeyValueGet_0: (+1)
   \       0x10   0x2C00             CMP      R4,#+0
   \       0x12   0xD108             BNE.N    ??MapKeyValueGet_1
   \       0x14   0x200A             MOVS     R0,#+10
   \       0x16   0x7030             STRB     R0,[R6, #+0]
   \       0x18   0x....             LDR.N    R0,??DataTable5
   \       0x1A   0x6070             STR      R0,[R6, #+4]
   \       0x1C   0x20FA             MOVS     R0,#+250
   \       0x1E   0x60B0             STR      R0,[R6, #+8]
   \       0x20   0x....             LDR.N    R0,??DataTable5_5
   \       0x22   0x60F0             STR      R0,[R6, #+12]
   \                     ??MapKeyValueGet_2: (+1)
   \       0x24   0xE7FE             B.N      ??MapKeyValueGet_2
    251            RTOS_ASSERT_DBG_ERR_SET((key != DEF_NULL), *p_err, RTOS_ERR_NULL_PTR, DEF_NULL);
   \                     ??MapKeyValueGet_1: (+1)
   \       0x26   0x2D00             CMP      R5,#+0
   \       0x28   0xD108             BNE.N    ??MapKeyValueGet_3
   \       0x2A   0x200A             MOVS     R0,#+10
   \       0x2C   0x7030             STRB     R0,[R6, #+0]
   \       0x2E   0x....             LDR.N    R0,??DataTable5
   \       0x30   0x6070             STR      R0,[R6, #+4]
   \       0x32   0x20FB             MOVS     R0,#+251
   \       0x34   0x60B0             STR      R0,[R6, #+8]
   \       0x36   0x....             LDR.N    R0,??DataTable5_5
   \       0x38   0x60F0             STR      R0,[R6, #+12]
   \                     ??MapKeyValueGet_4: (+1)
   \       0x3A   0xE7FE             B.N      ??MapKeyValueGet_4
    252          
    253            p_ret_item = MapKeyItemGet(p_map_instance, key, p_err);
   \                     ??MapKeyValueGet_3: (+1)
   \       0x3C   0x0032             MOVS     R2,R6
   \       0x3E   0x0029             MOVS     R1,R5
   \       0x40   0x0020             MOVS     R0,R4
   \       0x42   0x.... 0x....      BL       MapKeyItemGet
   \       0x46   0x0001             MOVS     R1,R0
    254            if (RTOS_ERR_CODE_GET(*p_err) != RTOS_ERR_NONE) {
   \       0x48   0x7830             LDRB     R0,[R6, #+0]
   \       0x4A   0x2800             CMP      R0,#+0
   \       0x4C   0xD001             BEQ.N    ??MapKeyValueGet_5
    255              return (DEF_NULL);
   \       0x4E   0x2000             MOVS     R0,#+0
   \       0x50   0xE000             B.N      ??MapKeyValueGet_6
    256            }
    257          
    258            return (p_ret_item->Value);
   \                     ??MapKeyValueGet_5: (+1)
   \       0x52   0x6888             LDR      R0,[R1, #+8]
   \                     ??MapKeyValueGet_6: (+1)
   \       0x54   0xBD70             POP      {R4-R6,PC}
    259          }
    260          
    261          /********************************************************************************************************
    262           ********************************************************************************************************
    263           *                                           LOCAL FUNCTIONS
    264           ********************************************************************************************************
    265           *******************************************************************************************************/
    266          
    267          /****************************************************************************************************//**
    268           *                                               MapItemExists()
    269           *
    270           * @brief    Checks if a map item exists in map instance.
    271           *
    272           * @param    p_map_instance  Pointer to map instance object.
    273           *
    274           * @param    p_map_item      Pointer to map item to search for.
    275           *
    276           * @return   DEF_YES, if 'p_map_item' points to an existing item in map instance,
    277           *           DEF_NO, otherwise.
    278           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    279          static CPU_BOOLEAN MapItemExists(MAP_INSTANCE *p_map_instance,
    280                                           MAP_ITEM     *p_map_item)
    281          {
   \                     MapItemExists: (+1)
   \        0x0   0xB410             PUSH     {R4}
   \        0x2   0x0004             MOVS     R4,R0
    282            MAP_ITEM    *p_map_item_iter;
    283            CPU_BOOLEAN found = DEF_NO;
   \        0x4   0x2000             MOVS     R0,#+0
    284          
    285            if (*p_map_instance != DEF_NULL) {
   \        0x6   0x6823             LDR      R3,[R4, #+0]
   \        0x8   0x2B00             CMP      R3,#+0
   \        0xA   0xD009             BEQ.N    ??MapItemExists_0
    286              SLIST_FOR_EACH_ENTRY(*p_map_instance, p_map_item_iter, MAP_ITEM, ListNode) {
   \        0xC   0x6823             LDR      R3,[R4, #+0]
   \        0xE   0x001A             MOVS     R2,R3
   \                     ??MapItemExists_1: (+1)
   \       0x10   0x2A00             CMP      R2,#+0
   \       0x12   0xD005             BEQ.N    ??MapItemExists_0
    287                if (p_map_item_iter == p_map_item) {
   \       0x14   0x428A             CMP      R2,R1
   \       0x16   0xD101             BNE.N    ??MapItemExists_2
    288                  found = DEF_YES;
   \       0x18   0x2301             MOVS     R3,#+1
   \       0x1A   0x0018             MOVS     R0,R3
    289                }
    290              }
   \                     ??MapItemExists_2: (+1)
   \       0x1C   0x6812             LDR      R2,[R2, #+0]
   \       0x1E   0xE7F7             B.N      ??MapItemExists_1
    291            }
    292          
    293            return (found);
   \                     ??MapItemExists_0: (+1)
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0xBC10             POP      {R4}
   \       0x24   0x4770             BX       LR
    294          }
    295          
    296          /****************************************************************************************************//**
    297           *                                               MapKeyExists()
    298           *
    299           * @brief    Checks if a map item's key exists in map instance.
    300           *
    301           * @param    p_map_instance  Pointer to map instance object.
    302           *
    303           * @param    key             String containing key to search for in map instance.
    304           *
    305           * @return   DEF_YES, if 'key' exists in map instance,
    306           *           DEF_NO, otherwise.
    307           *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    308          static CPU_BOOLEAN MapKeyExists(MAP_INSTANCE *p_map_instance,
    309                                          CPU_CHAR     *key)
    310          {
   \                     MapKeyExists: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0005             MOVS     R5,R0
   \        0x4   0x000E             MOVS     R6,R1
    311            MAP_ITEM    *p_map_item_iter;
    312            CPU_BOOLEAN found = DEF_NO;
   \        0x6   0x2700             MOVS     R7,#+0
    313          
    314            if (*p_map_instance != DEF_NULL) {
   \        0x8   0x6828             LDR      R0,[R5, #+0]
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD00E             BEQ.N    ??MapKeyExists_0
    315              SLIST_FOR_EACH_ENTRY(*p_map_instance, p_map_item_iter, MAP_ITEM, ListNode) {
   \        0xE   0x6828             LDR      R0,[R5, #+0]
   \       0x10   0x0004             MOVS     R4,R0
   \                     ??MapKeyExists_1: (+1)
   \       0x12   0x2C00             CMP      R4,#+0
   \       0x14   0xD00A             BEQ.N    ??MapKeyExists_0
    316                if (Str_Cmp_N(p_map_item_iter->Key, key, DEF_INT_08U_MAX_VAL) == 0) {
   \       0x16   0x22FF             MOVS     R2,#+255
   \       0x18   0x0031             MOVS     R1,R6
   \       0x1A   0x6860             LDR      R0,[R4, #+4]
   \       0x1C   0x.... 0x....      BL       Str_Cmp_N
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD101             BNE.N    ??MapKeyExists_2
    317                  found = DEF_YES;
   \       0x24   0x2001             MOVS     R0,#+1
   \       0x26   0x0007             MOVS     R7,R0
    318                }
    319              }
   \                     ??MapKeyExists_2: (+1)
   \       0x28   0x6824             LDR      R4,[R4, #+0]
   \       0x2A   0xE7F2             B.N      ??MapKeyExists_1
    320            }
    321          
    322            return (found);
   \                     ??MapKeyExists_0: (+1)
   \       0x2C   0x0038             MOVS     R0,R7
   \       0x2E   0xB2C0             UXTB     R0,R0
   \       0x30   0xBDF2             POP      {R1,R4-R7,PC}
    323          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \        0x0   0x....'....        DC32     `MapItemAdd::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \        0x0   0x....'....        DC32     `MapItemRemove::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \        0x0   0x....'....        DC32     `MapKeyRemove::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \        0x0   0x....'....        DC32     `MapKeyItemGet::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \        0x0   0x....'....        DC32     `MapKeyValueGet::__func__`

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x44 0x3A          DC8 0x44, 0x3A, 0x5C, 0x49, 0x6E, 0x65, 0x73, 0x68
   \              0x5C 0x49    
   \              0x6E 0x65    
   \              0x73 0x68
   \        0x8   0x5F 0x77          DC8 0x5F, 0x77, 0x69, 0x73, 0x75, 0x6E, 0x5C, 0x57
   \              0x69 0x73    
   \              0x75 0x6E    
   \              0x5C 0x57
   \       0x10   0x69 0x73          DC8 0x69, 0x73, 0x75, 0x6E, 0x5F, 0x4E, 0x6F, 0x64
   \              0x75 0x6E    
   \              0x5F 0x4E    
   \              0x6F 0x64
   \       0x18   0x65 0x5F          DC8 0x65, 0x5F, 0x41, 0x70, 0x70, 0x20, 0x31, 0x5C
   \              0x41 0x70    
   \              0x70 0x20    
   \              0x31 0x5C
   \       0x20   0x57 0x69          DC8 0x57, 0x69, 0x73, 0x75, 0x6E, 0x5F, 0x4E, 0x6F
   \              0x73 0x75    
   \              0x6E 0x5F    
   \              0x4E 0x6F
   \       0x28   0x64 0x65          DC8 0x64, 0x65, 0x5F, 0x41, 0x70, 0x70, 0x5C, 0x67
   \              0x5F 0x41    
   \              0x70 0x70    
   \              0x5C 0x67
   \       0x30   0x65 0x63          DC8 0x65, 0x63, 0x6B, 0x6F, 0x5F, 0x73, 0x64, 0x6B
   \              0x6B 0x6F    
   \              0x5F 0x73    
   \              0x64 0x6B
   \       0x38   0x5F 0x34          DC8 0x5F, 0x34, 0x2E, 0x34, 0x2E, 0x35, 0x5C, 0x70
   \              0x2E 0x34    
   \              0x2E 0x35    
   \              0x5C 0x70
   \       0x40   0x6C 0x61          DC8 0x6C, 0x61, 0x74, 0x66, 0x6F, 0x72, 0x6D, 0x5C
   \              0x74 0x66    
   \              0x6F 0x72    
   \              0x6D 0x5C
   \       0x48   0x6D 0x69          DC8 0x6D, 0x69, 0x63, 0x72, 0x69, 0x75, 0x6D, 0x5F
   \              0x63 0x72    
   \              0x69 0x75    
   \              0x6D 0x5F
   \       0x50   0x6F 0x73          DC8 0x6F, 0x73, 0x5C, 0x63, 0x6F, 0x6D, 0x6D, 0x6F
   \              0x5C 0x63    
   \              0x6F 0x6D    
   \              0x6D 0x6F
   \       0x58   0x6E 0x5C          DC8 0x6E, 0x5C, 0x73, 0x6F, 0x75, 0x72, 0x63, 0x65
   \              0x73 0x6F    
   \              0x75 0x72    
   \              0x63 0x65
   \       0x60   0x5C 0x63          DC8 0x5C, 0x63, 0x6F, 0x6C, 0x6C, 0x65, 0x63, 0x74
   \              0x6F 0x6C    
   \              0x6C 0x65    
   \              0x63 0x74
   \       0x68   0x69 0x6F          DC8 0x69, 0x6F, 0x6E, 0x73, 0x5C, 0x6D, 0x61, 0x70
   \              0x6E 0x73    
   \              0x5C 0x6D    
   \              0x61 0x70
   \       0x70   0x2E 0x63          DC8 0x2E, 0x63, 0
   \              0x00
   \       0x73                      DS8 1

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   MapInit
         8   -> SList_Init
      16   MapItemAdd
        16   -> CPU_SW_Exception
        16   -> MapItemExists
        16   -> MapKeyExists
        16   -> SList_Push
       4   MapItemExists
      16   MapItemRemove
        16   -> CPU_SW_Exception
        16   -> MapItemExists
        16   -> SList_Rem
      24   MapKeyExists
        24   -> Str_Cmp_N
      32   MapKeyItemGet
        32   -> CPU_SW_Exception
        32   -> Str_Cmp_N
      24   MapKeyRemove
        24   -> CPU_SW_Exception
        24   -> MapKeyItemGet
        24   -> SList_Rem
      16   MapKeyValueGet
        16   -> CPU_SW_Exception
        16   -> MapKeyItemGet


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
     116  ?_0
      18  MapInit
     146  MapItemAdd
      38  MapItemExists
     116  MapItemRemove
      50  MapKeyExists
     148  MapKeyItemGet
      88  MapKeyRemove
      86  MapKeyValueGet
      76  -- Other

 
 192 bytes in section .rodata
 714 bytes in section .text
 
 714 bytes of CODE  memory
 192 bytes of CONST memory

Errors: none
Warnings: none
