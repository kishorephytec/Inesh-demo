###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         27/Nov/2024  12:17:04
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_psa_driver\src\sli_se_driver_builtin_keys.c
#    Command line      =
#        -f
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_4811620319817103232.dir\sli_se_driver_builtin_keys.o.rsp
#        (C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_psa_driver\src\sli_se_driver_builtin_keys.c
#        -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -D MBED_CONF_MBED_TRACE_ENABLE=1 -D
#        MBED_CONF_NANOSTACK_CONFIGURATION=ws_router -D
#        MBED_TRACE_MAX_LEVEL=TRACE_ACTIVE_LEVEL_ALL -D DEBUG_EFM_USER=1 -D
#        HAVE_LFN=1 -D HAVE_LFN_PARENT=1 -lC
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\src_4811620319817103232.dir
#        --diag_suppress Pa050 -o
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_4811620319817103232.dir
#        --debug --endian=little --cpu=Cortex-M33 --cmse --cmse -e
#        --fpu=VFPv5_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_psa_driver\src\
#        -I C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\autogen\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\rail\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\Device\SiliconLabs\EFR32FG28\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\Core\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\RTOS2\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\device_init\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\dmadrv\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emlib\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\cmsis\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\portable\IAR\ARM_CM33_NTZ\non_secure\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\iostream\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\preset\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\nvm3\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\peripheral\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_psa_driver\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\common\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\wmbus\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\sidewalk\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\rail_util_pti\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\segger\systemview\SEGGER\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\silicon_labs\silabs_core\memory_manager\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\toolchain\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\system\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\ns_list\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\sleeptimer\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\app\wisun_rcp\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\socket\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\src\
#        -Ohz --use_c++_inline) --dependencies=n
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_4811620319817103232.dir\sli_se_driver_builtin_keys.o.iar_deps
#    Locale            =  C
#    List file         =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\src_4811620319817103232.dir\sli_se_driver_builtin_keys.lst
#    Object file       =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_4811620319817103232.dir\sli_se_driver_builtin_keys.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_psa_driver\src\sli_se_driver_builtin_keys.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Silicon Labs PSA Crypto Driver Builtin key functions.
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2020 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * SPDX-License-Identifier: Zlib
     10           *
     11           * The licensor of this software is Silicon Laboratories Inc.
     12           *
     13           * This software is provided 'as-is', without any express or implied
     14           * warranty. In no event will the authors be held liable for any damages
     15           * arising from the use of this software.
     16           *
     17           * Permission is granted to anyone to use this software for any purpose,
     18           * including commercial applications, and to alter it and redistribute it
     19           * freely, subject to the following restrictions:
     20           *
     21           * 1. The origin of this software must not be misrepresented; you must not
     22           *    claim that you wrote the original software. If you use this software
     23           *    in a product, an acknowledgment in the product documentation would be
     24           *    appreciated but is not required.
     25           * 2. Altered source versions must be plainly marked as such, and must not be
     26           *    misrepresented as being the original software.
     27           * 3. This notice may not be removed or altered from any source distribution.
     28           *
     29           ******************************************************************************/
     30          
     31          #include "sli_psa_driver_features.h"
     32          
     33          #if defined(SLI_MBEDTLS_DEVICE_HSE)
     34          
     35          #include <psa/crypto.h>
     36          
     37          #include "sli_se_opaque_types.h"
     38          #include "sl_psa_values.h"
     39          
     40          #include <string.h>
     41          
     42          // -----------------------------------------------------------------------------
     43          // Driver entry points
     44          
     45          #if defined(SLI_PSA_DRIVER_FEATURE_BUILTIN_KEYS)
     46          
     47          psa_status_t sli_se_opaque_get_builtin_key(psa_drv_slot_number_t slot_number,
     48                                                     psa_key_attributes_t *attributes,
     49                                                     uint8_t *key_buffer,
     50                                                     size_t key_buffer_size,
     51                                                     size_t *key_buffer_length)
     52          {
     53            sli_se_opaque_key_context_header_t header;
     54            memset(&header, 0, sizeof(header));
     55          
     56            // Set key type and permissions according to key ID
     57            switch ( slot_number ) {
     58              #if defined(SLI_PSA_DRIVER_FEATURE_ATTESTATION)
     59              case SL_SE_KEY_SLOT_APPLICATION_ATTESTATION_KEY:
     60                psa_set_key_bits(attributes, 256);
     61                psa_set_key_type(attributes, PSA_KEY_TYPE_ECC_KEY_PAIR(PSA_ECC_FAMILY_SECP_R1) );
     62                psa_set_key_usage_flags(attributes, PSA_KEY_USAGE_SIGN_HASH | PSA_KEY_USAGE_VERIFY_HASH);
     63                psa_set_key_algorithm(attributes, PSA_ALG_ECDSA(PSA_ALG_ANY_HASH));
     64                break;
     65              case SL_SE_KEY_SLOT_SE_ATTESTATION_KEY:
     66                psa_set_key_bits(attributes, 256);
     67                psa_set_key_type(attributes, PSA_KEY_TYPE_ECC_KEY_PAIR(PSA_ECC_FAMILY_SECP_R1) );
     68                psa_set_key_usage_flags(attributes, PSA_KEY_USAGE_VERIFY_HASH);
     69                psa_set_key_algorithm(attributes, PSA_ALG_ECDSA(PSA_ALG_ANY_HASH));
     70                break;
     71              #endif // SLI_PSA_DRIVER_FEATURE_ATTESTATION
     72              case SL_SE_KEY_SLOT_APPLICATION_SECURE_BOOT_KEY:
     73                psa_set_key_bits(attributes, 256);
     74                psa_set_key_type(attributes, PSA_KEY_TYPE_ECC_PUBLIC_KEY(PSA_ECC_FAMILY_SECP_R1) );
     75                psa_set_key_usage_flags(attributes, PSA_KEY_USAGE_VERIFY_HASH);
     76                psa_set_key_algorithm(attributes, PSA_ALG_ECDSA(PSA_ALG_ANY_HASH));
     77                break;
     78              case SL_SE_KEY_SLOT_APPLICATION_SECURE_DEBUG_KEY:
     79                psa_set_key_bits(attributes, 256);
     80                psa_set_key_type(attributes, PSA_KEY_TYPE_ECC_PUBLIC_KEY(PSA_ECC_FAMILY_SECP_R1) );
     81                psa_set_key_usage_flags(attributes, PSA_KEY_USAGE_VERIFY_HASH);
     82                psa_set_key_algorithm(attributes, PSA_ALG_ECDSA(PSA_ALG_ANY_HASH));
     83                break;
     84              case SL_SE_KEY_SLOT_APPLICATION_AES_128_KEY:
     85                psa_set_key_bits(attributes, 128);
     86                psa_set_key_type(attributes, PSA_KEY_TYPE_AES);
     87                psa_set_key_usage_flags(attributes, PSA_KEY_USAGE_ENCRYPT | PSA_KEY_USAGE_DECRYPT);
     88                psa_set_key_algorithm(attributes, SL_SE_BUILTIN_KEY_AES128_ALG);
     89                break;
     90              case SL_SE_KEY_SLOT_TRUSTZONE_ROOT_KEY:
     91                psa_set_key_bits(attributes, 256);
     92                psa_set_key_type(attributes, PSA_KEY_TYPE_AES);
     93                psa_set_key_usage_flags(attributes, PSA_KEY_USAGE_ENCRYPT | PSA_KEY_USAGE_DECRYPT);
     94                psa_set_key_algorithm(attributes, PSA_ALG_CMAC);
     95                break;
     96              default:
     97                return(PSA_ERROR_DOES_NOT_EXIST);
     98            }
     99          
    100            psa_set_key_lifetime(attributes,
    101                                 PSA_KEY_LIFETIME_FROM_PERSISTENCE_AND_LOCATION(
    102                                   PSA_KEY_PERSISTENCE_READ_ONLY,
    103                                   PSA_KEY_LOCATION_SLI_SE_OPAQUE) );
    104          
    105            // Check the key buffer size after populating the key attributes:
    106            // From mbedTLS, psa-driver-interface.md (snippet):
    107            //
    108            //  This entry point may return the following status values:
    109            //    (...)
    110            //    * PSA_ERROR_BUFFER_TOO_SMALL: key_buffer_size is insufficient.
    111            //      In this case, the driver must pass the key's attributes in
    112            //      *attributes. In particular, get_builtin_key(slot_number,
    113            //      &attributes, NULL, 0) is a way for the core to obtain the
    114            //      key's attributes.
    115            if (key_buffer_size < sizeof(sli_se_opaque_key_context_header_t)) {
    116              return(PSA_ERROR_BUFFER_TOO_SMALL);
    117            }
    118          
    119            header.struct_version = SLI_SE_OPAQUE_KEY_CONTEXT_VERSION;
    120            header.builtin_key_id = (uint8_t) slot_number;
    121          
    122            memcpy(key_buffer, &header, sizeof(sli_se_opaque_key_context_header_t));
    123            *key_buffer_length = sizeof(sli_se_opaque_key_context_header_t);
    124          
    125            return(PSA_SUCCESS);
    126          }
    127          
    128          #if !defined(PSA_CRYPTO_DRIVER_TEST)
    129          
    130          psa_status_t mbedtls_psa_platform_get_builtin_key(
    131            mbedtls_svc_key_id_t key_id,
    132            psa_key_lifetime_t *lifetime,
    133            psa_drv_slot_number_t *slot_number)
    134          {
    135            switch (MBEDTLS_SVC_KEY_ID_GET_KEY_ID(key_id)) {
    136              #if defined(SLI_PSA_DRIVER_FEATURE_ATTESTATION)
    137              case SL_SE_BUILTIN_KEY_APPLICATION_ATTESTATION_ID:
    138                *slot_number = SL_SE_KEY_SLOT_APPLICATION_ATTESTATION_KEY;
    139                break;
    140              case SL_SE_BUILTIN_KEY_SYSTEM_ATTESTATION_ID:
    141                *slot_number = SL_SE_KEY_SLOT_SE_ATTESTATION_KEY;
    142                break;
    143              #endif // SLI_PSA_DRIVER_FEATURE_ATTESTATION
    144              case SL_SE_BUILTIN_KEY_SECUREBOOT_ID:
    145                *slot_number = SL_SE_KEY_SLOT_APPLICATION_SECURE_BOOT_KEY;
    146                break;
    147              case SL_SE_BUILTIN_KEY_SECUREDEBUG_ID:
    148                *slot_number = SL_SE_KEY_SLOT_APPLICATION_SECURE_DEBUG_KEY;
    149                break;
    150              case SL_SE_BUILTIN_KEY_AES128_ID:
    151                *slot_number = SL_SE_KEY_SLOT_APPLICATION_AES_128_KEY;
    152                break;
    153              case SL_SE_BUILTIN_KEY_TRUSTZONE_ID:
    154                *slot_number = SL_SE_KEY_SLOT_TRUSTZONE_ROOT_KEY;
    155                break;
    156              default:
    157                return(PSA_ERROR_DOES_NOT_EXIST);
    158            }
    159            *lifetime = PSA_KEY_LIFETIME_FROM_PERSISTENCE_AND_LOCATION(
    160              PSA_KEY_PERSISTENCE_READ_ONLY,
    161              PSA_KEY_LOCATION_SLI_SE_OPAQUE);
    162          
    163            return(PSA_SUCCESS);
    164          }
    165          
    166          #endif // !PSA_CRYPTO_DRIVER_TEST
    167          
    168          #endif // SLI_PSA_DRIVER_FEATURE_BUILTIN_KEYS
    169          
    170          #endif // SLI_MBEDTLS_DEVICE_HSE


 
 
 0 bytes of memory

Errors: none
Warnings: none
