###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         27/Nov/2024  12:17:51
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\nvm3\src\nvm3_hal_flash.c
#    Command line                 =
#        -f
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_1379462837802067215.dir\nvm3_hal_flash.o.rsp
#        (C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\nvm3\src\nvm3_hal_flash.c
#        -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -D MBED_CONF_MBED_TRACE_ENABLE=1 -D
#        MBED_CONF_NANOSTACK_CONFIGURATION=ws_router -D
#        MBED_TRACE_MAX_LEVEL=TRACE_ACTIVE_LEVEL_ALL -D DEBUG_EFM_USER=1 -D
#        HAVE_LFN=1 -D HAVE_LFN_PARENT=1 -lC
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\src_1379462837802067215.dir
#        --diag_suppress Pa050 -o
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_1379462837802067215.dir
#        --debug --endian=little --cpu=Cortex-M33 --cmse --cmse -e
#        --fpu=VFPv5_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\nvm3\src\
#        -I C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\autogen\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\rail\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\Device\SiliconLabs\EFR32FG28\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\Core\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\RTOS2\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\device_init\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\dmadrv\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emlib\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\cmsis\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\portable\IAR\ARM_CM33_NTZ\non_secure\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\iostream\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\preset\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\nvm3\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\peripheral\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_psa_driver\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\common\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\wmbus\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\sidewalk\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\rail_util_pti\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\segger\systemview\SEGGER\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\silicon_labs\silabs_core\memory_manager\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\toolchain\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\system\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\ns_list\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\sleeptimer\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\app\wisun_rcp\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\socket\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\src\
#        -Ohz --use_c++_inline) --dependencies=n
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_1379462837802067215.dir\nvm3_hal_flash.o.iar_deps
#    Locale                       =  C
#    List file                    =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\src_1379462837802067215.dir\nvm3_hal_flash.lst
#    Object file                  =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_1379462837802067215.dir\nvm3_hal_flash.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#
###############################################################################

C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\nvm3\src\nvm3_hal_flash.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Non-Volatile Memory Wear-Leveling driver HAL implementation
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * SPDX-License-Identifier: Zlib
     10           *
     11           * The licensor of this software is Silicon Laboratories Inc.
     12           *
     13           * This software is provided 'as-is', without any express or implied
     14           * warranty. In no event will the authors be held liable for any damages
     15           * arising from the use of this software.
     16           *
     17           * Permission is granted to anyone to use this software for any purpose,
     18           * including commercial applications, and to alter it and redistribute it
     19           * freely, subject to the following restrictions:
     20           *
     21           * 1. The origin of this software must not be misrepresented; you must not
     22           *    claim that you wrote the original software. If you use this software
     23           *    in a product, an acknowledgment in the product documentation would be
     24           *    appreciated but is not required.
     25           * 2. Altered source versions must be plainly marked as such, and must not be
     26           *    misrepresented as being the original software.
     27           * 3. This notice may not be removed or altered from any source distribution.
     28           *
     29           ******************************************************************************/
     30          
     31          #include <stdbool.h>
     32          #include <string.h>
     33          #include "nvm3.h"
     34          #include "nvm3_hal_flash.h"
     35          #include "em_system.h"
     36          #include "em_msc.h"
     37          
     38          /***************************************************************************//**
     39           * @addtogroup nvm3
     40           * @{
     41           ******************************************************************************/
     42          
     43          /***************************************************************************//**
     44           * @addtogroup nvm3hal
     45           * @{
     46           ******************************************************************************/
     47          
     48          /******************************************************************************
     49           ******************************    MACROS    **********************************
     50           *****************************************************************************/
     51          
     52          #define CHECK_DATA  1           ///< Macro defining if data should be checked
     53          
     54          /******************************************************************************
     55           ***************************   LOCAL VARIABLES   ******************************
     56           *****************************************************************************/
     57          
     58          /******************************************************************************
     59           ***************************   LOCAL FUNCTIONS   ******************************
     60           *****************************************************************************/
     61          
     62          /** @cond DO_NOT_INCLUDE_WITH_DOXYGEN */
     63          
     64          /***************************************************************************//**
     65           * @brief
     66           *   Convert return type.
     67           *
     68           * @details
     69           *   This function converts between the return type of the emlib and the
     70           *   NVM3 API.
     71           *
     72           * @param[in] result
     73           *   Operation result.
     74           *
     75           * @return
     76           *   Returns remapped status code.
     77           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     78          static Ecode_t convertMscStatusToNvm3Status(MSC_Status_TypeDef result)
     79          {
     80            Ecode_t ret;
     81          
     82            switch (result) {
   \                     convertMscStatusToNvm3Status: (+1)
   \        0x0   0xB128             CBZ.N    R0,??convertMscStatusToNvm3Status_0
   \        0x2   0xF1B0 0x3FFF      CMP      R0,#+4294967295
   \        0x6   0xD101             BNE.N    ??convertMscStatusToNvm3Status_1
     83              case mscReturnOk:
     84                ret = ECODE_NVM3_OK;
     85                break;
     86              case mscReturnInvalidAddr:
     87                ret = ECODE_NVM3_ERR_INT_ADDR_INVALID;
   \        0x8   0x....             LDR.N    R0,??DataTable2
     88                break;
   \        0xA   0x4770             BX       LR
     89              default:
     90                ret = ECODE_NVM3_ERR_INT_EMULATOR;
   \                     ??convertMscStatusToNvm3Status_1: (+1)
   \        0xC   0x....             LDR.N    R0,??DataTable2_1
     91                break;
     92            }
     93          
     94            return ret;
   \                     ??convertMscStatusToNvm3Status_0: (+1)
   \        0xE   0x4770             BX       LR
     95          }
     96          
     97          // Check if the page is erased.
     98          static bool isErased(void *adr, size_t len)
     99          {
    100            size_t i;
    101            size_t cnt;
    102            uint32_t *dat = adr;
    103          
    104            cnt = len / sizeof(uint32_t);
    105            for (i = 0U; i < cnt; i++) {
    106              if (*dat != 0xFFFFFFFFUL) {
    107                return false;
    108              }
    109              dat++;
    110            }
    111          
    112            return true;
    113          }
    114          
    115          /** @endcond */
    116          

   \                                 In section .text, align 2, keep-with-next
    117          static Ecode_t nvm3_halFlashOpen(nvm3_HalPtr_t nvmAdr, size_t flashSize)
    118          {
   \                     nvm3_halFlashOpen: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    119            (void)nvmAdr;
    120            (void)flashSize;
    121            MSC_Init();
   \        0x2   0x.... 0x....      BL       MSC_Init
    122          
    123            return ECODE_NVM3_OK;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0xBD02             POP      {R1,PC}
    124          }
    125          

   \                                 In section .text, align 2, keep-with-next
    126          static void nvm3_halFlashClose(void)
    127          {
    128            MSC_Deinit();
   \                     nvm3_halFlashClose: (+1)
   \        0x0   0x.... 0x....      B.W      MSC_Deinit
    129          }
    130          

   \                                 In section .text, align 2, keep-with-next
    131          static Ecode_t nvm3_halFlashGetInfo(nvm3_HalInfo_t *halInfo)
    132          {
   \                     nvm3_halFlashGetInfo: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x4604             MOV      R4,R0
    133            SYSTEM_ChipRevision_TypeDef chipRev;
    134          
    135            SYSTEM_ChipRevisionGet(&chipRev);
   \        0x4   0x4668             MOV      R0,SP
   \        0x6   0x.... 0x....      BL       SYSTEM_ChipRevisionGet
    136          #if defined(_SYSCFG_CHIPREV_PARTNUMBER_MASK)
    137            halInfo->deviceFamilyPartNumber = chipRev.partNumber;
   \        0xA   0xF8BD 0x2002      LDRH     R2,[SP, #+2]
    138          #else
    139            halInfo->deviceFamilyPartNumber = chipRev.family;
    140          #endif
    141            halInfo->memoryMapped = 1;
   \        0xE   0x2101             MOVS     R1,#+1
    142          #if defined(_SILICON_LABS_32B_SERIES_2)
    143            halInfo->writeSize = NVM3_HAL_WRITE_SIZE_32;
   \       0x10   0x2000             MOVS     R0,#+0
   \       0x12   0x8022             STRH     R2,[R4, #+0]
   \       0x14   0x70E1             STRB     R1,[R4, #+3]
   \       0x16   0x70A0             STRB     R0,[R4, #+2]
    144          #else
    145            halInfo->writeSize = NVM3_HAL_WRITE_SIZE_16;
    146          #endif
    147            halInfo->pageSize = SYSTEM_GetFlashPageSize();
   \       0x18   0x.... 0x....      BL       SYSTEM_GetFlashPageSize
   \       0x1C   0x6060             STR      R0,[R4, #+4]
    148          
    149            return ECODE_NVM3_OK;
   \       0x1E   0x2000             MOVS     R0,#+0
   \       0x20   0xBD16             POP      {R1,R2,R4,PC}
    150          }
    151          

   \                                 In section .text, align 2, keep-with-next
    152          static void nvm3_halFlashAccess(nvm3_HalNvmAccessCode_t access)
    153          {
    154            (void)access;
    155          }
   \                     nvm3_halFlashAccess: (+1)
   \        0x0   0x4770             BX       LR
    156          

   \                                 In section .text, align 2, keep-with-next
    157          static Ecode_t nvm3_halFlashReadWords(nvm3_HalPtr_t nvmAdr, void *dst, size_t wordCnt)
    158          {
   \                     nvm3_halFlashReadWords: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
    159            uint32_t *pSrc = (uint32_t *)nvmAdr;
   \        0x4   0x4605             MOV      R5,R0
    160            uint32_t *pDst = dst;
   \        0x6   0x4626             MOV      R6,R4
    161          
    162            if ((((size_t)pSrc % 4) == 0) && (((size_t)pDst % 4) == 0)) {
   \        0x8   0xF015 0x0103      ANDS     R1,R5,#0x3
   \        0xC   0xBF08             IT       EQ
   \        0xE   0xF016 0x0303      ANDSEQ   R3,R6,#0x3
   \       0x12   0xD108             BNE.N    ??nvm3_halFlashReadWords_0
    163              while (wordCnt > 0U) {
   \                     ??nvm3_halFlashReadWords_1: (+1)
   \       0x14   0x2A00             CMP      R2,#+0
   \       0x16   0xBF1E             ITTT     NE
   \       0x18   0xF855 0x3B04      LDRNE    R3,[R5], #+4
   \       0x1C   0xF846 0x3B04      STRNE    R3,[R6], #+4
   \       0x20   0x1E52             SUBNE    R2,R2,#+1
    164                *pDst++ = *pSrc++;
    165                wordCnt--;
   \       0x22   0xD1F7             BNE.N    ??nvm3_halFlashReadWords_1
   \       0x24   0xE004             B.N      ??nvm3_halFlashReadWords_2
    166              }
    167            } else {
    168              (void)memcpy(dst, nvmAdr, wordCnt * sizeof(uint32_t));
   \                     ??nvm3_halFlashReadWords_0: (+1)
   \       0x26   0x4601             MOV      R1,R0
   \       0x28   0x0092             LSLS     R2,R2,#+2
   \       0x2A   0x4620             MOV      R0,R4
   \       0x2C   0x.... 0x....      BL       __aeabi_memcpy
    169            }
    170          
    171            return ECODE_NVM3_OK;
   \                     ??nvm3_halFlashReadWords_2: (+1)
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0xBD70             POP      {R4-R6,PC}
    172          }
    173          

   \                                 In section .text, align 2, keep-with-next
    174          static Ecode_t nvm3_halFlashWriteWords(nvm3_HalPtr_t nvmAdr, void const *src, size_t wordCnt)
    175          {
   \                     nvm3_halFlashWriteWords: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
    176            const uint32_t *pSrc = src;
    177            uint32_t *pDst = (uint32_t *)nvmAdr;
    178            MSC_Status_TypeDef mscSta;
    179            Ecode_t halSta;
    180            size_t byteCnt;
    181          
    182            byteCnt = wordCnt * sizeof(uint32_t);
   \        0x2   0x0096             LSLS     R6,R2,#+2
   \        0x4   0x4607             MOV      R7,R0
   \        0x6   0x460D             MOV      R5,R1
    183            mscSta = MSC_WriteWord(pDst, pSrc, byteCnt);
   \        0x8   0x4632             MOV      R2,R6
   \        0xA   0x.... 0x....      BL       MSC_WriteWord
    184            halSta = convertMscStatusToNvm3Status(mscSta);
   \        0xE   0x.... 0x....      BL       convertMscStatusToNvm3Status
   \       0x12   0x0004             MOVS     R4,R0
    185          
    186          #if CHECK_DATA
    187            if (halSta == ECODE_NVM3_OK) {
   \       0x14   0xD106             BNE.N    ??nvm3_halFlashWriteWords_0
    188              if (memcmp(pDst, pSrc, byteCnt) != 0) {
   \       0x16   0x4632             MOV      R2,R6
   \       0x18   0x4629             MOV      R1,R5
   \       0x1A   0x4638             MOV      R0,R7
   \       0x1C   0x.... 0x....      BL       memcmp
   \       0x20   0xB100             CBZ.N    R0,??nvm3_halFlashWriteWords_0
    189                halSta = ECODE_NVM3_ERR_WRITE_FAILED;
   \       0x22   0x....             LDR.N    R4,??DataTable2_2
    190              }
    191            }
    192          #endif
    193          
    194            return halSta;
   \                     ??nvm3_halFlashWriteWords_0: (+1)
   \       0x24   0x4620             MOV      R0,R4
   \       0x26   0xBDF2             POP      {R1,R4-R7,PC}
    195          }
    196          

   \                                 In section .text, align 2, keep-with-next
    197          static Ecode_t nvm3_halFlashPageErase(nvm3_HalPtr_t nvmAdr)
    198          {
   \                     nvm3_halFlashPageErase: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4605             MOV      R5,R0
    199            MSC_Status_TypeDef mscSta;
    200            Ecode_t halSta;
    201          
    202            mscSta = MSC_ErasePage((uint32_t *)nvmAdr);
   \        0x4   0x.... 0x....      BL       MSC_ErasePage
    203            halSta = convertMscStatusToNvm3Status(mscSta);
   \        0x8   0x.... 0x....      BL       convertMscStatusToNvm3Status
   \        0xC   0x0004             MOVS     R4,R0
    204          
    205          #if CHECK_DATA
    206            if (halSta == ECODE_NVM3_OK) {
   \        0xE   0xD10D             BNE.N    ??nvm3_halFlashPageErase_0
    207              if (!isErased(nvmAdr, SYSTEM_GetFlashPageSize())) {
   \       0x10   0x.... 0x....      BL       SYSTEM_GetFlashPageSize
   \       0x14   0x2200             MOVS     R2,#+0
   \       0x16   0xE000             B.N      ??nvm3_halFlashPageErase_1
   \                     ??nvm3_halFlashPageErase_2: (+1)
   \       0x18   0x1C52             ADDS     R2,R2,#+1
   \                     ??nvm3_halFlashPageErase_1: (+1)
   \       0x1A   0xEBB2 0x0F90      CMP      R2,R0, LSR #+2
   \       0x1E   0xD205             BCS.N    ??nvm3_halFlashPageErase_0
   \       0x20   0xF855 0x1B04      LDR      R1,[R5], #+4
   \       0x24   0xF111 0x0F01      CMN      R1,#+1
   \       0x28   0xD0F6             BEQ.N    ??nvm3_halFlashPageErase_2
    208                halSta = ECODE_NVM3_ERR_ERASE_FAILED;
   \       0x2A   0x....             LDR.N    R4,??DataTable2_3
    209              }
    210            }
    211          #endif
    212          
    213            return halSta;
   \                     ??nvm3_halFlashPageErase_0: (+1)
   \       0x2C   0x4620             MOV      R0,R4
   \       0x2E   0xBD32             POP      {R1,R4,R5,PC}
    214          }
    215          
    216          /*******************************************************************************
    217           ***************************   GLOBAL VARIABLES   ******************************
    218           ******************************************************************************/
    219          

   \                                 In section .rodata, align 4
    220          const nvm3_HalHandle_t nvm3_halFlashHandle = {
   \                     nvm3_halFlashHandle:
   \        0x0   0x....'....        DC32 nvm3_halFlashOpen, nvm3_halFlashClose, nvm3_halFlashGetInfo
   \              0x....'....  
   \              0x....'....
   \        0xC   0x....'....        DC32 nvm3_halFlashAccess, nvm3_halFlashPageErase
   \              0x....'....
   \       0x14   0x....'....        DC32 nvm3_halFlashReadWords, nvm3_halFlashWriteWords
   \              0x....'....

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \        0x0   0xF000'E021        DC32     0xf000e021

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \        0x0   0xF000'E024        DC32     0xf000e024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \        0x0   0xF000'E010        DC32     0xf000e010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \        0x0   0xF000'E00E        DC32     0xf000e00e
    221            .open = nvm3_halFlashOpen,                    ///< Set the open function
    222            .close = nvm3_halFlashClose,                  ///< Set the close function
    223            .getInfo = nvm3_halFlashGetInfo,              ///< Set the get-info function
    224            .access = nvm3_halFlashAccess,                ///< Set the access function
    225            .pageErase = nvm3_halFlashPageErase,          ///< Set the page-erase function
    226            .readWords = nvm3_halFlashReadWords,          ///< Set the read-words function
    227            .writeWords = nvm3_halFlashWriteWords,        ///< Set the write-words function
    228          };
    229          
    230          /** @} (end addtogroup nvm3hal) */
    231          /** @} (end addtogroup nvm3) */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   convertMscStatusToNvm3Status
       0   nvm3_halFlashAccess
       0   nvm3_halFlashClose
         0   -> MSC_Deinit
      16   nvm3_halFlashGetInfo
        16   -> SYSTEM_ChipRevisionGet
        16   -> SYSTEM_GetFlashPageSize
       8   nvm3_halFlashOpen
         8   -> MSC_Init
      16   nvm3_halFlashPageErase
        16   -> MSC_ErasePage
        16   -> SYSTEM_GetFlashPageSize
        16   -> convertMscStatusToNvm3Status
      16   nvm3_halFlashReadWords
        16   -> __aeabi_memcpy
      24   nvm3_halFlashWriteWords
        24   -> MSC_WriteWord
        24   -> convertMscStatusToNvm3Status
        24   -> memcmp


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
      16  convertMscStatusToNvm3Status
       2  nvm3_halFlashAccess
       4  nvm3_halFlashClose
      34  nvm3_halFlashGetInfo
      28  nvm3_halFlashHandle
      10  nvm3_halFlashOpen
      48  nvm3_halFlashPageErase
      52  nvm3_halFlashReadWords
      40  nvm3_halFlashWriteWords

 
  28 bytes in section .rodata
 222 bytes in section .text
 
 222 bytes of CODE  memory
  28 bytes of CONST memory

Errors: none
Warnings: none
