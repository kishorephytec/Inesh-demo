###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         27/Nov/2024  12:17:49
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\RTOS2\Source\os_systick.c
#    Command line      =
#        -f
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\Source_9534046957548667289.dir\os_systick.o.rsp
#        (C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\RTOS2\Source\os_systick.c
#        -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -D MBED_CONF_MBED_TRACE_ENABLE=1 -D
#        MBED_CONF_NANOSTACK_CONFIGURATION=ws_router -D
#        MBED_TRACE_MAX_LEVEL=TRACE_ACTIVE_LEVEL_ALL -D DEBUG_EFM_USER=1 -D
#        HAVE_LFN=1 -D HAVE_LFN_PARENT=1 -lC
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\Source_9534046957548667289.dir
#        --diag_suppress Pa050 -o
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\Source_9534046957548667289.dir
#        --debug --endian=little --cpu=Cortex-M33 --cmse --cmse -e
#        --fpu=VFPv5_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\RTOS2\Source\
#        -I C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\autogen\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\rail\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\Device\SiliconLabs\EFR32FG28\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\Core\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\RTOS2\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\device_init\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\dmadrv\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emlib\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\cmsis\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\portable\IAR\ARM_CM33_NTZ\non_secure\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\iostream\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\preset\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\nvm3\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\peripheral\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_psa_driver\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\common\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\wmbus\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\sidewalk\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\rail_util_pti\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\segger\systemview\SEGGER\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\silicon_labs\silabs_core\memory_manager\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\toolchain\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\system\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\ns_list\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\sleeptimer\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\app\wisun_rcp\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\socket\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\src\
#        -Ohz --use_c++_inline) --dependencies=n
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\Source_9534046957548667289.dir\os_systick.o.iar_deps
#    Locale            =  C
#    List file         =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\Source_9534046957548667289.dir\os_systick.lst
#    Object file       =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\Source_9534046957548667289.dir\os_systick.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\RTOS2\Source\os_systick.c
      1          /**************************************************************************//**
      2           * @file     os_systick.c
      3           * @brief    CMSIS OS Tick SysTick implementation
      4           * @version  V1.0.3
      5           * @date     19. March 2021
      6           ******************************************************************************/
      7          /*
      8           * Copyright (c) 2017-2021 ARM Limited. All rights reserved.
      9           *
     10           * SPDX-License-Identifier: Apache-2.0
     11           *
     12           * Licensed under the Apache License, Version 2.0 (the License); you may
     13           * not use this file except in compliance with the License.
     14           * You may obtain a copy of the License at
     15           *
     16           * www.apache.org/licenses/LICENSE-2.0
     17           *
     18           * Unless required by applicable law or agreed to in writing, software
     19           * distributed under the License is distributed on an AS IS BASIS, WITHOUT
     20           * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     21           * See the License for the specific language governing permissions and
     22           * limitations under the License.
     23           */
     24          
     25          #include "os_tick.h"
     26          
     27          //lint -emacro((923,9078),SCB,SysTick) "cast from unsigned long to pointer"
     28          #include "RTE_Components.h"
     29          #include CMSIS_device_header
     30          
     31          #ifdef  SysTick
     32          
     33          #ifndef SYSTICK_IRQ_PRIORITY
     34          #define SYSTICK_IRQ_PRIORITY    0xFFU
     35          #endif
     36          

   \                                 In section .bss.os, align 1
     37          static uint8_t PendST __attribute__((section(".bss.os")));
   \                     PendST:
   \        0x0                      DS8 1
     38          
     39          // Setup OS Tick.

   \                                 In section .text, align 4
     40          __WEAK int32_t OS_Tick_Setup (uint32_t freq, IRQHandler_t handler) {
     41            uint32_t load;
     42            (void)handler;
     43          
     44            if (freq == 0U) {
   \                     OS_Tick_Setup: (+1)
   \        0x0   0xB138             CBZ.N    R0,??OS_Tick_Setup_1
     45              //lint -e{904} "Return statement before end of function"
     46              return (-1);
     47            }
     48          
     49            load = (SystemCoreClock / freq) - 1U;
   \        0x2   0x4A0C             LDR.N    R2,??OS_Tick_Setup_0
   \        0x4   0x6811             LDR      R1,[R2, #+0]
   \        0x6   0xFBB1 0xF0F0      UDIV     R0,R1,R0
   \        0xA   0x1E40             SUBS     R0,R0,#+1
     50            if (load > 0x00FFFFFFU) {
   \        0xC   0xF1B0 0x7F80      CMP      R0,#+16777216
   \       0x10   0xD302             BCC.N    ??OS_Tick_Setup_2
     51              //lint -e{904} "Return statement before end of function"
     52              return (-1);
   \                     ??OS_Tick_Setup_1: (+1)
   \       0x12   0xF04F 0x30FF      MOV      R0,#+4294967295
   \       0x16   0x4770             BX       LR
     53            }
     54          
     55            // Set SysTick Interrupt Priority
     56          #if   ((defined(__ARM_ARCH_8M_MAIN__)   && (__ARM_ARCH_8M_MAIN__   != 0)) || \
     57                 (defined(__ARM_ARCH_8_1M_MAIN__) && (__ARM_ARCH_8_1M_MAIN__ != 0)) || \
     58                 (defined(__CORTEX_M)             && (__CORTEX_M             == 7U)))
     59            SCB->SHPR[11] = SYSTICK_IRQ_PRIORITY;
   \                     ??OS_Tick_Setup_2: (+1)
   \       0x18   0x23FF             MOVS     R3,#+255
   \       0x1A   0x4907             LDR.N    R1,??OS_Tick_Setup_0+4
   \       0x1C   0x700B             STRB     R3,[R1, #+0]
     60          #elif  (defined(__ARM_ARCH_8M_BASE__)   && (__ARM_ARCH_8M_BASE__   != 0))
     61            SCB->SHPR[1] |= ((uint32_t)SYSTICK_IRQ_PRIORITY << 24);
     62          #elif ((defined(__ARM_ARCH_7M__)        && (__ARM_ARCH_7M__        != 0)) || \
     63                 (defined(__ARM_ARCH_7EM__)       && (__ARM_ARCH_7EM__       != 0)))
     64            SCB->SHP[11]  = SYSTICK_IRQ_PRIORITY;
     65          #elif  (defined(__ARM_ARCH_6M__)        && (__ARM_ARCH_6M__        != 0))
     66            SCB->SHP[1]  |= ((uint32_t)SYSTICK_IRQ_PRIORITY << 24);
     67          #else
     68          #error "Unknown ARM Core!"
     69          #endif
     70          
     71            SysTick->CTRL =  SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_TICKINT_Msk;
   \       0x1E   0x4907             LDR.N    R1,??OS_Tick_Setup_0+8
   \       0x20   0x2206             MOVS     R2,#+6
   \       0x22   0x600A             STR      R2,[R1, #+0]
     72            SysTick->LOAD =  load;
   \       0x24   0x6048             STR      R0,[R1, #+4]
     73            SysTick->VAL  =  0U;
   \       0x26   0x2300             MOVS     R3,#+0
   \       0x28   0x608B             STR      R3,[R1, #+8]
     74          
     75            PendST = 0U;
   \       0x2A   0x4805             LDR.N    R0,??OS_Tick_Setup_0+12
   \       0x2C   0x7003             STRB     R3,[R0, #+0]
     76          
     77            return (0);
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0x4770             BX       LR
   \       0x32   0xBF00             Nop
   \                     ??OS_Tick_Setup_0:
   \       0x34   0x....'....        DC32     SystemCoreClock
   \       0x38   0xE000'ED23        DC32     0xe000ed23
   \       0x3C   0xE000'E010        DC32     0xe000e010
   \       0x40   0x....'....        DC32     PendST
     78          }
     79          
     80          /// Enable OS Tick.

   \                                 In section .text, align 4
     81          __WEAK void OS_Tick_Enable (void) {
     82          
     83            if (PendST != 0U) {
   \                     OS_Tick_Enable: (+1)
   \        0x0   0x4907             LDR.N    R1,??OS_Tick_Enable_0
   \        0x2   0x7808             LDRB     R0,[R1, #+0]
   \        0x4   0xB128             CBZ.N    R0,??OS_Tick_Enable_1
     84              PendST = 0U;
   \        0x6   0x2200             MOVS     R2,#+0
   \        0x8   0x700A             STRB     R2,[R1, #+0]
     85              SCB->ICSR = SCB_ICSR_PENDSTSET_Msk;
   \        0xA   0xF04F 0x6180      MOV      R1,#+67108864
   \        0xE   0x4805             LDR.N    R0,??OS_Tick_Enable_0+4
   \       0x10   0x6001             STR      R1,[R0, #+0]
     86            }
     87          
     88            SysTick->CTRL |=  SysTick_CTRL_ENABLE_Msk;
   \                     ??OS_Tick_Enable_1: (+1)
   \       0x12   0x4805             LDR.N    R0,??OS_Tick_Enable_0+8
   \       0x14   0x6801             LDR      R1,[R0, #+0]
   \       0x16   0xF041 0x0101      ORR      R1,R1,#0x1
   \       0x1A   0x6001             STR      R1,[R0, #+0]
     89          }
   \       0x1C   0x4770             BX       LR
   \       0x1E   0xBF00             Nop
   \                     ??OS_Tick_Enable_0:
   \       0x20   0x....'....        DC32     PendST
   \       0x24   0xE000'ED04        DC32     0xe000ed04
   \       0x28   0xE000'E010        DC32     0xe000e010
     90          
     91          /// Disable OS Tick.

   \                                 In section .text, align 4
     92          __WEAK void OS_Tick_Disable (void) {
     93          
     94            SysTick->CTRL &= ~SysTick_CTRL_ENABLE_Msk;
   \                     OS_Tick_Disable: (+1)
   \        0x0   0x4907             LDR.N    R1,??OS_Tick_Disable_0
   \        0x2   0x6808             LDR      R0,[R1, #+0]
   \        0x4   0x0840             LSRS     R0,R0,#+1
   \        0x6   0x0040             LSLS     R0,R0,#+1
   \        0x8   0x6008             STR      R0,[R1, #+0]
     95          
     96            if ((SCB->ICSR & SCB_ICSR_PENDSTSET_Msk) != 0U) {
   \        0xA   0x4806             LDR.N    R0,??OS_Tick_Disable_0+4
   \        0xC   0x6801             LDR      R1,[R0, #+0]
   \        0xE   0x014B             LSLS     R3,R1,#+5
   \       0x10   0xD505             BPL.N    ??OS_Tick_Disable_1
     97              SCB->ICSR = SCB_ICSR_PENDSTCLR_Msk;
   \       0x12   0xF04F 0x7200      MOV      R2,#+33554432
   \       0x16   0x6002             STR      R2,[R0, #+0]
     98              PendST = 1U;
   \       0x18   0x2101             MOVS     R1,#+1
   \       0x1A   0x4803             LDR.N    R0,??OS_Tick_Disable_0+8
   \       0x1C   0x7001             STRB     R1,[R0, #+0]
     99            }
    100          }
   \                     ??OS_Tick_Disable_1: (+1)
   \       0x1E   0x4770             BX       LR
   \                     ??OS_Tick_Disable_0:
   \       0x20   0xE000'E010        DC32     0xe000e010
   \       0x24   0xE000'ED04        DC32     0xe000ed04
   \       0x28   0x....'....        DC32     PendST
    101          
    102          // Acknowledge OS Tick IRQ.

   \                                 In section .text, align 4
    103          __WEAK void OS_Tick_AcknowledgeIRQ (void) {
    104            (void)SysTick->CTRL;
   \                     OS_Tick_AcknowledgeIRQ: (+1)
   \        0x0   0x4901             LDR.N    R1,??OS_Tick_AcknowledgeIRQ_0
   \        0x2   0x6808             LDR      R0,[R1, #+0]
    105          }
   \        0x4   0x4770             BX       LR
   \        0x6   0xBF00             Nop
   \                     ??OS_Tick_AcknowledgeIRQ_0:
   \        0x8   0xE000'E010        DC32     0xe000e010
    106          
    107          // Get OS Tick IRQ number.

   \                                 In section .text, align 2
    108          __WEAK int32_t  OS_Tick_GetIRQn (void) {
    109            return ((int32_t)SysTick_IRQn);
   \                     OS_Tick_GetIRQn: (+1)
   \        0x0   0xF04F 0x30FF      MOV      R0,#+4294967295
   \        0x4   0x4770             BX       LR
    110          }
    111          
    112          // Get OS Tick clock.

   \                                 In section .text, align 4
    113          __WEAK uint32_t OS_Tick_GetClock (void) {
    114            return (SystemCoreClock);
   \                     OS_Tick_GetClock: (+1)
   \        0x0   0x4801             LDR.N    R0,??OS_Tick_GetClock_0
   \        0x2   0x6800             LDR      R0,[R0, #+0]
   \        0x4   0x4770             BX       LR
   \        0x6   0xBF00             Nop
   \                     ??OS_Tick_GetClock_0:
   \        0x8   0x....'....        DC32     SystemCoreClock
    115          }
    116          
    117          // Get OS Tick interval.

   \                                 In section .text, align 4
    118          __WEAK uint32_t OS_Tick_GetInterval (void) {
    119            return (SysTick->LOAD + 1U);
   \                     OS_Tick_GetInterval: (+1)
   \        0x0   0x4801             LDR.N    R0,??OS_Tick_GetInterval_0
   \        0x2   0x6800             LDR      R0,[R0, #+0]
   \        0x4   0x1C40             ADDS     R0,R0,#+1
   \        0x6   0x4770             BX       LR
   \                     ??OS_Tick_GetInterval_0:
   \        0x8   0xE000'E014        DC32     0xe000e014
    120          }
    121          
    122          // Get OS Tick count value.

   \                                 In section .text, align 4
    123          __WEAK uint32_t OS_Tick_GetCount (void) {
    124            uint32_t load = SysTick->LOAD;
   \                     OS_Tick_GetCount: (+1)
   \        0x0   0x4902             LDR.N    R1,??OS_Tick_GetCount_0
   \        0x2   0x6808             LDR      R0,[R1, #+0]
    125            return  (load - SysTick->VAL);
   \        0x4   0x6849             LDR      R1,[R1, #+4]
   \        0x6   0x1A40             SUBS     R0,R0,R1
   \        0x8   0x4770             BX       LR
   \        0xA   0xBF00             Nop
   \                     ??OS_Tick_GetCount_0:
   \        0xC   0xE000'E014        DC32     0xe000e014
    126          }
    127          
    128          // Get OS Tick overflow status.

   \                                 In section .text, align 4
    129          __WEAK uint32_t OS_Tick_GetOverflow (void) {
    130            return ((SCB->ICSR & SCB_ICSR_PENDSTSET_Msk) >> SCB_ICSR_PENDSTSET_Pos);
   \                     OS_Tick_GetOverflow: (+1)
   \        0x0   0x4902             LDR.N    R1,??OS_Tick_GetOverflow_0
   \        0x2   0x6808             LDR      R0,[R1, #+0]
   \        0x4   0xF3C0 0x6080      UBFX     R0,R0,#+26,#+1
   \        0x8   0x4770             BX       LR
   \        0xA   0xBF00             Nop
   \                     ??OS_Tick_GetOverflow_0:
   \        0xC   0xE000'ED04        DC32     0xe000ed04
    131          }
    132          
    133          #endif  // SysTick

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   OS_Tick_AcknowledgeIRQ
       0   OS_Tick_Disable
       0   OS_Tick_Enable
       0   OS_Tick_GetClock
       0   OS_Tick_GetCount
       0   OS_Tick_GetIRQn
       0   OS_Tick_GetInterval
       0   OS_Tick_GetOverflow
       0   OS_Tick_Setup


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  OS_Tick_AcknowledgeIRQ
      44  OS_Tick_Disable
      44  OS_Tick_Enable
      12  OS_Tick_GetClock
      16  OS_Tick_GetCount
       6  OS_Tick_GetIRQn
      12  OS_Tick_GetInterval
      16  OS_Tick_GetOverflow
      68  OS_Tick_Setup
       1  PendST

 
   1 byte  in section .bss.os
 230 bytes in section .text
 
 0 bytes of CODE memory (+ 230 bytes shared)
 1 byte  of DATA memory

Errors: none
Warnings: none
