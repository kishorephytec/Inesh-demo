###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         27/Nov/2024  12:17:49
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\nanostack\nanostack-libservice\source\libBits\common_functions.c
#    Command line      =
#        -f
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\libBits_502825786182981814.dir\common_functions.o.rsp
#        (C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\nanostack\nanostack-libservice\source\libBits\common_functions.c
#        -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -D MBED_CONF_MBED_TRACE_ENABLE=1 -D
#        MBED_CONF_NANOSTACK_CONFIGURATION=ws_router -D
#        MBED_TRACE_MAX_LEVEL=TRACE_ACTIVE_LEVEL_ALL -D DEBUG_EFM_USER=1 -D
#        HAVE_LFN=1 -D HAVE_LFN_PARENT=1 -lC
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\libBits_502825786182981814.dir
#        --diag_suppress Pa050 -o
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\libBits_502825786182981814.dir
#        --debug --endian=little --cpu=Cortex-M33 --cmse --cmse -e
#        --fpu=VFPv5_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\nanostack\nanostack-libservice\source\libBits\
#        -I C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\autogen\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\rail\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\Device\SiliconLabs\EFR32FG28\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\Core\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\RTOS2\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\device_init\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\dmadrv\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emlib\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\cmsis\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\portable\IAR\ARM_CM33_NTZ\non_secure\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\iostream\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\preset\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\nvm3\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\peripheral\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_psa_driver\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\common\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\wmbus\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\sidewalk\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\rail_util_pti\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\segger\systemview\SEGGER\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\silicon_labs\silabs_core\memory_manager\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\toolchain\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\system\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\ns_list\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\sleeptimer\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\app\wisun_rcp\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\socket\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\src\
#        -Ohz --use_c++_inline) --dependencies=n
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\libBits_502825786182981814.dir\common_functions.o.iar_deps
#    Locale            =  C
#    List file         =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\libBits_502825786182981814.dir\common_functions.lst
#    Object file       =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\libBits_502825786182981814.dir\common_functions.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\nanostack\nanostack-libservice\source\libBits\common_functions.c
      1          /*
      2           * Copyright (c) 2014-2015 ARM Limited. All rights reserved.
      3           * SPDX-License-Identifier: Apache-2.0
      4           * Licensed under the Apache License, Version 2.0 (the License); you may
      5           * not use this file except in compliance with the License.
      6           * You may obtain a copy of the License at
      7           *
      8           * http://www.apache.org/licenses/LICENSE-2.0
      9           *
     10           * Unless required by applicable law or agreed to in writing, software
     11           * distributed under the License is distributed on an AS IS BASIS, WITHOUT
     12           * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     13           * See the License for the specific language governing permissions and
     14           * limitations under the License.
     15           */
     16          
     17          #include "common_functions.h"
     18          #include "common_inlined_functions.h"
     19          
     20          #include <string.h>
     21          
     22          /* Returns mask for <split_value> (0-8) most-significant bits of a byte */
     23          static inline uint8_t context_split_mask(uint_fast8_t split_value)
     24          {
     25            return (uint8_t) -(0x100u >> split_value);
     26          }
     27          

   \                                 In section .text, align 2, keep-with-next
     28          bool bitsequal(const uint8_t *a, const uint8_t *b, uint_fast8_t bits)
     29          {
   \                     bitsequal: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x.... 0x....      BL       ?Subroutine0
     30            uint_fast8_t bytes = bits / 8;
     31            bits %= 8;
     32          
     33            if (bytes && memcmp(a, b, bytes)) {
   \                     ??CrossCallReturnLabel_0: (+1)
   \        0x6   0xD003             BEQ.N    ??bitsequal_0
   \        0x8   0x462A             MOV      R2,R5
   \        0xA   0x.... 0x....      BL       memcmp
   \        0xE   0xB950             CBNZ.N   R0,??bitsequal_1
     34              return false;
     35            }
     36          
     37            if (bits) {
   \                     ??bitsequal_0: (+1)
   \       0x10   0xB15C             CBZ.N    R4,??bitsequal_2
     38              uint_fast8_t split_bit = context_split_mask(bits);
   \       0x12   0xF44F 0x7080      MOV      R0,#+256
     39              if ((a[bytes] & split_bit) != (b[bytes] & split_bit)) {
   \       0x16   0x5D71             LDRB     R1,[R6, R5]
   \       0x18   0x40E0             LSRS     R0,R0,R4
   \       0x1A   0x5D7A             LDRB     R2,[R7, R5]
   \       0x1C   0x4240             RSBS     R0,R0,#+0
   \       0x1E   0x4001             ANDS     R1,R0,R1
   \       0x20   0x4010             ANDS     R0,R0,R2
   \       0x22   0x4281             CMP      R1,R0
   \       0x24   0xD001             BEQ.N    ??bitsequal_2
     40                return false;
   \                     ??bitsequal_1: (+1)
   \       0x26   0x2000             MOVS     R0,#+0
   \       0x28   0xBDF2             POP      {R1,R4-R7,PC}
     41              }
     42            }
     43          
     44            return true;
   \                     ??bitsequal_2: (+1)
   \       0x2A   0x2001             MOVS     R0,#+1
   \       0x2C   0xBDF2             POP      {R1,R4-R7,PC}
     45          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0x4606             MOV      R6,R0
   \        0x2   0x460F             MOV      R7,R1
   \        0x4   0x08D5             LSRS     R5,R2,#+3
   \        0x6   0xF002 0x0407      AND      R4,R2,#0x7
   \        0xA   0x4770             BX       LR
     46          

   \                                 In section .text, align 2, keep-with-next
     47          uint8_t *bitcopy(uint8_t *restrict dst, const uint8_t *restrict src, uint_fast8_t bits)
     48          {
   \                     bitcopy: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x.... 0x....      BL       ?Subroutine0
     49            uint_fast8_t bytes = bits / 8;
     50            bits %= 8;
     51          
     52            if (bytes) {
   \                     ??CrossCallReturnLabel_1: (+1)
   \        0x6   0xD004             BEQ.N    ??bitcopy_0
     53              dst = (uint8_t *) memcpy(dst, src, bytes) + bytes;
   \        0x8   0x462A             MOV      R2,R5
   \        0xA   0x.... 0x....      BL       __aeabi_memcpy
   \        0xE   0x442E             ADD      R6,R6,R5
     54              src += bytes;
   \       0x10   0x442F             ADD      R7,R7,R5
     55            }
     56          
     57            if (bits) {
   \                     ??bitcopy_0: (+1)
   \       0x12   0xB15C             CBZ.N    R4,??bitcopy_1
     58              uint_fast8_t split_bit = context_split_mask(bits);
   \       0x14   0xF44F 0x7080      MOV      R0,#+256
   \       0x18   0x40E0             LSRS     R0,R0,R4
     59              *dst = (*src & split_bit) | (*dst & ~split_bit);
   \       0x1A   0x783A             LDRB     R2,[R7, #+0]
   \       0x1C   0x4240             RSBS     R0,R0,#+0
   \       0x1E   0x7831             LDRB     R1,[R6, #+0]
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x4002             ANDS     R2,R0,R2
   \       0x24   0xEA21 0x0000      BIC      R0,R1,R0
   \       0x28   0x4310             ORRS     R0,R0,R2
   \       0x2A   0x7030             STRB     R0,[R6, #+0]
     60            }
     61          
     62            return dst;
   \                     ??bitcopy_1: (+1)
   \       0x2C   0x4630             MOV      R0,R6
   \       0x2E   0xBDF2             POP      {R1,R4-R7,PC}
     63          }
     64          

   \                                 In section .text, align 2, keep-with-next
     65          uint8_t *bitcopy0(uint8_t *restrict dst, const uint8_t *restrict src, uint_fast8_t bits)
     66          {
   \                     bitcopy0: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x.... 0x....      BL       ?Subroutine0
     67            uint_fast8_t bytes = bits / 8;
     68            bits %= 8;
     69          
     70            if (bytes) {
   \                     ??CrossCallReturnLabel_2: (+1)
   \        0x6   0xD004             BEQ.N    ??bitcopy0_0
     71              dst = (uint8_t *) memcpy(dst, src, bytes) + bytes;
   \        0x8   0x462A             MOV      R2,R5
   \        0xA   0x.... 0x....      BL       __aeabi_memcpy
   \        0xE   0x442E             ADD      R6,R6,R5
     72              src += bytes;
   \       0x10   0x442F             ADD      R7,R7,R5
     73            }
     74          
     75            if (bits) {
   \                     ??bitcopy0_0: (+1)
   \       0x12   0xB134             CBZ.N    R4,??bitcopy0_1
     76              uint_fast8_t split_bit = context_split_mask(bits);
     77              *dst = (*src & split_bit);
   \       0x14   0x7839             LDRB     R1,[R7, #+0]
   \       0x16   0xF44F 0x7080      MOV      R0,#+256
   \       0x1A   0x40E0             LSRS     R0,R0,R4
   \       0x1C   0x4240             RSBS     R0,R0,#+0
   \       0x1E   0x4001             ANDS     R1,R0,R1
   \       0x20   0x7031             STRB     R1,[R6, #+0]
     78            }
     79          
     80            return dst;
   \                     ??bitcopy0_1: (+1)
   \       0x22   0x4630             MOV      R0,R6
   \       0x24   0xBDF2             POP      {R1,R4-R7,PC}
     81          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   bitcopy
        24   -> __aeabi_memcpy
      24   bitcopy0
        24   -> __aeabi_memcpy
      24   bitsequal
        24   -> memcmp


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?Subroutine0
      48  bitcopy
      38  bitcopy0
      46  bitsequal

 
 144 bytes in section .text
 
 144 bytes of CODE memory

Errors: none
Warnings: none
