###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         27/Nov/2024  12:16:59
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\sl_se_manager_entropy.c
#    Command line      =
#        -f
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_10660899288376800039.dir\sl_se_manager_entropy.o.rsp
#        (C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\sl_se_manager_entropy.c
#        -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -D MBED_CONF_MBED_TRACE_ENABLE=1 -D
#        MBED_CONF_NANOSTACK_CONFIGURATION=ws_router -D
#        MBED_TRACE_MAX_LEVEL=TRACE_ACTIVE_LEVEL_ALL -D DEBUG_EFM_USER=1 -D
#        HAVE_LFN=1 -D HAVE_LFN_PARENT=1 -lC
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\src_10660899288376800039.dir
#        --diag_suppress Pa050 -o
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_10660899288376800039.dir
#        --debug --endian=little --cpu=Cortex-M33 --cmse --cmse -e
#        --fpu=VFPv5_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\
#        -I C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\autogen\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\rail\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\Device\SiliconLabs\EFR32FG28\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\Core\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\RTOS2\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\device_init\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\dmadrv\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emlib\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\cmsis\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\portable\IAR\ARM_CM33_NTZ\non_secure\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\iostream\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\preset\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\nvm3\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\peripheral\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_psa_driver\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\common\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\wmbus\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\sidewalk\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\rail_util_pti\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\segger\systemview\SEGGER\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\silicon_labs\silabs_core\memory_manager\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\toolchain\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\system\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\ns_list\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\sleeptimer\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\app\wisun_rcp\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\socket\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\src\
#        -Ohz --use_c++_inline) --dependencies=n
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_10660899288376800039.dir\sl_se_manager_entropy.o.iar_deps
#    Locale            =  C
#    List file         =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\src_10660899288376800039.dir\sl_se_manager_entropy.lst
#    Object file       =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_10660899288376800039.dir\sl_se_manager_entropy.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\sl_se_manager_entropy.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Silicon Labs Secure Engine Manager API.
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2020 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * SPDX-License-Identifier: Zlib
     10           *
     11           * The licensor of this software is Silicon Laboratories Inc.
     12           *
     13           * This software is provided 'as-is', without any express or implied
     14           * warranty. In no event will the authors be held liable for any damages
     15           * arising from the use of this software.
     16           *
     17           * Permission is granted to anyone to use this software for any purpose,
     18           * including commercial applications, and to alter it and redistribute it
     19           * freely, subject to the following restrictions:
     20           *
     21           * 1. The origin of this software must not be misrepresented; you must not
     22           *    claim that you wrote the original software. If you use this software
     23           *    in a product, an acknowledgment in the product documentation would be
     24           *    appreciated but is not required.
     25           * 2. Altered source versions must be plainly marked as such, and must not be
     26           *    misrepresented as being the original software.
     27           * 3. This notice may not be removed or altered from any source distribution.
     28           *
     29           ******************************************************************************/
     30          
     31          #include "sl_se_manager.h"
     32          
     33          #if defined(SLI_MAILBOX_COMMAND_SUPPORTED)
     34          
     35          #include "sli_se_manager_internal.h"
     36          #include "em_se.h"
     37          #include <string.h>
     38          
     39          /// @addtogroup sl_se_manager
     40          /// @{
     41          
     42          // -----------------------------------------------------------------------------
     43          // Global Functions
     44          
     45          /***************************************************************************//**
     46           * Get random data from hardware TRNG.
     47           ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
     48          sl_status_t sl_se_get_random(sl_se_command_context_t *cmd_ctx,
     49                                       void * data,
     50                                       uint32_t num_bytes)
     51          {
   \                     sl_se_get_random: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x4605             MOV      R5,R0
   \        0x6   0xB084             SUB      SP,SP,#+16
     52            SE_Command_t *se_cmd;
     53            sl_status_t ret;
     54            uint32_t surplus_bytes, i;
     55            uint32_t surplus_word = 0;
   \        0x8   0x2000             MOVS     R0,#+0
   \        0xA   0x460F             MOV      R7,R1
   \        0xC   0x9000             STR      R0,[SP, #+0]
     56          
     57            if (cmd_ctx == NULL || (num_bytes != 0 && data == NULL)) {
   \        0xE   0xB10D             CBZ.N    R5,??sl_se_get_random_0
   \       0x10   0xB112             CBZ.N    R2,??sl_se_get_random_1
   \       0x12   0xB90F             CBNZ.N   R7,??sl_se_get_random_1
     58              return SL_STATUS_INVALID_PARAMETER;
   \                     ??sl_se_get_random_0: (+1)
   \       0x14   0x2021             MOVS     R0,#+33
   \       0x16   0xE05B             B.N      ??sl_se_get_random_2
     59            }
     60          
     61            se_cmd = &cmd_ctx->command;
     62            surplus_bytes = num_bytes & 0x3U;
     63            num_bytes &= ~0x3U;
   \                     ??sl_se_get_random_1: (+1)
   \       0x18   0x0894             LSRS     R4,R2,#+2
   \       0x1A   0xF002 0x0603      AND      R6,R2,#0x3
   \       0x1E   0x00A4             LSLS     R4,R4,#+2
     64          
     65            if (num_bytes > 0U) {
   \       0x20   0xF04F 0x69E0      MOV      R9,#+117440512
   \       0x24   0xD024             BEQ.N    ??sl_se_get_random_3
     66              sli_se_command_init(cmd_ctx, SLI_SE_COMMAND_TRNG_GET_RANDOM);
   \       0x26   0xF8C5 0x9000      STR      R9,[R5, #+0]
   \       0x2A   0x6068             STR      R0,[R5, #+4]
   \       0x2C   0x60A8             STR      R0,[R5, #+8]
   \       0x2E   0x61E8             STR      R0,[R5, #+28]
     67              SE_DataTransfer_t data_out = SE_DATATRANSFER_DEFAULT(data, num_bytes);
   \       0x30   0x....             ADR.N    R0,?_0
   \       0x32   0xE890 0x000E      LDM      R0,{R1-R3}
   \       0x36   0xF10D 0x0E04      ADD      LR,SP,#+4
   \       0x3A   0xF044 0x5800      ORR      R8,R4,#0x20000000
   \       0x3E   0xE88E 0x000E      STM      LR,{R1-R3}
   \       0x42   0x9701             STR      R7,[SP, #+4]
   \       0x44   0xF8CD 0x800C      STR      R8,[SP, #+12]
     68          
     69              SE_addDataOutput(se_cmd, &data_out);
   \       0x48   0xA901             ADD      R1,SP,#+4
   \       0x4A   0x4628             MOV      R0,R5
   \       0x4C   0x.... 0x....      BL       SE_addDataOutput
     70              SE_addParameter(se_cmd, num_bytes);
   \       0x50   0x4621             MOV      R1,R4
   \       0x52   0x4628             MOV      R0,R5
   \       0x54   0x.... 0x....      BL       SE_addParameter
     71          
     72              // Execute and wait
     73              if ((ret = sli_se_execute_and_wait(cmd_ctx)) != SL_STATUS_OK) {
   \       0x58   0x4628             MOV      R0,R5
   \       0x5A   0x.... 0x....      BL       sli_se_execute_and_wait
   \       0x5E   0xEA5F 0x0800      MOVS     R8,R0
   \       0x62   0xD005             BEQ.N    ??sl_se_get_random_3
     74                memset(data, 0, num_bytes);
   \       0x64   0x4621             MOV      R1,R4
   \       0x66   0x4638             MOV      R0,R7
   \       0x68   0x.... 0x....      BL       __aeabi_memclr
     75                return ret;
   \       0x6C   0x4640             MOV      R0,R8
   \       0x6E   0xE02F             B.N      ??sl_se_get_random_2
     76              }
     77            }
     78          
     79            if (surplus_bytes > 0) {
   \                     ??sl_se_get_random_3: (+1)
   \       0x70   0xB36E             CBZ.N    R6,??sl_se_get_random_4
     80              sli_se_command_init(cmd_ctx, SLI_SE_COMMAND_TRNG_GET_RANDOM);
   \       0x72   0xF8C5 0x9000      STR      R9,[R5, #+0]
   \       0x76   0x2000             MOVS     R0,#+0
   \       0x78   0x6068             STR      R0,[R5, #+4]
   \       0x7A   0x60A8             STR      R0,[R5, #+8]
   \       0x7C   0x61E8             STR      R0,[R5, #+28]
     81              SE_DataTransfer_t data_out = SE_DATATRANSFER_DEFAULT(&surplus_word, 4);
   \       0x7E   0xBF00             Nop
   \       0x80   0x....             ADR.N    R0,?_1
   \       0x82   0xE890 0x000E      LDM      R0,{R1-R3}
   \       0x86   0xF10D 0x0E04      ADD      LR,SP,#+4
   \       0x8A   0x46E8             MOV      R8,SP
   \       0x8C   0xE88E 0x000E      STM      LR,{R1-R3}
   \       0x90   0xF8CD 0x8004      STR      R8,[SP, #+4]
     82          
     83              SE_addDataOutput(se_cmd, &data_out);
   \       0x94   0xA901             ADD      R1,SP,#+4
   \       0x96   0x4628             MOV      R0,R5
   \       0x98   0x.... 0x....      BL       SE_addDataOutput
     84              SE_addParameter(se_cmd, 4);
   \       0x9C   0x2104             MOVS     R1,#+4
   \       0x9E   0x4628             MOV      R0,R5
   \       0xA0   0x.... 0x....      BL       SE_addParameter
     85          
     86              // Execute and wait
     87              if ((ret = sli_se_execute_and_wait(cmd_ctx)) != SL_STATUS_OK) {
   \       0xA4   0x4628             MOV      R0,R5
   \       0xA6   0x.... 0x....      BL       sli_se_execute_and_wait
   \       0xAA   0x0005             MOVS     R5,R0
   \       0xAC   0xD005             BEQ.N    ??sl_se_get_random_5
     88                memset(data, 0, num_bytes + surplus_bytes);
   \       0xAE   0x1931             ADDS     R1,R6,R4
   \       0xB0   0x4638             MOV      R0,R7
   \       0xB2   0x.... 0x....      BL       __aeabi_memclr
     89                return ret;
   \       0xB6   0x4628             MOV      R0,R5
   \       0xB8   0xE00A             B.N      ??sl_se_get_random_2
     90              }
     91          
     92              uint8_t *output = (uint8_t*)data + num_bytes;
     93              for (i = 0; i < surplus_bytes; i++) {
   \                     ??sl_se_get_random_5: (+1)
   \       0xBA   0x2100             MOVS     R1,#+0
   \       0xBC   0xE005             B.N      ??sl_se_get_random_6
     94                output[i] = (surplus_word >> (i * 8U)) & 0xFFU;
   \                     ??sl_se_get_random_7: (+1)
   \       0xBE   0x9800             LDR      R0,[SP, #+0]
   \       0xC0   0x00CA             LSLS     R2,R1,#+3
   \       0xC2   0x40D0             LSRS     R0,R0,R2
   \       0xC4   0x193A             ADDS     R2,R7,R4
   \       0xC6   0x5450             STRB     R0,[R2, R1]
     95              }
   \       0xC8   0x1C49             ADDS     R1,R1,#+1
   \                     ??sl_se_get_random_6: (+1)
   \       0xCA   0x42B1             CMP      R1,R6
   \       0xCC   0xD3F7             BCC.N    ??sl_se_get_random_7
     96            }
     97          
     98            return SL_STATUS_OK;
   \                     ??sl_se_get_random_4: (+1)
   \       0xCE   0x2000             MOVS     R0,#+0
   \                     ??sl_se_get_random_2: (+1)
   \       0xD0   0xB005             ADD      SP,SP,#+20
   \       0xD2   0xE8BD 0x83F0      POP      {R4-R9,PC}
     99          }

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \        0x0   0x0000'0000        DC32 0x0, 0x1, 0
   \              0x0000'0001  
   \              0x0000'0000

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \        0x0   0x0000'0000        DC32 0x0, 0x1, 536'870'916
   \              0x0000'0001  
   \              0x2000'0004
    100          
    101          /** @} (end addtogroup sl_se) */
    102          
    103          #endif // defined(SLI_MAILBOX_COMMAND_SUPPORTED)

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      48   sl_se_get_random
        48   -> SE_addDataOutput
        48   -> SE_addParameter
        48   -> __aeabi_memclr
        48   -> sli_se_execute_and_wait


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?_0
      12  ?_1
     214  sl_se_get_random

 
 238 bytes in section .text
 
 238 bytes of CODE memory

Errors: none
Warnings: none
