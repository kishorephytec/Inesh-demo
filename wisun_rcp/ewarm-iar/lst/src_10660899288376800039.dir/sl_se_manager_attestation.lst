###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         27/Nov/2024  12:17:59
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\sl_se_manager_attestation.c
#    Command line      =
#        -f
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_10660899288376800039.dir\sl_se_manager_attestation.o.rsp
#        (C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\sl_se_manager_attestation.c
#        -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -D MBED_CONF_MBED_TRACE_ENABLE=1 -D
#        MBED_CONF_NANOSTACK_CONFIGURATION=ws_router -D
#        MBED_TRACE_MAX_LEVEL=TRACE_ACTIVE_LEVEL_ALL -D DEBUG_EFM_USER=1 -D
#        HAVE_LFN=1 -D HAVE_LFN_PARENT=1 -lC
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\src_10660899288376800039.dir
#        --diag_suppress Pa050 -o
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_10660899288376800039.dir
#        --debug --endian=little --cpu=Cortex-M33 --cmse --cmse -e
#        --fpu=VFPv5_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\
#        -I C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\autogen\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\rail\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\Device\SiliconLabs\EFR32FG28\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\Core\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\RTOS2\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\device_init\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\dmadrv\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emlib\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\cmsis\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\portable\IAR\ARM_CM33_NTZ\non_secure\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\iostream\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\preset\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\nvm3\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\peripheral\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_psa_driver\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\common\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\wmbus\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\sidewalk\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\rail_util_pti\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\segger\systemview\SEGGER\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\silicon_labs\silabs_core\memory_manager\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\toolchain\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\system\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\ns_list\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\sleeptimer\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\app\wisun_rcp\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\socket\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\src\
#        -Ohz --use_c++_inline) --dependencies=n
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_10660899288376800039.dir\sl_se_manager_attestation.o.iar_deps
#    Locale            =  C
#    List file         =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\src_10660899288376800039.dir\sl_se_manager_attestation.lst
#    Object file       =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_10660899288376800039.dir\sl_se_manager_attestation.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\sl_se_manager_attestation.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Silicon Labs Secure Engine Manager API.
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2020 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * SPDX-License-Identifier: Zlib
     10           *
     11           * The licensor of this software is Silicon Laboratories Inc.
     12           *
     13           * This software is provided 'as-is', without any express or implied
     14           * warranty. In no event will the authors be held liable for any damages
     15           * arising from the use of this software.
     16           *
     17           * Permission is granted to anyone to use this software for any purpose,
     18           * including commercial applications, and to alter it and redistribute it
     19           * freely, subject to the following restrictions:
     20           *
     21           * 1. The origin of this software must not be misrepresented; you must not
     22           *    claim that you wrote the original software. If you use this software
     23           *    in a product, an acknowledgment in the product documentation would be
     24           *    appreciated but is not required.
     25           * 2. Altered source versions must be plainly marked as such, and must not be
     26           *    misrepresented as being the original software.
     27           * 3. This notice may not be removed or altered from any source distribution.
     28           *
     29           ******************************************************************************/
     30          
     31          #include "sl_se_manager.h"
     32          
     33          #if defined(SLI_MAILBOX_COMMAND_SUPPORTED) \
     34            && (_SILICON_LABS_SECURITY_FEATURE == _SILICON_LABS_SECURITY_FEATURE_VAULT)
     35          
     36          #include "sl_se_manager.h"
     37          #include "sli_se_manager_internal.h"
     38          #include "sl_se_manager_attestation.h"
     39          #include "em_se.h"
     40          
     41          /// @addtogroup sl_se_manager
     42          /// @{
     43          
     44          // -----------------------------------------------------------------------------
     45          // Static Functions
     46          
     47          /***************************************************************************//**
     48           * @brief
     49           *   Validate the command word, challenge size and update command word with
     50           *   option flags
     51           *
     52           * @param[in, out] command_word
     53           *   The command word to send to the SE. Will be modified to reflect challenge
     54           *   size.
     55           *
     56           * @param challenge_size
     57           *   Size of the challenge to be used.
     58           *
     59           * @return
     60           *   Status code, @ref sl_status.h.
     61           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     62          static sl_status_t validate_and_update_command_word(uint32_t *command_word,
     63                                                              size_t challenge_size)
     64          {
   \                     validate_and_update_command_word: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x6802             LDR      R2,[R0, #+0]
     65            // Check supported challenge sizes
     66            uint32_t command_id = *command_word & 0xFFFF0000UL;
     67            if (command_id == SLI_SE_COMMAND_ATTEST_PSA_IAT) {
   \        0x4   0x....             LDR.N    R4,??DataTable9
   \        0x6   0x0C13             LSRS     R3,R2,#+16
   \        0x8   0x041B             LSLS     R3,R3,#+16
   \        0xA   0x42A3             CMP      R3,R4
   \        0xC   0xD111             BNE.N    ??validate_and_update_command_word_0
     68              switch (challenge_size) {
   \        0xE   0x2920             CMP      R1,#+32
   \       0x10   0xD004             BEQ.N    ??validate_and_update_command_word_1
   \       0x12   0x2930             CMP      R1,#+48
   \       0x14   0xD007             BEQ.N    ??validate_and_update_command_word_2
   \       0x16   0x2940             CMP      R1,#+64
   \       0x18   0xD008             BEQ.N    ??validate_and_update_command_word_3
   \       0x1A   0xE00F             B.N      ??validate_and_update_command_word_4
     69                case SL_SE_ATTESTATION_CHALLENGE_SIZE_32:
     70                  *command_word |= 0x01 << 8;
   \                     ??validate_and_update_command_word_1: (+1)
   \       0x1C   0xF442 0x7280      ORR      R2,R2,#0x100
     71                  break;
     72                case SL_SE_ATTESTATION_CHALLENGE_SIZE_48:
     73                  *command_word |= 0x02 << 8;
     74                  break;
     75                case SL_SE_ATTESTATION_CHALLENGE_SIZE_64:
     76                  *command_word |= 0x03 << 8;
     77                  break;
     78                default:
     79                  return SL_STATUS_INVALID_PARAMETER;
     80              }
     81            } else if (command_id == SLI_SE_COMMAND_ATTEST_CONFIG) {
     82              if (challenge_size != SL_SE_ATTESTATION_CHALLENGE_SIZE_32) {
     83                return SL_STATUS_INVALID_PARAMETER;
     84              }
     85              // No need to do anything with the command word
     86            } else {
     87              // Unknown command ID
     88              return SL_STATUS_INVALID_PARAMETER;
     89            }
     90            // All the checks passed
     91            return SL_STATUS_OK;
   \                     ??validate_and_update_command_word_5: (+1)
   \       0x20   0x6002             STR      R2,[R0, #+0]
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0xBD10             POP      {R4,PC}
   \                     ??validate_and_update_command_word_2: (+1)
   \       0x26   0xF442 0x7200      ORR      R2,R2,#0x200
   \       0x2A   0xE7F9             B.N      ??validate_and_update_command_word_5
   \                     ??validate_and_update_command_word_3: (+1)
   \       0x2C   0xF442 0x7240      ORR      R2,R2,#0x300
   \       0x30   0xE7F6             B.N      ??validate_and_update_command_word_5
   \                     ??validate_and_update_command_word_0: (+1)
   \       0x32   0x....             LDR.N    R4,??DataTable9_1
   \       0x34   0x42A3             CMP      R3,R4
   \       0x36   0xBF08             IT       EQ
   \       0x38   0x2920             CMPEQ    R1,#+32
   \       0x3A   0xD0F1             BEQ.N    ??validate_and_update_command_word_5
   \                     ??validate_and_update_command_word_4: (+1)
   \       0x3C   0x2021             MOVS     R0,#+33
   \       0x3E   0xBD10             POP      {R4,PC}
     92          }
     93          
     94          /***************************************************************************//**
     95           * @brief
     96           *   Get the PSA initial attest token from the SE
     97           *
     98           * @param[in] cmd_ctx
     99           *   SE command context struct.
    100           *
    101           * @param[in] challenge_size
    102           *   Size of the challenge object in bytes. Must be either 32, 48 or 64.
    103           *
    104           * @param[out] token_size
    105           *   Number of bytes actually used in token_buf.
    106           *
    107           * @param[in] command_word
    108           *   The command word to send to the SE, to differentiat between token types
    109           *
    110           * @return
    111           *   Status code, @ref sl_status.h.
    112           ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    113          static sl_status_t get_attestation_token_size(sl_se_command_context_t *cmd_ctx,
    114                                                        size_t challenge_size,
    115                                                        size_t *token_size,
    116                                                        uint32_t command_word)
    117          {
   \                     get_attestation_token_size: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB096             SUB      SP,SP,#+88
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4615             MOV      R5,R2
    118            // Parameter check
    119            if (cmd_ctx == NULL || token_size == NULL) {
   \        0xA   0xBF14             ITE      NE
   \        0xC   0x2D00             CMPNE    R5,#+0
   \        0xE   0x2021             MOVEQ    R0,#+33
    120              return SL_STATUS_INVALID_PARAMETER;
   \       0x10   0xD030             BEQ.N    ??get_attestation_token_size_0
    121            }
    122          
    123            // Check command word and challenge size
    124            sl_status_t status = validate_and_update_command_word(&command_word,
    125                                                                  challenge_size);
   \       0x12   0xA816             ADD      R0,SP,#+88
   \       0x14   0x.... 0x....      BL       validate_and_update_command_word
    126            if (status != SL_STATUS_OK) {
   \       0x18   0xBB60             CBNZ.N   R0,??get_attestation_token_size_0
    127              return status;
   \       0x1A   0x2140             MOVS     R1,#+64
   \       0x1C   0x2200             MOVS     R2,#+0
   \       0x1E   0xA806             ADD      R0,SP,#+24
   \       0x20   0x.... 0x....      BL       __aeabi_memset
    128            }
    129          
    130            // Use a dummy nonce since the SE requires nonce input even if we just
    131            // want to find the token length
    132            uint8_t dummy_nonce[SL_SE_ATTESTATION_CHALLENGE_SIZE_64] = { 0 };
    133          
    134            // Build and execute the command
    135            SE_Command_t *se_cmd = &cmd_ctx->command;
    136            // Or comman word with 0x01 to enable length output only
    137            sli_se_command_init(cmd_ctx, command_word | 0x01UL);
   \       0x24   0x9816             LDR      R0,[SP, #+88]
   \       0x26   0x2100             MOVS     R1,#+0
    138            SE_DataTransfer_t noncedata =
    139              SE_DATATRANSFER_DEFAULT(dummy_nonce, challenge_size);
   \       0x28   0xAF03             ADD      R7,SP,#+12
   \       0x2A   0xF040 0x0001      ORR      R0,R0,#0x1
   \       0x2E   0x6020             STR      R0,[R4, #+0]
   \       0x30   0x6061             STR      R1,[R4, #+4]
   \       0x32   0x60A1             STR      R1,[R4, #+8]
   \       0x34   0xF8C4 0x101C      STR.W    R1,[R4, #+28]
   \       0x38   0x....             ADR.N    R0,?_0
   \       0x3A   0xE890 0x000E      LDM      R0,{R1-R3}
   \       0x3E   0xF10D 0x0E18      ADD      LR,SP,#+24
   \       0x42   0xF046 0x5600      ORR      R6,R6,#0x20000000
   \       0x46   0xE887 0x000E      STM      R7,{R1-R3}
   \       0x4A   0xF8CD 0xE00C      STR      LR,[SP, #+12]
   \       0x4E   0x9605             STR      R6,[SP, #+20]
    140            SE_addDataInput(se_cmd, &noncedata);
   \       0x50   0xA903             ADD      R1,SP,#+12
   \       0x52   0x4620             MOV      R0,R4
   \       0x54   0x.... 0x....      BL       SE_addDataInput
    141            SE_DataTransfer_t sizedata =
    142              SE_DATATRANSFER_DEFAULT(token_size, sizeof(*token_size));
   \       0x58   0x....             ADR.N    R0,?_1
   \       0x5A   0xE890 0x000E      LDM      R0,{R1-R3}
   \       0x5E   0x466E             MOV      R6,SP
    143            SE_addDataOutput(se_cmd, &sizedata);
   \       0x60   0x4620             MOV      R0,R4
   \       0x62   0xE886 0x000E      STM      R6,{R1-R3}
   \       0x66   0x9500             STR      R5,[SP, #+0]
   \       0x68   0x4669             MOV      R1,SP
   \       0x6A   0x.... 0x....      BL       SE_addDataOutput
    144          
    145            return sli_se_execute_and_wait(cmd_ctx);
   \       0x6E   0x4620             MOV      R0,R4
   \       0x70   0x.... 0x....      BL       sli_se_execute_and_wait
   \                     ??get_attestation_token_size_0: (+1)
   \       0x74   0xB017             ADD      SP,SP,#+92
   \       0x76   0xBDF0             POP      {R4-R7,PC}
    146          }

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \        0x0   0x0000'0000        DC32 0x0, 0x1, 0
   \              0x0000'0001  
   \              0x0000'0000

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \        0x0   0x0000'0000        DC32 0x0, 0x1, 536'870'916
   \              0x0000'0001  
   \              0x2000'0004
    147          
    148          /***************************************************************************//**
    149           * @brief
    150           *   Get an attestation token from the SE
    151           *
    152           * @param[in] cmd_ctx
    153           *   SE command context struct.
    154           *
    155           * @param[in] auth_challenge
    156           *   Buffer with a challenge object selected by the caller.
    157           *
    158           * @param[in] challenge_size
    159           *   Size of the challenge object in bytes. Must be either 32, 48 or 64.
    160           *
    161           * @param[out] token_buf
    162           *   Buffer where the output token will be stored.
    163           *
    164           * @param[in] token_buf_size
    165           *   Size of token_buf in bytes.
    166           *
    167           * @param[out] token_size
    168           *   Number of bytes actually used in token_buf.
    169           *
    170           * @param[in] command_word
    171           *   The command word to send to the SE, to differentiat between token types
    172           *
    173           * @return
    174           *   Status code, @ref sl_status.h.
    175           ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    176          static sl_status_t get_attestation_token(sl_se_command_context_t *cmd_ctx,
    177                                                   const uint8_t *auth_challenge,
    178                                                   size_t challenge_size,
    179                                                   uint8_t *token_buf,
    180                                                   size_t token_buf_size,
    181                                                   size_t *token_size,
    182                                                   uint32_t command_word)
    183          {
   \                     get_attestation_token: (+1)
   \        0x0   0xE92D 0x41F8      PUSH     {R3-R8,LR}
   \        0x4   0xB089             SUB      SP,SP,#+36
   \        0x6   0x0004             MOVS     R4,R0
   \        0x8   0x460D             MOV      R5,R1
   \        0xA   0x4690             MOV      R8,R2
   \        0xC   0x461F             MOV      R7,R3
    184            // Parameter check
    185            if (cmd_ctx == NULL
    186                || auth_challenge == NULL
    187                || token_buf == NULL
    188                || token_size == NULL) {
   \        0xE   0xBF18             IT       NE
   \       0x10   0x2D00             CMPNE    R5,#+0
   \       0x12   0xD004             BEQ.N    ??get_attestation_token_0
   \       0x14   0x2F00             CMP      R7,#+0
   \       0x16   0xBF1C             ITT      NE
   \       0x18   0x9E11             LDRNE    R6,[SP, #+68]
   \       0x1A   0x2E00             CMPNE    R6,#+0
   \       0x1C   0xD101             BNE.N    ??get_attestation_token_1
    189              return SL_STATUS_INVALID_PARAMETER;
   \                     ??get_attestation_token_0: (+1)
   \       0x1E   0x2021             MOVS     R0,#+33
   \       0x20   0xE04D             B.N      ??get_attestation_token_2
    190            }
    191          
    192            // Check supported challenge sizes
    193            sl_status_t status = validate_and_update_command_word(&command_word,
    194                                                                  challenge_size);
   \                     ??get_attestation_token_1: (+1)
   \       0x22   0x4641             MOV      R1,R8
   \       0x24   0xA812             ADD      R0,SP,#+72
   \       0x26   0x.... 0x....      BL       validate_and_update_command_word
    195            if (status != SL_STATUS_OK) {
   \       0x2A   0x2800             CMP      R0,#+0
   \       0x2C   0xD147             BNE.N    ??get_attestation_token_2
    196              return status;
    197            }
    198          
    199            // Check that buffer is sufficiently large
    200            status = get_attestation_token_size(cmd_ctx,
    201                                                challenge_size,
    202                                                token_size,
    203                                                command_word);
   \       0x2E   0x9B12             LDR      R3,[SP, #+72]
   \       0x30   0x4632             MOV      R2,R6
   \       0x32   0x4641             MOV      R1,R8
   \       0x34   0x4620             MOV      R0,R4
   \       0x36   0x.... 0x....      BL       get_attestation_token_size
    204            if (status != SL_STATUS_OK) {
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD13F             BNE.N    ??get_attestation_token_2
    205              return status;
    206            }
    207            if (((*token_size + 0x3) & ~0x3) > token_buf_size) {
   \       0x3E   0x6830             LDR      R0,[R6, #+0]
   \       0x40   0x9910             LDR      R1,[SP, #+64]
   \       0x42   0x1CC0             ADDS     R0,R0,#+3
   \       0x44   0x0880             LSRS     R0,R0,#+2
   \       0x46   0xEBB1 0x0F80      CMP      R1,R0, LSL #+2
   \       0x4A   0xBF38             IT       CC
   \       0x4C   0x201D             MOVCC    R0,#+29
    208              return SL_STATUS_WOULD_OVERFLOW;
   \       0x4E   0xD336             BCC.N    ??get_attestation_token_2
    209            }
    210          
    211            // Build and execute the command
    212            SE_Command_t *se_cmd = &cmd_ctx->command;
    213            sli_se_command_init(cmd_ctx, command_word);
   \       0x50   0x9A12             LDR      R2,[SP, #+72]
   \       0x52   0x2100             MOVS     R1,#+0
    214            SE_DataTransfer_t noncedata =
    215              SE_DATATRANSFER_DEFAULT(auth_challenge, challenge_size);
   \       0x54   0x....             ADR.N    R0,?_2
   \       0x56   0x6022             STR      R2,[R4, #+0]
   \       0x58   0x6061             STR      R1,[R4, #+4]
   \       0x5A   0x60A1             STR      R1,[R4, #+8]
   \       0x5C   0x61E1             STR      R1,[R4, #+28]
   \       0x5E   0xE890 0x000E      LDM      R0,{R1-R3}
   \       0x62   0xF10D 0x0E18      ADD      LR,SP,#+24
   \       0x66   0xF048 0x5800      ORR      R8,R8,#0x20000000
   \       0x6A   0xE88E 0x000E      STM      LR,{R1-R3}
   \       0x6E   0x9506             STR      R5,[SP, #+24]
   \       0x70   0xF8CD 0x8020      STR      R8,[SP, #+32]
    216            SE_addDataInput(se_cmd, &noncedata);
   \       0x74   0xA906             ADD      R1,SP,#+24
   \       0x76   0x4620             MOV      R0,R4
   \       0x78   0x.... 0x....      BL       SE_addDataInput
    217            SE_DataTransfer_t sizedata =
    218              SE_DATATRANSFER_DEFAULT(token_size, sizeof(*token_size));
   \       0x7C   0x....             ADR.N    R0,?_3
   \       0x7E   0xE890 0x0026      LDM      R0,{R1,R2,R5}
   \       0x82   0xAB03             ADD      R3,SP,#+12
    219            SE_addDataOutput(se_cmd, &sizedata);
   \       0x84   0x4620             MOV      R0,R4
   \       0x86   0xE883 0x0026      STM      R3,{R1,R2,R5}
   \       0x8A   0x9603             STR      R6,[SP, #+12]
   \       0x8C   0xA903             ADD      R1,SP,#+12
   \       0x8E   0x.... 0x....      BL       SE_addDataOutput
    220            SE_DataTransfer_t tokendata =
    221              SE_DATATRANSFER_DEFAULT(token_buf, ((*token_size + 0x3) & ~0x3));
   \       0x92   0xBF00             Nop
   \       0x94   0x....             ADR.N    R0,?_4
   \       0x96   0xE890 0x000E      LDM      R0,{R1-R3}
   \       0x9A   0x466D             MOV      R5,SP
    222            SE_addDataOutput(se_cmd, &tokendata);
   \       0x9C   0x4620             MOV      R0,R4
   \       0x9E   0xE885 0x000E      STM      R5,{R1-R3}
   \       0xA2   0x9700             STR      R7,[SP, #+0]
   \       0xA4   0x6836             LDR      R6,[R6, #+0]
   \       0xA6   0x4669             MOV      R1,SP
   \       0xA8   0x1CF6             ADDS     R6,R6,#+3
   \       0xAA   0x08B6             LSRS     R6,R6,#+2
   \       0xAC   0x00B6             LSLS     R6,R6,#+2
   \       0xAE   0xF046 0x5600      ORR      R6,R6,#0x20000000
   \       0xB2   0x9602             STR      R6,[SP, #+8]
   \       0xB4   0x.... 0x....      BL       SE_addDataOutput
    223          
    224            return sli_se_execute_and_wait(cmd_ctx);
   \       0xB8   0x4620             MOV      R0,R4
   \       0xBA   0x.... 0x....      BL       sli_se_execute_and_wait
   \                     ??get_attestation_token_2: (+1)
   \       0xBE   0xB00A             ADD      SP,SP,#+40
   \       0xC0   0xE8BD 0x81F0      POP      {R4-R8,PC}
    225          }

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \        0x0   0x0000'0000        DC32 0x0, 0x1, 0
   \              0x0000'0001  
   \              0x0000'0000

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \        0x0   0x0000'0000        DC32 0x0, 0x1, 536'870'916
   \              0x0000'0001  
   \              0x2000'0004

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \        0x0   0x0000'0000        DC32 0x0, 0x1, 0
   \              0x0000'0001  
   \              0x0000'0000
    226          
    227          // -----------------------------------------------------------------------------
    228          // Global Functions
    229          
    230          /***************************************************************************//**
    231           * Get the PSA initial attest token from the SE
    232           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    233          sl_status_t sl_se_attestation_get_psa_iat_token(sl_se_command_context_t *cmd_ctx,
    234                                                          const uint8_t *auth_challenge,
    235                                                          size_t challenge_size,
    236                                                          uint8_t *token_buf,
    237                                                          size_t token_buf_size,
    238                                                          size_t *token_size)
    239          {
   \                     sl_se_attestation_get_psa_iat_token: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
    240            return get_attestation_token(cmd_ctx,
    241                                         auth_challenge,
    242                                         challenge_size,
    243                                         token_buf,
    244                                         token_buf_size,
    245                                         token_size,
    246                                         SLI_SE_COMMAND_ATTEST_PSA_IAT);
   \        0x2   0x....             LDR.N    R4,??DataTable9
   \        0x4   0x....             B.N      ?Subroutine0
    247          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0x9402             STR      R4,[SP, #+8]
   \        0x2   0x9D07             LDR      R5,[SP, #+28]
   \        0x4   0x9C06             LDR      R4,[SP, #+24]
   \        0x6   0x9501             STR      R5,[SP, #+4]
   \        0x8   0x9400             STR      R4,[SP, #+0]
   \        0xA   0x.... 0x....      BL       get_attestation_token
   \        0xE   0xBD3E             POP      {R1-R5,PC}
    248          
    249          /***************************************************************************//**
    250           * Get the size of a PSA initial attest token with the given nonce
    251           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    252          sl_status_t sl_se_attestation_get_psa_iat_token_size(sl_se_command_context_t *cmd_ctx,
    253                                                               size_t challenge_size,
    254                                                               size_t *token_size)
    255          {
    256            return get_attestation_token_size(cmd_ctx,
    257                                              challenge_size,
    258                                              token_size,
    259                                              SLI_SE_COMMAND_ATTEST_PSA_IAT);
   \                     sl_se_attestation_get_psa_iat_token_size: (+1)
   \        0x0   0x....             LDR.N    R3,??DataTable9
   \        0x2   0x....             B.N      get_attestation_token_size
    260          }
    261          
    262          /***************************************************************************//**
    263           * Get an attested (signed) security configuration token from the SE
    264           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    265          sl_status_t sl_se_attestation_get_config_token(sl_se_command_context_t *cmd_ctx,
    266                                                         const uint8_t *auth_challenge,
    267                                                         size_t challenge_size,
    268                                                         uint8_t *token_buf,
    269                                                         size_t token_buf_size,
    270                                                         size_t *token_size)
    271          {
   \                     sl_se_attestation_get_config_token: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
    272            return get_attestation_token(cmd_ctx,
    273                                         auth_challenge,
    274                                         challenge_size,
    275                                         token_buf,
    276                                         token_buf_size,
    277                                         token_size,
    278                                         SLI_SE_COMMAND_ATTEST_CONFIG);
   \        0x2   0x....             LDR.N    R4,??DataTable9_1
   \        0x4                      REQUIRE ?Subroutine0
   \        0x4                      ;; // Fall through to label ?Subroutine0
    279          }
    280          
    281          /***************************************************************************//**
    282           * Get the size of a security configuration token
    283           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    284          sl_status_t sl_se_attestation_get_config_token_size(sl_se_command_context_t *cmd_ctx,
    285                                                              size_t challenge_size,
    286                                                              size_t *token_size)
    287          {
    288            return get_attestation_token_size(cmd_ctx,
    289                                              challenge_size,
    290                                              token_size,
    291                                              SLI_SE_COMMAND_ATTEST_CONFIG);
   \                     sl_se_attestation_get_config_token_size: (+1)
   \        0x0   0x....             LDR.N    R3,??DataTable9_1
   \        0x2   0x....             B.N      get_attestation_token_size
    292          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \        0x0   0x0A03'0000        DC32     0xa030000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \        0x0   0x0A04'0000        DC32     0xa040000
    293          
    294          /** @} (end addtogroup sl_se_manager) */
    295          
    296          #endif // SLI_MAILBOX_COMMAND_SUPPORTED && VAULT

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      64   get_attestation_token
        64   -> SE_addDataInput
        64   -> SE_addDataOutput
        64   -> get_attestation_token_size
        64   -> sli_se_execute_and_wait
        64   -> validate_and_update_command_word
     112   get_attestation_token_size
       112   -> SE_addDataInput
       112   -> SE_addDataOutput
       112   -> __aeabi_memset
       112   -> sli_se_execute_and_wait
       112   -> validate_and_update_command_word
      24   sl_se_attestation_get_config_token
        24   -> get_attestation_token
       0   sl_se_attestation_get_config_token_size
         0   -> get_attestation_token_size
      24   sl_se_attestation_get_psa_iat_token
        24   -> get_attestation_token
       0   sl_se_attestation_get_psa_iat_token_size
         0   -> get_attestation_token_size
       8   validate_and_update_command_word


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable9
       4  ??DataTable9_1
      16  ?Subroutine0
      12  ?_0
      12  ?_1
      12  ?_2
      12  ?_3
      12  ?_4
     196  get_attestation_token
     120  get_attestation_token_size
       4  sl_se_attestation_get_config_token
       4  sl_se_attestation_get_config_token_size
       6  sl_se_attestation_get_psa_iat_token
       4  sl_se_attestation_get_psa_iat_token_size
      64  validate_and_update_command_word

 
 482 bytes in section .text
 
 482 bytes of CODE memory

Errors: none
Warnings: none
