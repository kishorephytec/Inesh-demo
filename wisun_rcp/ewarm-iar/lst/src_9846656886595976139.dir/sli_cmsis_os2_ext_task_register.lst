###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         27/Nov/2024  12:17:50
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\src\sli_cmsis_os2_ext_task_register.c
#    Command line      =
#        -f
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_9846656886595976139.dir\sli_cmsis_os2_ext_task_register.o.rsp
#        (C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\src\sli_cmsis_os2_ext_task_register.c
#        -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -D MBED_CONF_MBED_TRACE_ENABLE=1 -D
#        MBED_CONF_NANOSTACK_CONFIGURATION=ws_router -D
#        MBED_TRACE_MAX_LEVEL=TRACE_ACTIVE_LEVEL_ALL -D DEBUG_EFM_USER=1 -D
#        HAVE_LFN=1 -D HAVE_LFN_PARENT=1 -lC
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\src_9846656886595976139.dir
#        --diag_suppress Pa050 -o
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_9846656886595976139.dir
#        --debug --endian=little --cpu=Cortex-M33 --cmse --cmse -e
#        --fpu=VFPv5_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\src\
#        -I C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\autogen\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\rail\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\Device\SiliconLabs\EFR32FG28\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\Core\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\RTOS2\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\device_init\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\dmadrv\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emlib\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\cmsis\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\portable\IAR\ARM_CM33_NTZ\non_secure\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\iostream\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\preset\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\nvm3\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\peripheral\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_psa_driver\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\common\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\wmbus\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\sidewalk\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\rail_util_pti\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\segger\systemview\SEGGER\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\silicon_labs\silabs_core\memory_manager\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\toolchain\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\system\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\ns_list\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\sleeptimer\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\app\wisun_rcp\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\socket\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\src\
#        -Ohz --use_c++_inline) --dependencies=n
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_9846656886595976139.dir\sli_cmsis_os2_ext_task_register.o.iar_deps
#    Locale            =  C
#    List file         =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\src_9846656886595976139.dir\sli_cmsis_os2_ext_task_register.lst
#    Object file       =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\src_9846656886595976139.dir\sli_cmsis_os2_ext_task_register.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\src\sli_cmsis_os2_ext_task_register.c
      1          /***************************************************************************//**
      2           * @file sli_cmsis_os2_ext_task_register.c
      3           * @brief Abstraction for Task Registers (Thread Local Variables)
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2020 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * SPDX-License-Identifier: Zlib
     10           *
     11           * The licensor of this software is Silicon Laboratories Inc.
     12           *
     13           * This software is provided 'as-is', without any express or implied
     14           * warranty. In no event will the authors be held liable for any damages
     15           * arising from the use of this software.
     16           *
     17           * Permission is granted to anyone to use this software for any purpose,
     18           * including commercial applications, and to alter it and redistribute it
     19           * freely, subject to the following restrictions:
     20           *
     21           * 1. The origin of this software must not be misrepresented; you must not
     22           *    claim that you wrote the original software. If you use this software
     23           *    in a product, an acknowledgment in the product documentation would be
     24           *    appreciated but is not required.
     25           * 2. Altered source versions must be plainly marked as such, and must not be
     26           *    misrepresented as being the original software.
     27           * 3. This notice may not be removed or altered from any source distribution.
     28           *
     29           ******************************************************************************/
     30          
     31          #include "sl_assert.h"
     32          #include "sli_cmsis_os2_ext_task_register.h"
     33          #include "sl_cmsis_os2_common.h"
     34          
     35          /*******************************************************************************
     36           ***************************  LOCAL VARIABLES   ********************************
     37           ******************************************************************************/
     38          
     39          /*******************************************************************************
     40           **************************   GLOBAL FUNCTIONS   *******************************
     41           ******************************************************************************/
     42          
     43          /***************************************************************************//**
     44           * Get a task register ID
     45           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     46          sl_status_t sli_osTaskRegisterNew(sli_task_register_id_t *reg_id)
     47          {
     48            sl_status_t status = SL_STATUS_FAIL;
     49          
     50            if (reg_id == NULL) {
   \                     sli_osTaskRegisterNew: (+1)
   \        0x0   0xB118             CBZ.N    R0,??sli_osTaskRegisterNew_0
     51              return SL_STATUS_FAIL;
     52            }
     53          
     54          #if defined(SL_CATALOG_MICRIUMOS_KERNEL_PRESENT)
     55            RTOS_ERR err;
     56          
     57            *reg_id = OSTaskRegGetID(&err);
     58            if (RTOS_ERR_CODE_GET(err) == RTOS_ERR_NONE) {
     59              status = SL_STATUS_OK;
     60            }
     61          
     62          #elif defined(SL_CATALOG_FREERTOS_KERNEL_PRESENT)
     63            static uint8_t register_count = 0;
     64            if (register_count > (configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS - 1)) {
   \        0x2   0x....             LDR.N    R3,??DataTable0
   \        0x4   0x7819             LDRB     R1,[R3, #+0]
   \        0x6   0x2902             CMP      R1,#+2
   \        0x8   0xDB01             BLT.N    ??sli_osTaskRegisterNew_1
     65              return SL_STATUS_FAIL;
   \                     ??sli_osTaskRegisterNew_0: (+1)
   \        0xA   0x2001             MOVS     R0,#+1
   \        0xC   0x4770             BX       LR
     66            }
     67          
     68            *reg_id = register_count + configNUM_USER_THREAD_LOCAL_STORAGE_POINTERS;
   \                     ??sli_osTaskRegisterNew_1: (+1)
   \        0xE   0x7001             STRB     R1,[R0, #+0]
     69            ++register_count;
   \       0x10   0x1C49             ADDS     R1,R1,#+1
   \       0x12   0x7019             STRB     R1,[R3, #+0]
     70            status = SL_STATUS_OK;
     71          #else
     72          #error "Task registers abstraction only supports MicriumOS or FreeRTOS"
     73          #endif
     74            return status;
   \       0x14   0x2000             MOVS     R0,#+0
   \       0x16   0x4770             BX       LR
     75          }

   \                                 In section .bss, align 1
   \                     `sli_osTaskRegisterNew::register_count`:
   \        0x0                      DS8 1
     76          
     77          /***************************************************************************//**
     78           * Get the task register
     79           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     80          sl_status_t sli_osTaskRegisterGetValue(const osThreadId_t thread_id,
     81                                                 const sli_task_register_id_t reg_id,
     82                                                 uint32_t *value)
     83          {
   \                     sli_osTaskRegisterGetValue: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x4614             MOV      R4,R2
     84            sl_status_t status = SL_STATUS_FAIL;
     85          #if defined(SL_CATALOG_MICRIUMOS_KERNEL_PRESENT)
     86            RTOS_ERR    err;
     87            osThread_t *thread;
     88          
     89            if (value == NULL) {
     90              return SL_STATUS_FAIL;
     91            }
     92          
     93            if (thread_id != NULL) {
     94              thread = (osThread_t *)thread_id;
     95              *value = OSTaskRegGet(&thread->tcb, reg_id, &err);
     96            } else {
     97              *value = OSTaskRegGet(NULL, reg_id, &err);
     98            }
     99          
    100            if (RTOS_ERR_CODE_GET(err) == RTOS_ERR_NONE) {
    101              status = SL_STATUS_OK;
    102            }
    103          #elif defined(SL_CATALOG_FREERTOS_KERNEL_PRESENT)
    104            *value = (uint32_t)pvTaskGetThreadLocalStoragePointer(thread_id, reg_id);
   \        0x4   0x.... 0x....      BL       pvTaskGetThreadLocalStoragePointer
   \        0x8   0x6020             STR      R0,[R4, #+0]
    105            status = SL_STATUS_OK;
    106          #else
    107          #error "Task registers abstraction only supports MicriumOS or FreeRTOS"
    108          #endif
    109          
    110            return status;
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0xBD10             POP      {R4,PC}
    111          }
    112          
    113          /***************************************************************************//**
    114           * Set the task register
    115           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    116          sl_status_t sli_osTaskRegisterSetValue(const osThreadId_t thread_id,
    117                                                 const sli_task_register_id_t reg_id,
    118                                                 const uint32_t value)
    119          {
   \                     sli_osTaskRegisterSetValue: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    120            sl_status_t status = SL_STATUS_FAIL;
    121          #if defined(SL_CATALOG_MICRIUMOS_KERNEL_PRESENT)
    122            RTOS_ERR err;
    123            osThread_t *thread;
    124          
    125            if (thread_id != NULL) {
    126              thread = (osThread_t *)thread_id;
    127              OSTaskRegSet(&thread->tcb, reg_id, (OS_REG)value, &err);
    128            } else {
    129              OSTaskRegSet(NULL, reg_id, (OS_REG)value, &err);
    130            }
    131          
    132            if (RTOS_ERR_CODE_GET(err) == RTOS_ERR_NONE) {
    133              status = SL_STATUS_OK;
    134            }
    135          #elif defined(SL_CATALOG_FREERTOS_KERNEL_PRESENT)
    136            vTaskSetThreadLocalStoragePointer(thread_id, reg_id, (void *)value);
   \        0x2   0x.... 0x....      BL       vTaskSetThreadLocalStoragePointer
    137            status = SL_STATUS_OK;
    138          #else
    139          #error "Task registers abstraction only supports MicriumOS or FreeRTOS"
    140          #endif
    141          
    142            return status;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0xBD02             POP      {R1,PC}
    143          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \        0x0   0x....'....        DC32     `sli_osTaskRegisterNew::register_count`

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   sli_osTaskRegisterGetValue
         8   -> pvTaskGetThreadLocalStoragePointer
       0   sli_osTaskRegisterNew
       8   sli_osTaskRegisterSetValue
         8   -> vTaskSetThreadLocalStoragePointer


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       1  register_count
      14  sli_osTaskRegisterGetValue
      24  sli_osTaskRegisterNew
      10  sli_osTaskRegisterSetValue

 
  1 byte  in section .bss
 52 bytes in section .text
 
 52 bytes of CODE memory
  1 byte  of DATA memory

Errors: none
Warnings: none
