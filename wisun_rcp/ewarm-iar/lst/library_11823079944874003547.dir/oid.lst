###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         27/Nov/2024  12:17:27
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\oid.c
#    Command line                 =
#        -f
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\library_11823079944874003547.dir\oid.o.rsp
#        (C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\oid.c
#        -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -D MBED_CONF_MBED_TRACE_ENABLE=1 -D
#        MBED_CONF_NANOSTACK_CONFIGURATION=ws_router -D
#        MBED_TRACE_MAX_LEVEL=TRACE_ACTIVE_LEVEL_ALL -D DEBUG_EFM_USER=1 -D
#        HAVE_LFN=1 -D HAVE_LFN_PARENT=1 -lC
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\library_11823079944874003547.dir
#        --diag_suppress Pa050 -o
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\library_11823079944874003547.dir
#        --debug --endian=little --cpu=Cortex-M33 --cmse --cmse -e
#        --fpu=VFPv5_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\
#        -I C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\autogen\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\rail\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\Device\SiliconLabs\EFR32FG28\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\Core\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\RTOS2\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\device_init\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\dmadrv\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emlib\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\cmsis\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\portable\IAR\ARM_CM33_NTZ\non_secure\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\iostream\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\preset\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\nvm3\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\peripheral\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_psa_driver\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\common\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\wmbus\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\sidewalk\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\rail_util_pti\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\segger\systemview\SEGGER\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\silicon_labs\silabs_core\memory_manager\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\toolchain\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\system\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\ns_list\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\sleeptimer\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\app\wisun_rcp\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\socket\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\src\
#        -Ohz --use_c++_inline) --dependencies=n
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\library_11823079944874003547.dir\oid.o.iar_deps
#    Locale                       =  C
#    List file                    =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\library_11823079944874003547.dir\oid.lst
#    Object file                  =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\library_11823079944874003547.dir\oid.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  0
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#      __iar_require _Printf      =  int_specials
#
###############################################################################

C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\oid.c
      1          /**
      2           * \file oid.c
      3           *
      4           * \brief Object Identifier (OID) database
      5           *
      6           *  Copyright The Mbed TLS Contributors
      7           *  SPDX-License-Identifier: Apache-2.0
      8           *
      9           *  Licensed under the Apache License, Version 2.0 (the "License"); you may
     10           *  not use this file except in compliance with the License.
     11           *  You may obtain a copy of the License at
     12           *
     13           *  http://www.apache.org/licenses/LICENSE-2.0
     14           *
     15           *  Unless required by applicable law or agreed to in writing, software
     16           *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
     17           *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     18           *  See the License for the specific language governing permissions and
     19           *  limitations under the License.
     20           */
     21          
     22          #include "common.h"
     23          
     24          #if defined(MBEDTLS_OID_C)
     25          
     26          #include "mbedtls/oid.h"
     27          #include "mbedtls/rsa.h"
     28          #include "mbedtls/error.h"
     29          #include "mbedtls/pk.h"
     30          
     31          #include <stdio.h>
     32          #include <string.h>
     33          
     34          #include "mbedtls/platform.h"
     35          
     36          /*
     37           * Macro to automatically add the size of #define'd OIDs
     38           */
     39          #define ADD_LEN(s)      s, MBEDTLS_OID_SIZE(s)
     40          
     41          /*
     42           * Macro to generate mbedtls_oid_descriptor_t
     43           */
     44          #if !defined(MBEDTLS_X509_REMOVE_INFO)
     45          #define OID_DESCRIPTOR(s, name, description)  { ADD_LEN(s), name, description }
     46          #define NULL_OID_DESCRIPTOR                   { NULL, 0, NULL, NULL }
     47          #else
     48          #define OID_DESCRIPTOR(s, name, description)  { ADD_LEN(s) }
     49          #define NULL_OID_DESCRIPTOR                   { NULL, 0 }
     50          #endif
     51          
     52          /*
     53           * Macro to generate an internal function for oid_XXX_from_asn1() (used by
     54           * the other functions)
     55           */
     56          #define FN_OID_TYPED_FROM_ASN1(TYPE_T, NAME, LIST)                    \
     57              static const TYPE_T *oid_ ## NAME ## _from_asn1(                   \
     58                  const mbedtls_asn1_buf *oid)     \
     59              {                                                                   \
     60                  const TYPE_T *p = (LIST);                                       \
     61                  const mbedtls_oid_descriptor_t *cur =                           \
     62                      (const mbedtls_oid_descriptor_t *) p;                       \
     63                  if (p == NULL || oid == NULL) return NULL;                  \
     64                  while (cur->asn1 != NULL) {                                    \
     65                      if (cur->asn1_len == oid->len &&                            \
     66                          memcmp(cur->asn1, oid->p, oid->len) == 0) {          \
     67                          return p;                                            \
     68                      }                                                           \
     69                      p++;                                                        \
     70                      cur = (const mbedtls_oid_descriptor_t *) p;                 \
     71                  }                                                               \
     72                  return NULL;                                                 \
     73              }
     74          
     75          #if !defined(MBEDTLS_X509_REMOVE_INFO)
     76          /*
     77           * Macro to generate a function for retrieving a single attribute from the
     78           * descriptor of an mbedtls_oid_descriptor_t wrapper.
     79           */
     80          #define FN_OID_GET_DESCRIPTOR_ATTR1(FN_NAME, TYPE_T, TYPE_NAME, ATTR1_TYPE, ATTR1) \
     81              int FN_NAME(const mbedtls_asn1_buf *oid, ATTR1_TYPE * ATTR1)                  \
     82              {                                                                       \
     83                  const TYPE_T *data = oid_ ## TYPE_NAME ## _from_asn1(oid);        \
     84                  if (data == NULL) return MBEDTLS_ERR_OID_NOT_FOUND;            \
     85                  *ATTR1 = data->descriptor.ATTR1;                                    \
     86                  return 0;                                                        \
     87              }
     88          #endif /* MBEDTLS_X509_REMOVE_INFO */
     89          
     90          /*
     91           * Macro to generate a function for retrieving a single attribute from an
     92           * mbedtls_oid_descriptor_t wrapper.
     93           */
     94          #define FN_OID_GET_ATTR1(FN_NAME, TYPE_T, TYPE_NAME, ATTR1_TYPE, ATTR1) \
     95              int FN_NAME(const mbedtls_asn1_buf *oid, ATTR1_TYPE * ATTR1)                  \
     96              {                                                                       \
     97                  const TYPE_T *data = oid_ ## TYPE_NAME ## _from_asn1(oid);        \
     98                  if (data == NULL) return MBEDTLS_ERR_OID_NOT_FOUND;            \
     99                  *ATTR1 = data->ATTR1;                                               \
    100                  return 0;                                                        \
    101              }
    102          
    103          /*
    104           * Macro to generate a function for retrieving two attributes from an
    105           * mbedtls_oid_descriptor_t wrapper.
    106           */
    107          #define FN_OID_GET_ATTR2(FN_NAME, TYPE_T, TYPE_NAME, ATTR1_TYPE, ATTR1,     \
    108                                   ATTR2_TYPE, ATTR2)                                 \
    109              int FN_NAME(const mbedtls_asn1_buf *oid, ATTR1_TYPE * ATTR1,               \
    110                          ATTR2_TYPE * ATTR2)              \
    111              {                                                                           \
    112                  const TYPE_T *data = oid_ ## TYPE_NAME ## _from_asn1(oid);            \
    113                  if (data == NULL) return MBEDTLS_ERR_OID_NOT_FOUND;                 \
    114                  *(ATTR1) = data->ATTR1;                                                 \
    115                  *(ATTR2) = data->ATTR2;                                                 \
    116                  return 0;                                                            \
    117              }
    118          
    119          /*
    120           * Macro to generate a function for retrieving the OID based on a single
    121           * attribute from a mbedtls_oid_descriptor_t wrapper.
    122           */
    123          #define FN_OID_GET_OID_BY_ATTR1(FN_NAME, TYPE_T, LIST, ATTR1_TYPE, ATTR1)   \
    124              int FN_NAME(ATTR1_TYPE ATTR1, const char **oid, size_t *olen)             \
    125              {                                                                           \
    126                  const TYPE_T *cur = (LIST);                                             \
    127                  while (cur->descriptor.asn1 != NULL) {                                 \
    128                      if (cur->ATTR1 == (ATTR1)) {                                       \
    129                          *oid = cur->descriptor.asn1;                                    \
    130                          *olen = cur->descriptor.asn1_len;                               \
    131                          return 0;                                                    \
    132                      }                                                                   \
    133                      cur++;                                                              \
    134                  }                                                                       \
    135                  return MBEDTLS_ERR_OID_NOT_FOUND;                                    \
    136              }
    137          
    138          /*
    139           * Macro to generate a function for retrieving the OID based on two
    140           * attributes from a mbedtls_oid_descriptor_t wrapper.
    141           */
    142          #define FN_OID_GET_OID_BY_ATTR2(FN_NAME, TYPE_T, LIST, ATTR1_TYPE, ATTR1,   \
    143                                          ATTR2_TYPE, ATTR2)                          \
    144              int FN_NAME(ATTR1_TYPE ATTR1, ATTR2_TYPE ATTR2, const char **oid,         \
    145                          size_t *olen)                                                 \
    146              {                                                                           \
    147                  const TYPE_T *cur = (LIST);                                             \
    148                  while (cur->descriptor.asn1 != NULL) {                                 \
    149                      if (cur->ATTR1 == (ATTR1) && cur->ATTR2 == (ATTR2)) {              \
    150                          *oid = cur->descriptor.asn1;                                    \
    151                          *olen = cur->descriptor.asn1_len;                               \
    152                          return 0;                                                    \
    153                      }                                                                   \
    154                      cur++;                                                              \
    155                  }                                                                       \
    156                  return MBEDTLS_ERR_OID_NOT_FOUND;                                   \
    157              }
    158          
    159          /*
    160           * For X520 attribute types
    161           */
    162          typedef struct {
    163              mbedtls_oid_descriptor_t    descriptor;
    164              const char          *short_name;
    165          } oid_x520_attr_t;
    166          

   \                                 In section .rodata, align 4
    167          static const oid_x520_attr_t oid_x520_attr_type[] =
   \                     oid_x520_attr_type:
   \        0x0   0x....'....        DC32 ?_0, 3, ?_1, ?_2, ?_3, ?_4, 3, ?_5, ?_6, ?_7, ?_8, 3, ?_9, ?_10
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....
   \       0x38   0x....'....        DC32 ?_11, ?_12, 3, ?_13, ?_14, ?_15, ?_16, 3, ?_17, ?_18, ?_19, ?_20
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....
   \       0x68   0x0000'0003        DC32 3, ?_21, ?_22, ?_23, ?_24, 9, ?_25, ?_26, ?_25, ?_27, 3, ?_28
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0009  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....
   \       0x98   0x....'....        DC32 ?_29, ?_30, ?_31, 3, ?_32, ?_33, ?_34, ?_35, 3, ?_36, ?_37, ?_38
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....
   \       0xC8   0x....'....        DC32 ?_39, 3, ?_40, ?_41, ?_42, ?_43, 3, ?_44, ?_45, ?_46, ?_47, 3
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0003
   \       0xF8   0x....'....        DC32 ?_48, ?_49, ?_50, ?_51, 3, ?_52, ?_53, ?_54, ?_55, 3, ?_56, ?_57
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....
   \      0x128   0x....'....        DC32 ?_58, ?_59, 3, ?_60, ?_61, ?_62, ?_63, 3, ?_64, ?_65, ?_66, ?_67
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....
   \      0x158   0x0000'000A        DC32 10, ?_68, ?_69, ?_70, ?_71, 10, ?_72, ?_73, ?_74, ?_75, 3, ?_76
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'000A  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....
   \      0x188   0x....'....        DC32 ?_77, ?_78, 0x0, 0, 0x0, 0x0, 0x0
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000
    168          {
    169              {
    170                  OID_DESCRIPTOR(MBEDTLS_OID_AT_CN,          "id-at-commonName",               "Common Name"),
    171                  "CN",
    172              },
    173              {
    174                  OID_DESCRIPTOR(MBEDTLS_OID_AT_COUNTRY,     "id-at-countryName",              "Country"),
    175                  "C",
    176              },
    177              {
    178                  OID_DESCRIPTOR(MBEDTLS_OID_AT_LOCALITY,    "id-at-locality",                 "Locality"),
    179                  "L",
    180              },
    181              {
    182                  OID_DESCRIPTOR(MBEDTLS_OID_AT_STATE,       "id-at-state",                    "State"),
    183                  "ST",
    184              },
    185              {
    186                  OID_DESCRIPTOR(MBEDTLS_OID_AT_ORGANIZATION, "id-at-organizationName",
    187                                 "Organization"),
    188                  "O",
    189              },
    190              {
    191                  OID_DESCRIPTOR(MBEDTLS_OID_AT_ORG_UNIT,    "id-at-organizationalUnitName",   "Org Unit"),
    192                  "OU",
    193              },
    194              {
    195                  OID_DESCRIPTOR(MBEDTLS_OID_PKCS9_EMAIL,
    196                                 "emailAddress",
    197                                 "E-mail address"),
    198                  "emailAddress",
    199              },
    200              {
    201                  OID_DESCRIPTOR(MBEDTLS_OID_AT_SERIAL_NUMBER,
    202                                 "id-at-serialNumber",
    203                                 "Serial number"),
    204                  "serialNumber",
    205              },
    206              {
    207                  OID_DESCRIPTOR(MBEDTLS_OID_AT_POSTAL_ADDRESS,
    208                                 "id-at-postalAddress",
    209                                 "Postal address"),
    210                  "postalAddress",
    211              },
    212              {
    213                  OID_DESCRIPTOR(MBEDTLS_OID_AT_POSTAL_CODE, "id-at-postalCode",               "Postal code"),
    214                  "postalCode",
    215              },
    216              {
    217                  OID_DESCRIPTOR(MBEDTLS_OID_AT_SUR_NAME,    "id-at-surName",                  "Surname"),
    218                  "SN",
    219              },
    220              {
    221                  OID_DESCRIPTOR(MBEDTLS_OID_AT_GIVEN_NAME,  "id-at-givenName",                "Given name"),
    222                  "GN",
    223              },
    224              {
    225                  OID_DESCRIPTOR(MBEDTLS_OID_AT_INITIALS,    "id-at-initials",                 "Initials"),
    226                  "initials",
    227              },
    228              {
    229                  OID_DESCRIPTOR(MBEDTLS_OID_AT_GENERATION_QUALIFIER,
    230                                 "id-at-generationQualifier",
    231                                 "Generation qualifier"),
    232                  "generationQualifier",
    233              },
    234              {
    235                  OID_DESCRIPTOR(MBEDTLS_OID_AT_TITLE,       "id-at-title",                    "Title"),
    236                  "title",
    237              },
    238              {
    239                  OID_DESCRIPTOR(MBEDTLS_OID_AT_DN_QUALIFIER,
    240                                 "id-at-dnQualifier",
    241                                 "Distinguished Name qualifier"),
    242                  "dnQualifier",
    243              },
    244              {
    245                  OID_DESCRIPTOR(MBEDTLS_OID_AT_PSEUDONYM,   "id-at-pseudonym",                "Pseudonym"),
    246                  "pseudonym",
    247              },
    248              {
    249                  OID_DESCRIPTOR(MBEDTLS_OID_UID,            "id-uid",                         "User Id"),
    250                  "uid",
    251              },
    252              {
    253                  OID_DESCRIPTOR(MBEDTLS_OID_DOMAIN_COMPONENT,
    254                                 "id-domainComponent",
    255                                 "Domain component"),
    256                  "DC",
    257              },
    258              {
    259                  OID_DESCRIPTOR(MBEDTLS_OID_AT_UNIQUE_IDENTIFIER,
    260                                 "id-at-uniqueIdentifier",
    261                                 "Unique Identifier"),
    262                  "uniqueIdentifier",
    263              },
    264              {
    265                  NULL_OID_DESCRIPTOR,
    266                  NULL,
    267              }
    268          };
    269          
    270          FN_OID_TYPED_FROM_ASN1(oid_x520_attr_t, x520_attr, oid_x520_attr_type)

   \                                 In section .text, align 2, keep-with-next
    271          FN_OID_GET_ATTR1(mbedtls_oid_get_attr_short_name,
    272                           oid_x520_attr_t,
    273                           x520_attr,
    274                           const char *,
    275                           short_name)
   \                     mbedtls_oid_get_attr_short_name: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460E             MOV      R6,R1
   \        0x4   0x.... 0x....      LDR.W    R5,??DataTable18_1
   \        0x8   0x0004             MOVS     R4,R0
   \        0xA   0x4629             MOV      R1,R5
   \        0xC   0xD102             BNE.N    ??mbedtls_oid_get_attr_short_name_0
   \        0xE   0xE00C             B.N      ??mbedtls_oid_get_attr_short_name_1
   \                     ??mbedtls_oid_get_attr_short_name_2: (+1)
   \       0x10   0x3514             ADDS     R5,R5,#+20
   \       0x12   0x4629             MOV      R1,R5
   \                     ??mbedtls_oid_get_attr_short_name_0: (+1)
   \       0x14   0x6808             LDR      R0,[R1, #+0]
   \       0x16   0xB140             CBZ.N    R0,??mbedtls_oid_get_attr_short_name_1
   \       0x18   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_11: (+1)
   \       0x1C   0xD1F8             BNE.N    ??mbedtls_oid_get_attr_short_name_2
   \       0x1E   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_1: (+1)
   \       0x22   0x2800             CMP      R0,#+0
   \       0x24   0xD1F4             BNE.N    ??mbedtls_oid_get_attr_short_name_2
   \       0x26   0xB105             CBZ.N    R5,??mbedtls_oid_get_attr_short_name_1
   \       0x28   0x....             B.N      ?Subroutine0
   \                     ??mbedtls_oid_get_attr_short_name_1: (+1)
   \       0x2A   0x....             B.N      ?Subroutine2

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \        0x0   0xF06F 0x002D      MVN      R0,#+45
   \        0x4   0xBD70             POP      {R4-R6,PC}

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0x6928             LDR      R0,[R5, #+16]
   \                     ??Subroutine0_0: (+1)
   \        0x2   0x6030             STR      R0,[R6, #+0]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0xBD70             POP      {R4-R6,PC}

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine6: (+1)
   \        0x0   0x6862             LDR      R2,[R4, #+4]
   \        0x2   0x684B             LDR      R3,[R1, #+4]
   \        0x4   0x4293             CMP      R3,R2
   \        0x6   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5: (+1)
   \        0x0   0x68A1             LDR      R1,[R4, #+8]
   \        0x2   0x.... 0x....      B.W      memcmp
    276          
    277          /*
    278           * For X509 extensions
    279           */
    280          typedef struct {
    281              mbedtls_oid_descriptor_t    descriptor;
    282              int                 ext_type;
    283          } oid_x509_ext_t;
    284          

   \                                 In section .rodata, align 4
    285          static const oid_x509_ext_t oid_x509_ext[] =
   \                     oid_x509_ext:
   \        0x0   0x....'....        DC32 ?_79, 3, ?_80, ?_81, 256, ?_82, 3, ?_83, ?_84, 4, ?_85, 3, ?_86
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0100  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0004  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....
   \       0x34   0x....'....        DC32 ?_87, 2'048, ?_88, 3, ?_89, ?_90, 32, ?_91, 9, ?_92, ?_93, 65'536
   \              0x0000'0800  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0020  
   \              0x....'....  
   \              0x0000'0009  
   \              0x....'....  
   \              0x....'....  
   \              0x0001'0000
   \       0x64   0x....'....        DC32 ?_94, 3, ?_95, ?_96, 8, ?_97, 3, ?_98, ?_99, 2, ?_100, 3, ?_101
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0008  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0002  
   \              0x....'....  
   \              0x0000'0003  
   \              0x....'....
   \       0x98   0x....'....        DC32 ?_102, 1, 0x0, 0, 0x0, 0x0, 0
   \              0x0000'0001  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000
    286          {
    287              {
    288                  OID_DESCRIPTOR(MBEDTLS_OID_BASIC_CONSTRAINTS,
    289                                 "id-ce-basicConstraints",
    290                                 "Basic Constraints"),
    291                  MBEDTLS_OID_X509_EXT_BASIC_CONSTRAINTS,
    292              },
    293              {
    294                  OID_DESCRIPTOR(MBEDTLS_OID_KEY_USAGE,            "id-ce-keyUsage",            "Key Usage"),
    295                  MBEDTLS_OID_X509_EXT_KEY_USAGE,
    296              },
    297              {
    298                  OID_DESCRIPTOR(MBEDTLS_OID_EXTENDED_KEY_USAGE,
    299                                 "id-ce-extKeyUsage",
    300                                 "Extended Key Usage"),
    301                  MBEDTLS_OID_X509_EXT_EXTENDED_KEY_USAGE,
    302              },
    303              {
    304                  OID_DESCRIPTOR(MBEDTLS_OID_SUBJECT_ALT_NAME,
    305                                 "id-ce-subjectAltName",
    306                                 "Subject Alt Name"),
    307                  MBEDTLS_OID_X509_EXT_SUBJECT_ALT_NAME,
    308              },
    309              {
    310                  OID_DESCRIPTOR(MBEDTLS_OID_NS_CERT_TYPE,
    311                                 "id-netscape-certtype",
    312                                 "Netscape Certificate Type"),
    313                  MBEDTLS_OID_X509_EXT_NS_CERT_TYPE,
    314              },
    315              {
    316                  OID_DESCRIPTOR(MBEDTLS_OID_CERTIFICATE_POLICIES,
    317                                 "id-ce-certificatePolicies",
    318                                 "Certificate Policies"),
    319                  MBEDTLS_OID_X509_EXT_CERTIFICATE_POLICIES,
    320              },
    321              {
    322                  OID_DESCRIPTOR(MBEDTLS_OID_SUBJECT_KEY_IDENTIFIER,
    323                                 "id-ce-subjectKeyIdentifier",
    324                                 "Subject Key Identifier"),
    325                  MBEDTLS_OID_X509_EXT_SUBJECT_KEY_IDENTIFIER,
    326              },
    327              {
    328                  OID_DESCRIPTOR(MBEDTLS_OID_AUTHORITY_KEY_IDENTIFIER,
    329                                 "id-ce-authorityKeyIdentifier",
    330                                 "Authority Key Identifier"),
    331                  MBEDTLS_OID_X509_EXT_AUTHORITY_KEY_IDENTIFIER,
    332              },
    333              {
    334                  NULL_OID_DESCRIPTOR,
    335                  0,
    336              },
    337          };
    338          
    339          FN_OID_TYPED_FROM_ASN1(oid_x509_ext_t, x509_ext, oid_x509_ext)

   \                                 In section .text, align 2, keep-with-next
    340          FN_OID_GET_ATTR1(mbedtls_oid_get_x509_ext_type, oid_x509_ext_t, x509_ext, int, ext_type)
   \                     mbedtls_oid_get_x509_ext_type: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460E             MOV      R6,R1
   \        0x4   0x.... 0x....      LDR.W    R5,??DataTable18_2
   \        0x8   0x0004             MOVS     R4,R0
   \        0xA   0x4629             MOV      R1,R5
   \        0xC   0xD102             BNE.N    ??mbedtls_oid_get_x509_ext_type_0
   \        0xE   0xE00C             B.N      ??mbedtls_oid_get_x509_ext_type_1
   \                     ??mbedtls_oid_get_x509_ext_type_2: (+1)
   \       0x10   0x3514             ADDS     R5,R5,#+20
   \       0x12   0x4629             MOV      R1,R5
   \                     ??mbedtls_oid_get_x509_ext_type_0: (+1)
   \       0x14   0x6808             LDR      R0,[R1, #+0]
   \       0x16   0xB140             CBZ.N    R0,??mbedtls_oid_get_x509_ext_type_1
   \       0x18   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_12: (+1)
   \       0x1C   0xD1F8             BNE.N    ??mbedtls_oid_get_x509_ext_type_2
   \       0x1E   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_2: (+1)
   \       0x22   0x2800             CMP      R0,#+0
   \       0x24   0xD1F4             BNE.N    ??mbedtls_oid_get_x509_ext_type_2
   \       0x26   0xB105             CBZ.N    R5,??mbedtls_oid_get_x509_ext_type_1
   \       0x28   0x....             B.N      ?Subroutine0
   \                     ??mbedtls_oid_get_x509_ext_type_1: (+1)
   \       0x2A                      REQUIRE ?Subroutine2
   \       0x2A                      ;; // Fall through to label ?Subroutine2
    341          
    342          #if !defined(MBEDTLS_X509_REMOVE_INFO)

   \                                 In section .rodata, align 4
    343          static const mbedtls_oid_descriptor_t oid_ext_key_usage[] =
   \                     oid_ext_key_usage:
   \        0x0   0x....'....        DC32 ?_103, 8, ?_104, ?_105, ?_106, 8, ?_107, ?_108, ?_109, 8, ?_110
   \              0x0000'0008  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0008  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0008  
   \              0x....'....
   \       0x2C   0x....'....        DC32 ?_111, ?_112, 8, ?_113, ?_114, ?_115, 8, ?_116, ?_117, ?_118, 8
   \              0x....'....  
   \              0x0000'0008  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0008  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0008
   \       0x58   0x....'....        DC32 ?_119, ?_120, ?_121, 9, ?_122, ?_123, 0x0, 0, 0x0, 0x0
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0009  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000
    344          {
    345              OID_DESCRIPTOR(MBEDTLS_OID_SERVER_AUTH,
    346                             "id-kp-serverAuth",
    347                             "TLS Web Server Authentication"),
    348              OID_DESCRIPTOR(MBEDTLS_OID_CLIENT_AUTH,
    349                             "id-kp-clientAuth",
    350                             "TLS Web Client Authentication"),
    351              OID_DESCRIPTOR(MBEDTLS_OID_CODE_SIGNING,     "id-kp-codeSigning",     "Code Signing"),
    352              OID_DESCRIPTOR(MBEDTLS_OID_EMAIL_PROTECTION, "id-kp-emailProtection", "E-mail Protection"),
    353              OID_DESCRIPTOR(MBEDTLS_OID_TIME_STAMPING,    "id-kp-timeStamping",    "Time Stamping"),
    354              OID_DESCRIPTOR(MBEDTLS_OID_OCSP_SIGNING,     "id-kp-OCSPSigning",     "OCSP Signing"),
    355              OID_DESCRIPTOR(MBEDTLS_OID_WISUN_FAN,
    356                             "id-kp-wisun-fan-device",
    357                             "Wi-SUN Alliance Field Area Network (FAN)"),
    358              NULL_OID_DESCRIPTOR,
    359          };
    360          
    361          FN_OID_TYPED_FROM_ASN1(mbedtls_oid_descriptor_t, ext_key_usage, oid_ext_key_usage)

   \                                 In section .text, align 2, keep-with-next
    362          FN_OID_GET_ATTR1(mbedtls_oid_get_extended_key_usage,
    363                           mbedtls_oid_descriptor_t,
    364                           ext_key_usage,
    365                           const char *,
    366                           description)
   \                     mbedtls_oid_get_extended_key_usage: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460E             MOV      R6,R1
   \        0x4   0x.... 0x....      LDR.W    R5,??DataTable18_3
   \        0x8   0x0004             MOVS     R4,R0
   \        0xA   0x4629             MOV      R1,R5
   \        0xC   0xD102             BNE.N    ??mbedtls_oid_get_extended_key_usage_0
   \        0xE   0xE00D             B.N      ??mbedtls_oid_get_extended_key_usage_1
   \                     ??mbedtls_oid_get_extended_key_usage_2: (+1)
   \       0x10   0x3510             ADDS     R5,R5,#+16
   \       0x12   0x4629             MOV      R1,R5
   \                     ??mbedtls_oid_get_extended_key_usage_0: (+1)
   \       0x14   0x6808             LDR      R0,[R1, #+0]
   \       0x16   0xB148             CBZ.N    R0,??mbedtls_oid_get_extended_key_usage_1
   \       0x18   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_13: (+1)
   \       0x1C   0xD1F8             BNE.N    ??mbedtls_oid_get_extended_key_usage_2
   \       0x1E   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_3: (+1)
   \       0x22   0x2800             CMP      R0,#+0
   \       0x24   0xD1F4             BNE.N    ??mbedtls_oid_get_extended_key_usage_2
   \       0x26   0xB10D             CBZ.N    R5,??mbedtls_oid_get_extended_key_usage_1
   \       0x28   0x68E8             LDR      R0,[R5, #+12]
   \       0x2A   0x....             B.N      ??Subroutine0_0
   \                     ??mbedtls_oid_get_extended_key_usage_1: (+1)
   \       0x2C   0x....             B.N      ?Subroutine2
    367          

   \                                 In section .text, align 4, keep-with-next
    368          static const mbedtls_oid_descriptor_t oid_certificate_policies[] =
   \                     oid_certificate_policies:
   \        0x0   0x....'....        DC32 ?_124, 4, ?_125, ?_126, 0x0, 0, 0x0, 0x0
   \              0x0000'0004  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000
    369          {
    370              OID_DESCRIPTOR(MBEDTLS_OID_ANY_POLICY,      "anyPolicy",       "Any Policy"),
    371              NULL_OID_DESCRIPTOR,
    372          };
    373          
    374          FN_OID_TYPED_FROM_ASN1(mbedtls_oid_descriptor_t, certificate_policies, oid_certificate_policies)

   \                                 In section .text, align 2, keep-with-next
    375          FN_OID_GET_ATTR1(mbedtls_oid_get_certificate_policies,
    376                           mbedtls_oid_descriptor_t,
    377                           certificate_policies,
    378                           const char *,
    379                           description)
   \                     mbedtls_oid_get_certificate_policies: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460E             MOV      R6,R1
   \        0x4   0x.... 0x....      ADR.W    R5,oid_certificate_policies
   \        0x8   0x0004             MOVS     R4,R0
   \        0xA   0x4629             MOV      R1,R5
   \        0xC   0xD102             BNE.N    ??mbedtls_oid_get_certificate_policies_0
   \        0xE   0xE00D             B.N      ??mbedtls_oid_get_certificate_policies_1
   \                     ??mbedtls_oid_get_certificate_policies_2: (+1)
   \       0x10   0x3510             ADDS     R5,R5,#+16
   \       0x12   0x4629             MOV      R1,R5
   \                     ??mbedtls_oid_get_certificate_policies_0: (+1)
   \       0x14   0x6808             LDR      R0,[R1, #+0]
   \       0x16   0xB148             CBZ.N    R0,??mbedtls_oid_get_certificate_policies_1
   \       0x18   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_14: (+1)
   \       0x1C   0xD1F8             BNE.N    ??mbedtls_oid_get_certificate_policies_2
   \       0x1E   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_4: (+1)
   \       0x22   0x2800             CMP      R0,#+0
   \       0x24   0xD1F4             BNE.N    ??mbedtls_oid_get_certificate_policies_2
   \       0x26   0xB10D             CBZ.N    R5,??mbedtls_oid_get_certificate_policies_1
   \       0x28   0x68E8             LDR      R0,[R5, #+12]
   \       0x2A   0x....             B.N      ??Subroutine0_0
   \                     ??mbedtls_oid_get_certificate_policies_1: (+1)
   \       0x2C   0x....             B.N      ?Subroutine2
    380          #endif /* MBEDTLS_X509_REMOVE_INFO */
    381          
    382          /*
    383           * For SignatureAlgorithmIdentifier
    384           */
    385          typedef struct {
    386              mbedtls_oid_descriptor_t    descriptor;
    387              mbedtls_md_type_t           md_alg;
    388              mbedtls_pk_type_t           pk_alg;
    389          } oid_sig_alg_t;
    390          

   \                                 In section .rodata, align 4
    391          static const oid_sig_alg_t oid_sig_alg[] =
   \                     oid_sig_alg:
   \        0x0   0x....'....        DC32 ?_127, 7, ?_128, ?_129
   \              0x0000'0007  
   \              0x....'....  
   \              0x....'....
   \       0x10   0x05 0x04          DC8 5, 4
   \       0x12                      DS8 2
   \       0x14   0x....'....        DC32 ?_130, 8, ?_131, ?_132
   \              0x0000'0008  
   \              0x....'....  
   \              0x....'....
   \       0x24   0x08 0x04          DC8 8, 4
   \       0x26                      DS8 2
   \       0x28   0x....'....        DC32 ?_133, 8, ?_134, ?_135
   \              0x0000'0008  
   \              0x....'....  
   \              0x....'....
   \       0x38   0x09 0x04          DC8 9, 4
   \       0x3A                      DS8 2
   \       0x3C   0x0000'0000        DC32 0x0, 0, 0x0, 0x0
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000
   \       0x4C   0x00 0x00          DC8 0, 0
   \       0x4E                      DS8 2
    392          {
    393          #if defined(MBEDTLS_RSA_C)
    394          #if defined(MBEDTLS_MD_CAN_MD5)
    395              {
    396                  OID_DESCRIPTOR(MBEDTLS_OID_PKCS1_MD5,        "md5WithRSAEncryption",     "RSA with MD5"),
    397                  MBEDTLS_MD_MD5,      MBEDTLS_PK_RSA,
    398              },
    399          #endif /* MBEDTLS_MD_CAN_MD5 */
    400          #if defined(MBEDTLS_MD_CAN_SHA1)
    401              {
    402                  OID_DESCRIPTOR(MBEDTLS_OID_PKCS1_SHA1,       "sha-1WithRSAEncryption",   "RSA with SHA1"),
    403                  MBEDTLS_MD_SHA1,     MBEDTLS_PK_RSA,
    404              },
    405          #endif /* MBEDTLS_MD_CAN_SHA1 */
    406          #if defined(MBEDTLS_MD_CAN_SHA224)
    407              {
    408                  OID_DESCRIPTOR(MBEDTLS_OID_PKCS1_SHA224,     "sha224WithRSAEncryption",
    409                                 "RSA with SHA-224"),
    410                  MBEDTLS_MD_SHA224,   MBEDTLS_PK_RSA,
    411              },
    412          #endif /* MBEDTLS_MD_CAN_SHA224 */
    413          #if defined(MBEDTLS_MD_CAN_SHA256)
    414              {
    415                  OID_DESCRIPTOR(MBEDTLS_OID_PKCS1_SHA256,     "sha256WithRSAEncryption",
    416                                 "RSA with SHA-256"),
    417                  MBEDTLS_MD_SHA256,   MBEDTLS_PK_RSA,
    418              },
    419          #endif /* MBEDTLS_MD_CAN_SHA256 */
    420          #if defined(MBEDTLS_MD_CAN_SHA384)
    421              {
    422                  OID_DESCRIPTOR(MBEDTLS_OID_PKCS1_SHA384,     "sha384WithRSAEncryption",
    423                                 "RSA with SHA-384"),
    424                  MBEDTLS_MD_SHA384,   MBEDTLS_PK_RSA,
    425              },
    426          #endif /* MBEDTLS_MD_CAN_SHA384 */
    427          #if defined(MBEDTLS_MD_CAN_SHA512)
    428              {
    429                  OID_DESCRIPTOR(MBEDTLS_OID_PKCS1_SHA512,     "sha512WithRSAEncryption",
    430                                 "RSA with SHA-512"),
    431                  MBEDTLS_MD_SHA512,   MBEDTLS_PK_RSA,
    432              },
    433          #endif /* MBEDTLS_MD_CAN_SHA512 */
    434          #if defined(MBEDTLS_MD_CAN_SHA1)
    435              {
    436                  OID_DESCRIPTOR(MBEDTLS_OID_RSA_SHA_OBS,      "sha-1WithRSAEncryption",   "RSA with SHA1"),
    437                  MBEDTLS_MD_SHA1,     MBEDTLS_PK_RSA,
    438              },
    439          #endif /* MBEDTLS_MD_CAN_SHA1 */
    440          #endif /* MBEDTLS_RSA_C */
    441          #if defined(MBEDTLS_PK_CAN_ECDSA_SOME)
    442          #if defined(MBEDTLS_MD_CAN_SHA1)
    443              {
    444                  OID_DESCRIPTOR(MBEDTLS_OID_ECDSA_SHA1,       "ecdsa-with-SHA1",      "ECDSA with SHA1"),
    445                  MBEDTLS_MD_SHA1,     MBEDTLS_PK_ECDSA,
    446              },
    447          #endif /* MBEDTLS_MD_CAN_SHA1 */
    448          #if defined(MBEDTLS_MD_CAN_SHA224)
    449              {
    450                  OID_DESCRIPTOR(MBEDTLS_OID_ECDSA_SHA224,     "ecdsa-with-SHA224",    "ECDSA with SHA224"),
    451                  MBEDTLS_MD_SHA224,   MBEDTLS_PK_ECDSA,
    452              },
    453          #endif
    454          #if defined(MBEDTLS_MD_CAN_SHA256)
    455              {
    456                  OID_DESCRIPTOR(MBEDTLS_OID_ECDSA_SHA256,     "ecdsa-with-SHA256",    "ECDSA with SHA256"),
    457                  MBEDTLS_MD_SHA256,   MBEDTLS_PK_ECDSA,
    458              },
    459          #endif /* MBEDTLS_MD_CAN_SHA256 */
    460          #if defined(MBEDTLS_MD_CAN_SHA384)
    461              {
    462                  OID_DESCRIPTOR(MBEDTLS_OID_ECDSA_SHA384,     "ecdsa-with-SHA384",    "ECDSA with SHA384"),
    463                  MBEDTLS_MD_SHA384,   MBEDTLS_PK_ECDSA,
    464              },
    465          #endif /* MBEDTLS_MD_CAN_SHA384 */
    466          #if defined(MBEDTLS_MD_CAN_SHA512)
    467              {
    468                  OID_DESCRIPTOR(MBEDTLS_OID_ECDSA_SHA512,     "ecdsa-with-SHA512",    "ECDSA with SHA512"),
    469                  MBEDTLS_MD_SHA512,   MBEDTLS_PK_ECDSA,
    470              },
    471          #endif /* MBEDTLS_MD_CAN_SHA512 */
    472          #endif /* MBEDTLS_PK_CAN_ECDSA_SOME */
    473          #if defined(MBEDTLS_RSA_C)
    474              {
    475                  OID_DESCRIPTOR(MBEDTLS_OID_RSASSA_PSS,        "RSASSA-PSS",           "RSASSA-PSS"),
    476                  MBEDTLS_MD_NONE,     MBEDTLS_PK_RSASSA_PSS,
    477              },
    478          #endif /* MBEDTLS_RSA_C */
    479              {
    480                  NULL_OID_DESCRIPTOR,
    481                  MBEDTLS_MD_NONE, MBEDTLS_PK_NONE,
    482              },
    483          };
    484          

   \                                 In section .text, align 2, keep-with-next
    485          FN_OID_TYPED_FROM_ASN1(oid_sig_alg_t, sig_alg, oid_sig_alg)
   \                     oid_sig_alg_from_asn1: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x.... 0x....      LDR.W    R5,??DataTable18_4
   \        0x6   0x0004             MOVS     R4,R0
   \        0x8   0x4629             MOV      R1,R5
   \        0xA   0xD103             BNE.N    ??oid_sig_alg_from_asn1_0
   \                     ??oid_sig_alg_from_asn1_1: (+1)
   \        0xC   0x2000             MOVS     R0,#+0
   \        0xE   0xBD32             POP      {R1,R4,R5,PC}
   \                     ??oid_sig_alg_from_asn1_2: (+1)
   \       0x10   0x3514             ADDS     R5,R5,#+20
   \       0x12   0x4629             MOV      R1,R5
   \                     ??oid_sig_alg_from_asn1_0: (+1)
   \       0x14   0x6808             LDR      R0,[R1, #+0]
   \       0x16   0x2800             CMP      R0,#+0
   \       0x18   0xD0F8             BEQ.N    ??oid_sig_alg_from_asn1_1
   \       0x1A   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_15: (+1)
   \       0x1E   0xD1F7             BNE.N    ??oid_sig_alg_from_asn1_2
   \       0x20   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_0: (+1)
   \       0x24   0x2800             CMP      R0,#+0
   \       0x26   0xD1F3             BNE.N    ??oid_sig_alg_from_asn1_2
   \       0x28   0x4628             MOV      R0,R5
   \       0x2A   0xBD32             POP      {R1,R4,R5,PC}
    486          
    487          #if !defined(MBEDTLS_X509_REMOVE_INFO)

   \                                 In section .text, align 2, keep-with-next
    488          FN_OID_GET_DESCRIPTOR_ATTR1(mbedtls_oid_get_sig_alg_desc,
    489                                      oid_sig_alg_t,
    490                                      sig_alg,
    491                                      const char *,
    492                                      description)
   \                     mbedtls_oid_get_sig_alg_desc: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x.... 0x....      BL       oid_sig_alg_from_asn1
   \        0x8   0xB910             CBNZ.N   R0,??mbedtls_oid_get_sig_alg_desc_0
   \        0xA   0xF06F 0x002D      MVN      R0,#+45
   \        0xE   0xBD10             POP      {R4,PC}
   \                     ??mbedtls_oid_get_sig_alg_desc_0: (+1)
   \       0x10   0x68C0             LDR      R0,[R0, #+12]
   \       0x12   0x6020             STR      R0,[R4, #+0]
   \       0x14   0x2000             MOVS     R0,#+0
   \       0x16   0xBD10             POP      {R4,PC}
    493          #endif
    494          

   \                                 In section .text, align 2, keep-with-next
    495          FN_OID_GET_ATTR2(mbedtls_oid_get_sig_alg,
    496                           oid_sig_alg_t,
    497                           sig_alg,
    498                           mbedtls_md_type_t,
    499                           md_alg,
    500                           mbedtls_pk_type_t,
    501                           pk_alg)
   \                     mbedtls_oid_get_sig_alg: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x4615             MOV      R5,R2
   \        0x6   0x.... 0x....      BL       oid_sig_alg_from_asn1
   \        0xA   0xB910             CBNZ.N   R0,??mbedtls_oid_get_sig_alg_0
   \        0xC   0xF06F 0x002D      MVN      R0,#+45
   \       0x10   0xBD32             POP      {R1,R4,R5,PC}
   \                     ??mbedtls_oid_get_sig_alg_0: (+1)
   \       0x12   0x7C01             LDRB     R1,[R0, #+16]
   \       0x14   0x7021             STRB     R1,[R4, #+0]
   \       0x16   0x7C40             LDRB     R0,[R0, #+17]
   \       0x18   0x7028             STRB     R0,[R5, #+0]
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0xBD32             POP      {R1,R4,R5,PC}

   \                                 In section .text, align 2, keep-with-next
    502          FN_OID_GET_OID_BY_ATTR2(mbedtls_oid_get_oid_by_sig_alg,
    503                                  oid_sig_alg_t,
    504                                  oid_sig_alg,
    505                                  mbedtls_pk_type_t,
    506                                  pk_alg,
    507                                  mbedtls_md_type_t,
    508                                  md_alg)
   \                     mbedtls_oid_get_oid_by_sig_alg: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0x.... 0x....      LDR.W    R6,??DataTable18_4
   \        0x6   0xE000             B.N      ??mbedtls_oid_get_oid_by_sig_alg_0
   \                     ??mbedtls_oid_get_oid_by_sig_alg_1: (+1)
   \        0x8   0x3614             ADDS     R6,R6,#+20
   \                     ??mbedtls_oid_get_oid_by_sig_alg_0: (+1)
   \        0xA   0x6834             LDR      R4,[R6, #+0]
   \        0xC   0xB154             CBZ.N    R4,??mbedtls_oid_get_oid_by_sig_alg_2
   \        0xE   0x7C75             LDRB     R5,[R6, #+17]
   \       0x10   0x4285             CMP      R5,R0
   \       0x12   0xBF04             ITT      EQ
   \       0x14   0x7C37             LDRBEQ   R7,[R6, #+16]
   \       0x16   0x428F             CMPEQ    R7,R1
   \       0x18   0xD1F6             BNE.N    ??mbedtls_oid_get_oid_by_sig_alg_1
   \       0x1A   0x6014             STR      R4,[R2, #+0]
   \       0x1C   0x6870             LDR      R0,[R6, #+4]
   \       0x1E   0x6018             STR      R0,[R3, #+0]
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0xBDF0             POP      {R4-R7,PC}
   \                     ??mbedtls_oid_get_oid_by_sig_alg_2: (+1)
   \       0x24   0xF06F 0x002D      MVN      R0,#+45
   \       0x28   0xBDF0             POP      {R4-R7,PC}
    509          
    510          /*
    511           * For PublicKeyInfo (PKCS1, RFC 5480)
    512           */
    513          typedef struct {
    514              mbedtls_oid_descriptor_t    descriptor;
    515              mbedtls_pk_type_t           pk_alg;
    516          } oid_pk_alg_t;
    517          

   \                                 In section .rodata, align 4
    518          static const oid_pk_alg_t oid_pk_alg[] =
   \                     oid_pk_alg:
   \        0x0   0x....'....        DC32 ?_136, 9, ?_137, ?_138
   \              0x0000'0009  
   \              0x....'....  
   \              0x....'....
   \       0x10   0x01               DC8 1
   \       0x11                      DS8 3
   \       0x14   0x....'....        DC32 ?_139, 7, ?_140, ?_141
   \              0x0000'0007  
   \              0x....'....  
   \              0x....'....
   \       0x24   0x02               DC8 2
   \       0x25                      DS8 3
   \       0x28   0x....'....        DC32 ?_142, 5, ?_143, ?_144
   \              0x0000'0005  
   \              0x....'....  
   \              0x....'....
   \       0x38   0x03               DC8 3
   \       0x39                      DS8 3
   \       0x3C   0x0000'0000        DC32 0x0, 0, 0x0, 0x0
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000
   \       0x4C   0x00               DC8 0
   \       0x4D                      DS8 3
    519          {
    520              {
    521                  OID_DESCRIPTOR(MBEDTLS_OID_PKCS1_RSA,           "rsaEncryption",    "RSA"),
    522                  MBEDTLS_PK_RSA,
    523              },
    524              {
    525                  OID_DESCRIPTOR(MBEDTLS_OID_EC_ALG_UNRESTRICTED, "id-ecPublicKey",   "Generic EC key"),
    526                  MBEDTLS_PK_ECKEY,
    527              },
    528              {
    529                  OID_DESCRIPTOR(MBEDTLS_OID_EC_ALG_ECDH,         "id-ecDH",          "EC key for ECDH"),
    530                  MBEDTLS_PK_ECKEY_DH,
    531              },
    532              {
    533                  NULL_OID_DESCRIPTOR,
    534                  MBEDTLS_PK_NONE,
    535              },
    536          };
    537          
    538          FN_OID_TYPED_FROM_ASN1(oid_pk_alg_t, pk_alg, oid_pk_alg)

   \                                 In section .text, align 2, keep-with-next
    539          FN_OID_GET_ATTR1(mbedtls_oid_get_pk_alg, oid_pk_alg_t, pk_alg, mbedtls_pk_type_t, pk_alg)
   \                     mbedtls_oid_get_pk_alg: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460E             MOV      R6,R1
   \        0x4   0x....             LDR.N    R5,??DataTable18_5
   \        0x6   0x0004             MOVS     R4,R0
   \        0x8   0x4629             MOV      R1,R5
   \        0xA   0xD102             BNE.N    ??mbedtls_oid_get_pk_alg_0
   \        0xC   0xE00C             B.N      ??mbedtls_oid_get_pk_alg_1
   \                     ??mbedtls_oid_get_pk_alg_2: (+1)
   \        0xE   0x3514             ADDS     R5,R5,#+20
   \       0x10   0x4629             MOV      R1,R5
   \                     ??mbedtls_oid_get_pk_alg_0: (+1)
   \       0x12   0x6808             LDR      R0,[R1, #+0]
   \       0x14   0xB140             CBZ.N    R0,??mbedtls_oid_get_pk_alg_1
   \       0x16   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_16: (+1)
   \       0x1A   0xD1F8             BNE.N    ??mbedtls_oid_get_pk_alg_2
   \       0x1C   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_5: (+1)
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD1F4             BNE.N    ??mbedtls_oid_get_pk_alg_2
   \       0x24   0xB105             CBZ.N    R5,??mbedtls_oid_get_pk_alg_1
   \       0x26   0x....             B.N      ?Subroutine1
   \                     ??mbedtls_oid_get_pk_alg_1: (+1)
   \       0x28   0x....             B.N      ?Subroutine2

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0x7C28             LDRB     R0,[R5, #+16]
   \        0x2   0x7030             STRB     R0,[R6, #+0]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0xBD70             POP      {R4-R6,PC}

   \                                 In section .text, align 2, keep-with-next
    540          FN_OID_GET_OID_BY_ATTR1(mbedtls_oid_get_oid_by_pk_alg,
    541                                  oid_pk_alg_t,
    542                                  oid_pk_alg,
    543                                  mbedtls_pk_type_t,
    544                                  pk_alg)
   \                     mbedtls_oid_get_oid_by_pk_alg: (+1)
   \        0x0   0xB560             PUSH     {R5,R6,LR}
   \        0x2   0x....             LDR.N    R6,??DataTable18_5
   \        0x4   0xE000             B.N      ??mbedtls_oid_get_oid_by_pk_alg_0
   \                     ??mbedtls_oid_get_oid_by_pk_alg_1: (+1)
   \        0x6   0x3614             ADDS     R6,R6,#+20
   \                     ??mbedtls_oid_get_oid_by_pk_alg_0: (+1)
   \        0x8   0x6833             LDR      R3,[R6, #+0]
   \        0xA   0xB11B             CBZ.N    R3,??mbedtls_oid_get_oid_by_pk_alg_2
   \        0xC   0x7C35             LDRB     R5,[R6, #+16]
   \        0xE   0x4285             CMP      R5,R0
   \       0x10   0xD1F9             BNE.N    ??mbedtls_oid_get_oid_by_pk_alg_1
   \       0x12   0x....             B.N      ?Subroutine3
   \                     ??mbedtls_oid_get_oid_by_pk_alg_2: (+1)
   \       0x14   0x....             B.N      ?Subroutine4

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \        0x0   0xF06F 0x002D      MVN      R0,#+45
   \        0x4   0xBD60             POP      {R5,R6,PC}

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \        0x0   0x600B             STR      R3,[R1, #+0]
   \        0x2   0x6870             LDR      R0,[R6, #+4]
   \        0x4   0x6010             STR      R0,[R2, #+0]
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0xBD60             POP      {R5,R6,PC}
    545          
    546          #if defined(MBEDTLS_PK_HAVE_ECC_KEYS)
    547          /*
    548           * For elliptic curves that use namedCurve inside ECParams (RFC 5480)
    549           */
    550          typedef struct {
    551              mbedtls_oid_descriptor_t    descriptor;
    552              mbedtls_ecp_group_id        grp_id;
    553          } oid_ecp_grp_t;
    554          

   \                                 In section .rodata, align 4
    555          static const oid_ecp_grp_t oid_ecp_grp[] =
   \                     oid_ecp_grp:
   \        0x0   0x....'....        DC32 ?_145, 8, ?_146, ?_146
   \              0x0000'0008  
   \              0x....'....  
   \              0x....'....
   \       0x10   0x03               DC8 3
   \       0x11                      DS8 3
   \       0x14   0x0000'0000        DC32 0x0, 0, 0x0, 0x0
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000
   \       0x24   0x00               DC8 0
   \       0x25                      DS8 3
    556          {
    557          #if defined(MBEDTLS_ECP_HAVE_SECP192R1)
    558              {
    559                  OID_DESCRIPTOR(MBEDTLS_OID_EC_GRP_SECP192R1, "secp192r1",    "secp192r1"),
    560                  MBEDTLS_ECP_DP_SECP192R1,
    561              },
    562          #endif /* MBEDTLS_ECP_HAVE_SECP192R1 */
    563          #if defined(MBEDTLS_ECP_HAVE_SECP224R1)
    564              {
    565                  OID_DESCRIPTOR(MBEDTLS_OID_EC_GRP_SECP224R1, "secp224r1",    "secp224r1"),
    566                  MBEDTLS_ECP_DP_SECP224R1,
    567              },
    568          #endif /* MBEDTLS_ECP_HAVE_SECP224R1 */
    569          #if defined(MBEDTLS_ECP_HAVE_SECP256R1)
    570              {
    571                  OID_DESCRIPTOR(MBEDTLS_OID_EC_GRP_SECP256R1, "secp256r1",    "secp256r1"),
    572                  MBEDTLS_ECP_DP_SECP256R1,
    573              },
    574          #endif /* MBEDTLS_ECP_HAVE_SECP256R1 */
    575          #if defined(MBEDTLS_ECP_HAVE_SECP384R1)
    576              {
    577                  OID_DESCRIPTOR(MBEDTLS_OID_EC_GRP_SECP384R1, "secp384r1",    "secp384r1"),
    578                  MBEDTLS_ECP_DP_SECP384R1,
    579              },
    580          #endif /* MBEDTLS_ECP_HAVE_SECP384R1 */
    581          #if defined(MBEDTLS_ECP_HAVE_SECP521R1)
    582              {
    583                  OID_DESCRIPTOR(MBEDTLS_OID_EC_GRP_SECP521R1, "secp521r1",    "secp521r1"),
    584                  MBEDTLS_ECP_DP_SECP521R1,
    585              },
    586          #endif /* MBEDTLS_ECP_HAVE_SECP521R1 */
    587          #if defined(MBEDTLS_ECP_HAVE_SECP192K1)
    588              {
    589                  OID_DESCRIPTOR(MBEDTLS_OID_EC_GRP_SECP192K1, "secp192k1",    "secp192k1"),
    590                  MBEDTLS_ECP_DP_SECP192K1,
    591              },
    592          #endif /* MBEDTLS_ECP_HAVE_SECP192K1 */
    593          #if defined(MBEDTLS_ECP_HAVE_SECP224K1)
    594              {
    595                  OID_DESCRIPTOR(MBEDTLS_OID_EC_GRP_SECP224K1, "secp224k1",    "secp224k1"),
    596                  MBEDTLS_ECP_DP_SECP224K1,
    597              },
    598          #endif /* MBEDTLS_ECP_HAVE_SECP224K1 */
    599          #if defined(MBEDTLS_ECP_HAVE_SECP256K1)
    600              {
    601                  OID_DESCRIPTOR(MBEDTLS_OID_EC_GRP_SECP256K1, "secp256k1",    "secp256k1"),
    602                  MBEDTLS_ECP_DP_SECP256K1,
    603              },
    604          #endif /* MBEDTLS_ECP_HAVE_SECP256K1 */
    605          #if defined(MBEDTLS_ECP_HAVE_BP256R1)
    606              {
    607                  OID_DESCRIPTOR(MBEDTLS_OID_EC_GRP_BP256R1,   "brainpoolP256r1", "brainpool256r1"),
    608                  MBEDTLS_ECP_DP_BP256R1,
    609              },
    610          #endif /* MBEDTLS_ECP_HAVE_BP256R1 */
    611          #if defined(MBEDTLS_ECP_HAVE_BP384R1)
    612              {
    613                  OID_DESCRIPTOR(MBEDTLS_OID_EC_GRP_BP384R1,   "brainpoolP384r1", "brainpool384r1"),
    614                  MBEDTLS_ECP_DP_BP384R1,
    615              },
    616          #endif /* MBEDTLS_ECP_HAVE_BP384R1 */
    617          #if defined(MBEDTLS_ECP_HAVE_BP512R1)
    618              {
    619                  OID_DESCRIPTOR(MBEDTLS_OID_EC_GRP_BP512R1,   "brainpoolP512r1", "brainpool512r1"),
    620                  MBEDTLS_ECP_DP_BP512R1,
    621              },
    622          #endif /* MBEDTLS_ECP_HAVE_BP512R1 */
    623              {
    624                  NULL_OID_DESCRIPTOR,
    625                  MBEDTLS_ECP_DP_NONE,
    626              },
    627          };
    628          
    629          FN_OID_TYPED_FROM_ASN1(oid_ecp_grp_t, grp_id, oid_ecp_grp)

   \                                 In section .text, align 2, keep-with-next
    630          FN_OID_GET_ATTR1(mbedtls_oid_get_ec_grp, oid_ecp_grp_t, grp_id, mbedtls_ecp_group_id, grp_id)
   \                     mbedtls_oid_get_ec_grp: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460E             MOV      R6,R1
   \        0x4   0x....             LDR.N    R5,??DataTable18_6
   \        0x6   0x0004             MOVS     R4,R0
   \        0x8   0x4629             MOV      R1,R5
   \        0xA   0xD102             BNE.N    ??mbedtls_oid_get_ec_grp_0
   \        0xC   0xE00C             B.N      ??mbedtls_oid_get_ec_grp_1
   \                     ??mbedtls_oid_get_ec_grp_2: (+1)
   \        0xE   0x3514             ADDS     R5,R5,#+20
   \       0x10   0x4629             MOV      R1,R5
   \                     ??mbedtls_oid_get_ec_grp_0: (+1)
   \       0x12   0x6808             LDR      R0,[R1, #+0]
   \       0x14   0xB140             CBZ.N    R0,??mbedtls_oid_get_ec_grp_1
   \       0x16   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_17: (+1)
   \       0x1A   0xD1F8             BNE.N    ??mbedtls_oid_get_ec_grp_2
   \       0x1C   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_6: (+1)
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD1F4             BNE.N    ??mbedtls_oid_get_ec_grp_2
   \       0x24   0xB105             CBZ.N    R5,??mbedtls_oid_get_ec_grp_1
   \       0x26   0x....             B.N      ?Subroutine1
   \                     ??mbedtls_oid_get_ec_grp_1: (+1)
   \       0x28   0x....             B.N      ?Subroutine2

   \                                 In section .text, align 2, keep-with-next
    631          FN_OID_GET_OID_BY_ATTR1(mbedtls_oid_get_oid_by_ec_grp,
    632                                  oid_ecp_grp_t,
    633                                  oid_ecp_grp,
    634                                  mbedtls_ecp_group_id,
    635                                  grp_id)
   \                     mbedtls_oid_get_oid_by_ec_grp: (+1)
   \        0x0   0xB560             PUSH     {R5,R6,LR}
   \        0x2   0x....             LDR.N    R6,??DataTable18_6
   \        0x4   0xE000             B.N      ??mbedtls_oid_get_oid_by_ec_grp_0
   \                     ??mbedtls_oid_get_oid_by_ec_grp_1: (+1)
   \        0x6   0x3614             ADDS     R6,R6,#+20
   \                     ??mbedtls_oid_get_oid_by_ec_grp_0: (+1)
   \        0x8   0x6833             LDR      R3,[R6, #+0]
   \        0xA   0xB11B             CBZ.N    R3,??mbedtls_oid_get_oid_by_ec_grp_2
   \        0xC   0x7C35             LDRB     R5,[R6, #+16]
   \        0xE   0x4285             CMP      R5,R0
   \       0x10   0xD1F9             BNE.N    ??mbedtls_oid_get_oid_by_ec_grp_1
   \       0x12   0x....             B.N      ?Subroutine3
   \                     ??mbedtls_oid_get_oid_by_ec_grp_2: (+1)
   \       0x14                      REQUIRE ?Subroutine4
   \       0x14                      ;; // Fall through to label ?Subroutine4
    636          
    637          /*
    638           * For Elliptic Curve algorithms that are directly
    639           * encoded in the AlgorithmIdentifier (RFC 8410)
    640           */
    641          typedef struct {
    642              mbedtls_oid_descriptor_t    descriptor;
    643              mbedtls_ecp_group_id        grp_id;
    644          } oid_ecp_grp_algid_t;
    645          

   \                                 In section .text, align 4, keep-with-next
    646          static const oid_ecp_grp_algid_t oid_ecp_grp_algid[] =
   \                     oid_ecp_grp_algid:
   \        0x0   0x0000'0000        DC32 0x0, 0, 0x0, 0x0
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000
   \       0x10   0x00               DC8 0
   \       0x11                      DS8 3
    647          {
    648          #if defined(MBEDTLS_ECP_HAVE_CURVE25519)
    649              {
    650                  OID_DESCRIPTOR(MBEDTLS_OID_X25519,               "X25519",       "X25519"),
    651                  MBEDTLS_ECP_DP_CURVE25519,
    652              },
    653          #endif /* MBEDTLS_ECP_HAVE_CURVE25519 */
    654          #if defined(MBEDTLS_ECP_HAVE_CURVE448)
    655              {
    656                  OID_DESCRIPTOR(MBEDTLS_OID_X448,                 "X448",         "X448"),
    657                  MBEDTLS_ECP_DP_CURVE448,
    658              },
    659          #endif /* MBEDTLS_ECP_HAVE_CURVE448 */
    660              {
    661                  NULL_OID_DESCRIPTOR,
    662                  MBEDTLS_ECP_DP_NONE,
    663              },
    664          };
    665          
    666          FN_OID_TYPED_FROM_ASN1(oid_ecp_grp_algid_t, grp_id_algid, oid_ecp_grp_algid)

   \                                 In section .text, align 2, keep-with-next
    667          FN_OID_GET_ATTR1(mbedtls_oid_get_ec_grp_algid,
    668                           oid_ecp_grp_algid_t,
    669                           grp_id_algid,
    670                           mbedtls_ecp_group_id,
    671                           grp_id)
   \                     mbedtls_oid_get_ec_grp_algid: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460E             MOV      R6,R1
   \        0x4   0x.... 0x....      ADR.W    R5,oid_ecp_grp_algid
   \        0x8   0x0004             MOVS     R4,R0
   \        0xA   0x4629             MOV      R1,R5
   \        0xC   0xD102             BNE.N    ??mbedtls_oid_get_ec_grp_algid_0
   \        0xE   0xE00C             B.N      ??mbedtls_oid_get_ec_grp_algid_1
   \                     ??mbedtls_oid_get_ec_grp_algid_2: (+1)
   \       0x10   0x3514             ADDS     R5,R5,#+20
   \       0x12   0x4629             MOV      R1,R5
   \                     ??mbedtls_oid_get_ec_grp_algid_0: (+1)
   \       0x14   0x6808             LDR      R0,[R1, #+0]
   \       0x16   0xB140             CBZ.N    R0,??mbedtls_oid_get_ec_grp_algid_1
   \       0x18   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_18: (+1)
   \       0x1C   0xD1F8             BNE.N    ??mbedtls_oid_get_ec_grp_algid_2
   \       0x1E   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_7: (+1)
   \       0x22   0x2800             CMP      R0,#+0
   \       0x24   0xD1F4             BNE.N    ??mbedtls_oid_get_ec_grp_algid_2
   \       0x26   0xB105             CBZ.N    R5,??mbedtls_oid_get_ec_grp_algid_1
   \       0x28   0x....             B.N      ?Subroutine1
   \                     ??mbedtls_oid_get_ec_grp_algid_1: (+1)
   \       0x2A   0x....             B.N      ?Subroutine2

   \                                 In section .text, align 2, keep-with-next
    672          FN_OID_GET_OID_BY_ATTR1(mbedtls_oid_get_oid_by_ec_grp_algid,
    673                                  oid_ecp_grp_algid_t,
    674                                  oid_ecp_grp_algid,
    675                                  mbedtls_ecp_group_id,
    676                                  grp_id)
   \                     mbedtls_oid_get_oid_by_ec_grp_algid: (+1)
   \        0x0   0xB560             PUSH     {R5,R6,LR}
   \        0x2   0x.... 0x....      ADR.W    R6,oid_ecp_grp_algid
   \        0x6   0xE000             B.N      ??mbedtls_oid_get_oid_by_ec_grp_algid_0
   \                     ??mbedtls_oid_get_oid_by_ec_grp_algid_1: (+1)
   \        0x8   0x3614             ADDS     R6,R6,#+20
   \                     ??mbedtls_oid_get_oid_by_ec_grp_algid_0: (+1)
   \        0xA   0x6833             LDR      R3,[R6, #+0]
   \        0xC   0xB11B             CBZ.N    R3,??mbedtls_oid_get_oid_by_ec_grp_algid_2
   \        0xE   0x7C35             LDRB     R5,[R6, #+16]
   \       0x10   0x4285             CMP      R5,R0
   \       0x12   0xD1F9             BNE.N    ??mbedtls_oid_get_oid_by_ec_grp_algid_1
   \       0x14   0x....             B.N      ?Subroutine3
   \                     ??mbedtls_oid_get_oid_by_ec_grp_algid_2: (+1)
   \       0x16   0x....             B.N      ?Subroutine4
    677          #endif /* MBEDTLS_PK_HAVE_ECC_KEYS */
    678          
    679          #if defined(MBEDTLS_CIPHER_C)
    680          /*
    681           * For PKCS#5 PBES2 encryption algorithm
    682           */
    683          typedef struct {
    684              mbedtls_oid_descriptor_t    descriptor;
    685              mbedtls_cipher_type_t       cipher_alg;
    686          } oid_cipher_alg_t;
    687          

   \                                 In section .rodata, align 4
    688          static const oid_cipher_alg_t oid_cipher_alg[] =
   \                     oid_cipher_alg:
   \        0x0   0x....'....        DC32 ?_147, 5, ?_148, ?_149
   \              0x0000'0005  
   \              0x....'....  
   \              0x....'....
   \       0x10   0x21               DC8 33
   \       0x11                      DS8 3
   \       0x14   0x....'....        DC32 ?_150, 8, ?_151, ?_152
   \              0x0000'0008  
   \              0x....'....  
   \              0x....'....
   \       0x24   0x25               DC8 37
   \       0x25                      DS8 3
   \       0x28   0x0000'0000        DC32 0x0, 0, 0x0, 0x0
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000
   \       0x38   0x00               DC8 0
   \       0x39                      DS8 3
    689          {
    690              {
    691                  OID_DESCRIPTOR(MBEDTLS_OID_DES_CBC,              "desCBC",       "DES-CBC"),
    692                  MBEDTLS_CIPHER_DES_CBC,
    693              },
    694              {
    695                  OID_DESCRIPTOR(MBEDTLS_OID_DES_EDE3_CBC,         "des-ede3-cbc", "DES-EDE3-CBC"),
    696                  MBEDTLS_CIPHER_DES_EDE3_CBC,
    697              },
    698              {
    699                  NULL_OID_DESCRIPTOR,
    700                  MBEDTLS_CIPHER_NONE,
    701              },
    702          };
    703          
    704          FN_OID_TYPED_FROM_ASN1(oid_cipher_alg_t, cipher_alg, oid_cipher_alg)

   \                                 In section .text, align 2, keep-with-next
    705          FN_OID_GET_ATTR1(mbedtls_oid_get_cipher_alg,
    706                           oid_cipher_alg_t,
    707                           cipher_alg,
    708                           mbedtls_cipher_type_t,
    709                           cipher_alg)
   \                     mbedtls_oid_get_cipher_alg: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460E             MOV      R6,R1
   \        0x4   0x....             LDR.N    R5,??DataTable18_7
   \        0x6   0x0004             MOVS     R4,R0
   \        0x8   0x4629             MOV      R1,R5
   \        0xA   0xD102             BNE.N    ??mbedtls_oid_get_cipher_alg_0
   \        0xC   0xE00C             B.N      ??mbedtls_oid_get_cipher_alg_1
   \                     ??mbedtls_oid_get_cipher_alg_2: (+1)
   \        0xE   0x3514             ADDS     R5,R5,#+20
   \       0x10   0x4629             MOV      R1,R5
   \                     ??mbedtls_oid_get_cipher_alg_0: (+1)
   \       0x12   0x6808             LDR      R0,[R1, #+0]
   \       0x14   0xB140             CBZ.N    R0,??mbedtls_oid_get_cipher_alg_1
   \       0x16   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_19: (+1)
   \       0x1A   0xD1F8             BNE.N    ??mbedtls_oid_get_cipher_alg_2
   \       0x1C   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_8: (+1)
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD1F4             BNE.N    ??mbedtls_oid_get_cipher_alg_2
   \       0x24   0xB105             CBZ.N    R5,??mbedtls_oid_get_cipher_alg_1
   \       0x26   0x....             B.N      ?Subroutine1
   \                     ??mbedtls_oid_get_cipher_alg_1: (+1)
   \       0x28   0x....             B.N      ?Subroutine2
    710          #endif /* MBEDTLS_CIPHER_C */
    711          
    712          /*
    713           * For digestAlgorithm
    714           */
    715          typedef struct {
    716              mbedtls_oid_descriptor_t    descriptor;
    717              mbedtls_md_type_t           md_alg;
    718          } oid_md_alg_t;
    719          

   \                                 In section .rodata, align 4
    720          static const oid_md_alg_t oid_md_alg[] =
   \                     oid_md_alg:
   \        0x0   0x....'....        DC32 ?_153, 5, ?_154, ?_155
   \              0x0000'0005  
   \              0x....'....  
   \              0x....'....
   \       0x10   0x05               DC8 5
   \       0x11                      DS8 3
   \       0x14   0x....'....        DC32 ?_156, 9, ?_157, ?_158
   \              0x0000'0009  
   \              0x....'....  
   \              0x....'....
   \       0x24   0x08               DC8 8
   \       0x25                      DS8 3
   \       0x28   0x....'....        DC32 ?_159, 9, ?_160, ?_161
   \              0x0000'0009  
   \              0x....'....  
   \              0x....'....
   \       0x38   0x09               DC8 9
   \       0x39                      DS8 3
   \       0x3C   0x0000'0000        DC32 0x0, 0, 0x0, 0x0
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000
   \       0x4C   0x00               DC8 0
   \       0x4D                      DS8 3
    721          {
    722          #if defined(MBEDTLS_MD_CAN_MD5)
    723              {
    724                  OID_DESCRIPTOR(MBEDTLS_OID_DIGEST_ALG_MD5,       "id-md5",       "MD5"),
    725                  MBEDTLS_MD_MD5,
    726              },
    727          #endif
    728          #if defined(MBEDTLS_MD_CAN_SHA1)
    729              {
    730                  OID_DESCRIPTOR(MBEDTLS_OID_DIGEST_ALG_SHA1,      "id-sha1",      "SHA-1"),
    731                  MBEDTLS_MD_SHA1,
    732              },
    733          #endif
    734          #if defined(MBEDTLS_MD_CAN_SHA224)
    735              {
    736                  OID_DESCRIPTOR(MBEDTLS_OID_DIGEST_ALG_SHA224,    "id-sha224",    "SHA-224"),
    737                  MBEDTLS_MD_SHA224,
    738              },
    739          #endif
    740          #if defined(MBEDTLS_MD_CAN_SHA256)
    741              {
    742                  OID_DESCRIPTOR(MBEDTLS_OID_DIGEST_ALG_SHA256,    "id-sha256",    "SHA-256"),
    743                  MBEDTLS_MD_SHA256,
    744              },
    745          #endif
    746          #if defined(MBEDTLS_MD_CAN_SHA384)
    747              {
    748                  OID_DESCRIPTOR(MBEDTLS_OID_DIGEST_ALG_SHA384,    "id-sha384",    "SHA-384"),
    749                  MBEDTLS_MD_SHA384,
    750              },
    751          #endif
    752          #if defined(MBEDTLS_MD_CAN_SHA512)
    753              {
    754                  OID_DESCRIPTOR(MBEDTLS_OID_DIGEST_ALG_SHA512,    "id-sha512",    "SHA-512"),
    755                  MBEDTLS_MD_SHA512,
    756              },
    757          #endif
    758          #if defined(MBEDTLS_MD_CAN_RIPEMD160)
    759              {
    760                  OID_DESCRIPTOR(MBEDTLS_OID_DIGEST_ALG_RIPEMD160, "id-ripemd160", "RIPEMD-160"),
    761                  MBEDTLS_MD_RIPEMD160,
    762              },
    763          #endif
    764          #if defined(MBEDTLS_MD_CAN_SHA3_224)
    765              {
    766                  OID_DESCRIPTOR(MBEDTLS_OID_DIGEST_ALG_SHA3_224,    "id-sha3-224",    "SHA-3-224"),
    767                  MBEDTLS_MD_SHA3_224,
    768              },
    769          #endif
    770          #if defined(MBEDTLS_MD_CAN_SHA3_256)
    771              {
    772                  OID_DESCRIPTOR(MBEDTLS_OID_DIGEST_ALG_SHA3_256,    "id-sha3-256",    "SHA-3-256"),
    773                  MBEDTLS_MD_SHA3_256,
    774              },
    775          #endif
    776          #if defined(MBEDTLS_MD_CAN_SHA3_384)
    777              {
    778                  OID_DESCRIPTOR(MBEDTLS_OID_DIGEST_ALG_SHA3_384,    "id-sha3-384",    "SHA-3-384"),
    779                  MBEDTLS_MD_SHA3_384,
    780              },
    781          #endif
    782          #if defined(MBEDTLS_MD_CAN_SHA3_512)
    783              {
    784                  OID_DESCRIPTOR(MBEDTLS_OID_DIGEST_ALG_SHA3_512,    "id-sha3-512",    "SHA-3-512"),
    785                  MBEDTLS_MD_SHA3_512,
    786              },
    787          #endif
    788              {
    789                  NULL_OID_DESCRIPTOR,
    790                  MBEDTLS_MD_NONE,
    791              },
    792          };
    793          
    794          FN_OID_TYPED_FROM_ASN1(oid_md_alg_t, md_alg, oid_md_alg)

   \                                 In section .text, align 2, keep-with-next
    795          FN_OID_GET_ATTR1(mbedtls_oid_get_md_alg, oid_md_alg_t, md_alg, mbedtls_md_type_t, md_alg)
   \                     mbedtls_oid_get_md_alg: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460E             MOV      R6,R1
   \        0x4   0x....             LDR.N    R5,??DataTable18_8
   \        0x6   0x0004             MOVS     R4,R0
   \        0x8   0x4629             MOV      R1,R5
   \        0xA   0xD102             BNE.N    ??mbedtls_oid_get_md_alg_0
   \        0xC   0xE00C             B.N      ??mbedtls_oid_get_md_alg_1
   \                     ??mbedtls_oid_get_md_alg_2: (+1)
   \        0xE   0x3514             ADDS     R5,R5,#+20
   \       0x10   0x4629             MOV      R1,R5
   \                     ??mbedtls_oid_get_md_alg_0: (+1)
   \       0x12   0x6808             LDR      R0,[R1, #+0]
   \       0x14   0xB140             CBZ.N    R0,??mbedtls_oid_get_md_alg_1
   \       0x16   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_20: (+1)
   \       0x1A   0xD1F8             BNE.N    ??mbedtls_oid_get_md_alg_2
   \       0x1C   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_9: (+1)
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD1F4             BNE.N    ??mbedtls_oid_get_md_alg_2
   \       0x24   0xB105             CBZ.N    R5,??mbedtls_oid_get_md_alg_1
   \       0x26   0x....             B.N      ?Subroutine1
   \                     ??mbedtls_oid_get_md_alg_1: (+1)
   \       0x28   0x....             B.N      ?Subroutine2

   \                                 In section .text, align 2, keep-with-next
    796          FN_OID_GET_OID_BY_ATTR1(mbedtls_oid_get_oid_by_md,
    797                                  oid_md_alg_t,
    798                                  oid_md_alg,
    799                                  mbedtls_md_type_t,
    800                                  md_alg)
   \                     mbedtls_oid_get_oid_by_md: (+1)
   \        0x0   0xB560             PUSH     {R5,R6,LR}
   \        0x2   0x....             LDR.N    R6,??DataTable18_8
   \        0x4   0xE000             B.N      ??mbedtls_oid_get_oid_by_md_0
   \                     ??mbedtls_oid_get_oid_by_md_1: (+1)
   \        0x6   0x3614             ADDS     R6,R6,#+20
   \                     ??mbedtls_oid_get_oid_by_md_0: (+1)
   \        0x8   0x6833             LDR      R3,[R6, #+0]
   \        0xA   0xB11B             CBZ.N    R3,??mbedtls_oid_get_oid_by_md_2
   \        0xC   0x7C35             LDRB     R5,[R6, #+16]
   \        0xE   0x4285             CMP      R5,R0
   \       0x10   0xD1F9             BNE.N    ??mbedtls_oid_get_oid_by_md_1
   \       0x12   0x....             B.N      ?Subroutine3
   \                     ??mbedtls_oid_get_oid_by_md_2: (+1)
   \       0x14   0x....             B.N      ?Subroutine4
    801          
    802          /*
    803           * For HMAC digestAlgorithm
    804           */
    805          typedef struct {
    806              mbedtls_oid_descriptor_t    descriptor;
    807              mbedtls_md_type_t           md_hmac;
    808          } oid_md_hmac_t;
    809          

   \                                 In section .rodata, align 4
    810          static const oid_md_hmac_t oid_md_hmac[] =
   \                     oid_md_hmac:
   \        0x0   0x....'....        DC32 ?_162, 8, ?_163, ?_164
   \              0x0000'0008  
   \              0x....'....  
   \              0x....'....
   \       0x10   0x05               DC8 5
   \       0x11                      DS8 3
   \       0x14   0x....'....        DC32 ?_165, 8, ?_166, ?_167
   \              0x0000'0008  
   \              0x....'....  
   \              0x....'....
   \       0x24   0x08               DC8 8
   \       0x25                      DS8 3
   \       0x28   0x....'....        DC32 ?_168, 8, ?_169, ?_170
   \              0x0000'0008  
   \              0x....'....  
   \              0x....'....
   \       0x38   0x09               DC8 9
   \       0x39                      DS8 3
   \       0x3C   0x0000'0000        DC32 0x0, 0, 0x0, 0x0
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000
   \       0x4C   0x00               DC8 0
   \       0x4D                      DS8 3
    811          {
    812          #if defined(MBEDTLS_MD_CAN_SHA1)
    813              {
    814                  OID_DESCRIPTOR(MBEDTLS_OID_HMAC_SHA1,      "hmacSHA1",      "HMAC-SHA-1"),
    815                  MBEDTLS_MD_SHA1,
    816              },
    817          #endif /* MBEDTLS_MD_CAN_SHA1 */
    818          #if defined(MBEDTLS_MD_CAN_SHA224)
    819              {
    820                  OID_DESCRIPTOR(MBEDTLS_OID_HMAC_SHA224,    "hmacSHA224",    "HMAC-SHA-224"),
    821                  MBEDTLS_MD_SHA224,
    822              },
    823          #endif /* MBEDTLS_MD_CAN_SHA224 */
    824          #if defined(MBEDTLS_MD_CAN_SHA256)
    825              {
    826                  OID_DESCRIPTOR(MBEDTLS_OID_HMAC_SHA256,    "hmacSHA256",    "HMAC-SHA-256"),
    827                  MBEDTLS_MD_SHA256,
    828              },
    829          #endif /* MBEDTLS_MD_CAN_SHA256 */
    830          #if defined(MBEDTLS_MD_CAN_SHA384)
    831              {
    832                  OID_DESCRIPTOR(MBEDTLS_OID_HMAC_SHA384,    "hmacSHA384",    "HMAC-SHA-384"),
    833                  MBEDTLS_MD_SHA384,
    834              },
    835          #endif /* MBEDTLS_MD_CAN_SHA384 */
    836          #if defined(MBEDTLS_MD_CAN_SHA512)
    837              {
    838                  OID_DESCRIPTOR(MBEDTLS_OID_HMAC_SHA512,    "hmacSHA512",    "HMAC-SHA-512"),
    839                  MBEDTLS_MD_SHA512,
    840              },
    841          #endif /* MBEDTLS_MD_CAN_SHA512 */
    842          #if defined(MBEDTLS_MD_CAN_SHA3_224)
    843              {
    844                  OID_DESCRIPTOR(MBEDTLS_OID_HMAC_SHA3_224,    "hmacSHA3-224",    "HMAC-SHA3-224"),
    845                  MBEDTLS_MD_SHA3_224,
    846              },
    847          #endif /* MBEDTLS_MD_CAN_SHA3_224 */
    848          #if defined(MBEDTLS_MD_CAN_SHA3_256)
    849              {
    850                  OID_DESCRIPTOR(MBEDTLS_OID_HMAC_SHA3_256,    "hmacSHA3-256",    "HMAC-SHA3-256"),
    851                  MBEDTLS_MD_SHA3_256,
    852              },
    853          #endif /* MBEDTLS_MD_CAN_SHA3_256 */
    854          #if defined(MBEDTLS_MD_CAN_SHA3_384)
    855              {
    856                  OID_DESCRIPTOR(MBEDTLS_OID_HMAC_SHA3_384,    "hmacSHA3-384",    "HMAC-SHA3-384"),
    857                  MBEDTLS_MD_SHA3_384,
    858              },
    859          #endif /* MBEDTLS_MD_CAN_SHA3_384 */
    860          #if defined(MBEDTLS_MD_CAN_SHA3_512)
    861              {
    862                  OID_DESCRIPTOR(MBEDTLS_OID_HMAC_SHA3_512,    "hmacSHA3-512",    "HMAC-SHA3-512"),
    863                  MBEDTLS_MD_SHA3_512,
    864              },
    865          #endif /* MBEDTLS_MD_CAN_SHA3_512 */
    866          #if defined(MBEDTLS_MD_CAN_RIPEMD160)
    867              {
    868                  OID_DESCRIPTOR(MBEDTLS_OID_HMAC_RIPEMD160,    "hmacRIPEMD160",    "HMAC-RIPEMD160"),
    869                  MBEDTLS_MD_RIPEMD160,
    870              },
    871          #endif /* MBEDTLS_MD_CAN_RIPEMD160 */
    872              {
    873                  NULL_OID_DESCRIPTOR,
    874                  MBEDTLS_MD_NONE,
    875              },
    876          };
    877          
    878          FN_OID_TYPED_FROM_ASN1(oid_md_hmac_t, md_hmac, oid_md_hmac)

   \                                 In section .text, align 2, keep-with-next
    879          FN_OID_GET_ATTR1(mbedtls_oid_get_md_hmac, oid_md_hmac_t, md_hmac, mbedtls_md_type_t, md_hmac)
   \                     mbedtls_oid_get_md_hmac: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460E             MOV      R6,R1
   \        0x4   0x....             LDR.N    R5,??DataTable18_9
   \        0x6   0x0004             MOVS     R4,R0
   \        0x8   0x4629             MOV      R1,R5
   \        0xA   0xD102             BNE.N    ??mbedtls_oid_get_md_hmac_0
   \        0xC   0xE00C             B.N      ??mbedtls_oid_get_md_hmac_1
   \                     ??mbedtls_oid_get_md_hmac_2: (+1)
   \        0xE   0x3514             ADDS     R5,R5,#+20
   \       0x10   0x4629             MOV      R1,R5
   \                     ??mbedtls_oid_get_md_hmac_0: (+1)
   \       0x12   0x6808             LDR      R0,[R1, #+0]
   \       0x14   0xB140             CBZ.N    R0,??mbedtls_oid_get_md_hmac_1
   \       0x16   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_21: (+1)
   \       0x1A   0xD1F8             BNE.N    ??mbedtls_oid_get_md_hmac_2
   \       0x1C   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_10: (+1)
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD1F4             BNE.N    ??mbedtls_oid_get_md_hmac_2
   \       0x24   0xB105             CBZ.N    R5,??mbedtls_oid_get_md_hmac_1
   \       0x26   0x....             B.N      ?Subroutine1
   \                     ??mbedtls_oid_get_md_hmac_1: (+1)
   \       0x28   0x....             B.N      ?Subroutine2
    880          
    881          #if defined(MBEDTLS_PKCS12_C)
    882          /*
    883           * For PKCS#12 PBEs
    884           */
    885          typedef struct {
    886              mbedtls_oid_descriptor_t    descriptor;
    887              mbedtls_md_type_t           md_alg;
    888              mbedtls_cipher_type_t       cipher_alg;
    889          } oid_pkcs12_pbe_alg_t;
    890          
    891          static const oid_pkcs12_pbe_alg_t oid_pkcs12_pbe_alg[] =
    892          {
    893              {
    894                  OID_DESCRIPTOR(MBEDTLS_OID_PKCS12_PBE_SHA1_DES3_EDE_CBC,
    895                                 "pbeWithSHAAnd3-KeyTripleDES-CBC",
    896                                 "PBE with SHA1 and 3-Key 3DES"),
    897                  MBEDTLS_MD_SHA1,      MBEDTLS_CIPHER_DES_EDE3_CBC,
    898              },
    899              {
    900                  OID_DESCRIPTOR(MBEDTLS_OID_PKCS12_PBE_SHA1_DES2_EDE_CBC,
    901                                 "pbeWithSHAAnd2-KeyTripleDES-CBC",
    902                                 "PBE with SHA1 and 2-Key 3DES"),
    903                  MBEDTLS_MD_SHA1,      MBEDTLS_CIPHER_DES_EDE_CBC,
    904              },
    905              {
    906                  NULL_OID_DESCRIPTOR,
    907                  MBEDTLS_MD_NONE, MBEDTLS_CIPHER_NONE,
    908              },
    909          };
    910          
    911          FN_OID_TYPED_FROM_ASN1(oid_pkcs12_pbe_alg_t, pkcs12_pbe_alg, oid_pkcs12_pbe_alg)
    912          FN_OID_GET_ATTR2(mbedtls_oid_get_pkcs12_pbe_alg,
    913                           oid_pkcs12_pbe_alg_t,
    914                           pkcs12_pbe_alg,
    915                           mbedtls_md_type_t,
    916                           md_alg,
    917                           mbedtls_cipher_type_t,
    918                           cipher_alg)
    919          #endif /* MBEDTLS_PKCS12_C */
    920          
    921          /* Return the x.y.z.... style numeric string for the given OID */

   \                                 In section .text, align 2, keep-with-next
    922          int mbedtls_oid_get_numeric_string(char *buf, size_t size,
    923                                             const mbedtls_asn1_buf *oid)
    924          {
   \                     mbedtls_oid_get_numeric_string: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
    925              int ret = MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED;
    926              char *p = buf;
    927              size_t n = size;
    928              unsigned int value = 0;
   \        0x4   0x2300             MOVS     R3,#+0
   \        0x6   0x460D             MOV      R5,R1
    929          
    930              if (size > INT_MAX) {
   \        0x8   0xF1B1 0x4F00      CMP      R1,#+2147483648
   \        0xC   0xBF28             IT       CS
   \        0xE   0xF06F 0x0063      MVNCS    R0,#+99
    931                  /* Avoid overflow computing return value */
    932                  return MBEDTLS_ERR_ASN1_INVALID_LENGTH;
   \       0x12   0xD24B             BCS.N    ??mbedtls_oid_get_numeric_string_0
    933              }
    934          
    935              if (oid->len <= 0) {
   \       0x14   0x6854             LDR      R4,[R2, #+4]
   \       0x16   0xF06F 0x0B5F      MVN      R11,#+95
   \       0x1A   0x2C00             CMP      R4,#+0
   \       0x1C   0xD042             BEQ.N    ??mbedtls_oid_get_numeric_string_1
    936                  /* OID must not be empty */
    937                  return MBEDTLS_ERR_ASN1_OUT_OF_DATA;
    938              }
    939          
    940              for (size_t i = 0; i < oid->len; i++) {
   \       0x1E   0x2600             MOVS     R6,#+0
   \       0x20   0x....             ADR.N    R4,??DataTable18
   \       0x22   0x.... 0x....      ADR.W    R9,?_171
   \       0x26   0x468A             MOV      R10,R1
   \       0x28   0x4617             MOV      R7,R2
   \       0x2A   0x4680             MOV      R8,R0
   \       0x2C   0xE01B             B.N      ??mbedtls_oid_get_numeric_string_2
    941                  /* Prevent overflow in value. */
    942                  if (value > (UINT_MAX >> 7)) {
    943                      return MBEDTLS_ERR_ASN1_INVALID_DATA;
    944                  }
    945                  if ((value == 0) && ((oid->p[i]) == 0x80)) {
    946                      /* Overlong encoding is not allowed */
    947                      return MBEDTLS_ERR_ASN1_INVALID_DATA;
    948                  }
    949          
    950                  value <<= 7;
    951                  value |= oid->p[i] & 0x7F;
   \                     ??mbedtls_oid_get_numeric_string_3: (+1)
   \       0x2E   0x4618             MOV      R0,R3
   \       0x30   0xF001 0x037F      AND      R3,R1,#0x7F
   \       0x34   0xEA43 0x13C0      ORR      R3,R3,R0, LSL #+7
    952          
    953                  if (!(oid->p[i] & 0x80)) {
   \       0x38   0x0609             LSLS     R1,R1,#+24
   \       0x3A   0xD413             BMI.N    ??mbedtls_oid_get_numeric_string_4
    954                      /* Last byte */
    955                      if (n == size) {
   \       0x3C   0x4555             CMP      R5,R10
   \       0x3E   0xD127             BNE.N    ??mbedtls_oid_get_numeric_string_5
    956                          int component1;
    957                          unsigned int component2;
    958                          /* First subidentifier contains first two OID components */
    959                          if (value >= 80) {
   \       0x40   0x2B50             CMP      R3,#+80
   \       0x42   0xD31F             BCC.N    ??mbedtls_oid_get_numeric_string_6
    960                              component1 = '2';
   \       0x44   0x2032             MOVS     R0,#+50
    961                              component2 = value - 80;
   \       0x46   0x3B50             SUBS     R3,R3,#+80
    962                          } else if (value >= 40) {
    963                              component1 = '1';
    964                              component2 = value - 40;
    965                          } else {
    966                              component1 = '0';
    967                              component2 = value;
    968                          }
    969                          ret = mbedtls_snprintf(p, n, "%c.%u", component1, component2);
   \                     ??mbedtls_oid_get_numeric_string_7: (+1)
   \       0x48   0x9300             STR      R3,[SP, #+0]
   \       0x4A   0x4603             MOV      R3,R0
   \       0x4C   0x464A             MOV      R2,R9
   \       0x4E   0x4629             MOV      R1,R5
   \       0x50   0x4640             MOV      R0,R8
   \       0x52   0x.... 0x....      BL       snprintf
    970                      } else {
    971                          ret = mbedtls_snprintf(p, n, ".%u", value);
    972                      }
    973                      if (ret < 2 || (size_t) ret >= n) {
   \                     ??mbedtls_oid_get_numeric_string_8: (+1)
   \       0x56   0x2802             CMP      R0,#+2
   \       0x58   0xDB20             BLT.N    ??mbedtls_oid_get_numeric_string_9
   \       0x5A   0x42A8             CMP      R0,R5
   \       0x5C   0xD21E             BCS.N    ??mbedtls_oid_get_numeric_string_9
    974                          return MBEDTLS_ERR_OID_BUF_TOO_SMALL;
    975                      }
    976                      n -= (size_t) ret;
   \       0x5E   0x1A2D             SUBS     R5,R5,R0
    977                      p += ret;
   \       0x60   0x4480             ADD      R8,R8,R0
    978                      value = 0;
   \       0x62   0x2300             MOVS     R3,#+0
   \                     ??mbedtls_oid_get_numeric_string_4: (+1)
   \       0x64   0x1C76             ADDS     R6,R6,#+1
   \                     ??mbedtls_oid_get_numeric_string_2: (+1)
   \       0x66   0x6878             LDR      R0,[R7, #+4]
   \       0x68   0x4286             CMP      R6,R0
   \       0x6A   0xD21A             BCS.N    ??mbedtls_oid_get_numeric_string_10
   \       0x6C   0xF1B3 0x7F00      CMP      R3,#+33554432
   \       0x70   0xD205             BCS.N    ??mbedtls_oid_get_numeric_string_11
   \       0x72   0x68B8             LDR      R0,[R7, #+8]
   \       0x74   0x2B00             CMP      R3,#+0
   \       0x76   0x5D81             LDRB     R1,[R0, R6]
   \       0x78   0xBF08             IT       EQ
   \       0x7A   0x2980             CMPEQ    R1,#+128
   \       0x7C   0xD1D7             BNE.N    ??mbedtls_oid_get_numeric_string_3
   \                     ??mbedtls_oid_get_numeric_string_11: (+1)
   \       0x7E   0xF06F 0x0067      MVN      R0,#+103
   \       0x82   0xE013             B.N      ??mbedtls_oid_get_numeric_string_0
   \                     ??mbedtls_oid_get_numeric_string_6: (+1)
   \       0x84   0x2B28             CMP      R3,#+40
   \       0x86   0xBF32             ITEE     CC
   \       0x88   0x2030             MOVCC    R0,#+48
   \       0x8A   0x2031             MOVCS    R0,#+49
   \       0x8C   0x3B28             SUBCS    R3,R3,#+40
   \       0x8E   0xE7DB             B.N      ??mbedtls_oid_get_numeric_string_7
   \                     ??mbedtls_oid_get_numeric_string_5: (+1)
   \       0x90   0x4622             MOV      R2,R4
   \       0x92   0x4629             MOV      R1,R5
   \       0x94   0x4640             MOV      R0,R8
   \       0x96   0x.... 0x....      BL       snprintf
   \       0x9A   0xE7DC             B.N      ??mbedtls_oid_get_numeric_string_8
   \                     ??mbedtls_oid_get_numeric_string_9: (+1)
   \       0x9C   0xF06F 0x000A      MVN      R0,#+10
   \       0xA0   0xE004             B.N      ??mbedtls_oid_get_numeric_string_0
    979                  }
    980              }
    981          
    982              if (value != 0) {
   \                     ??mbedtls_oid_get_numeric_string_10: (+1)
   \       0xA2   0xB10B             CBZ.N    R3,??mbedtls_oid_get_numeric_string_12
    983                  /* Unterminated subidentifier */
    984                  return MBEDTLS_ERR_ASN1_OUT_OF_DATA;
   \                     ??mbedtls_oid_get_numeric_string_1: (+1)
   \       0xA4   0x4658             MOV      R0,R11
   \       0xA6   0xE001             B.N      ??mbedtls_oid_get_numeric_string_0
    985              }
    986          
    987              return (int) (size - n);
   \                     ??mbedtls_oid_get_numeric_string_12: (+1)
   \       0xA8   0xEBAA 0x0005      SUB      R0,R10,R5
   \                     ??mbedtls_oid_get_numeric_string_0: (+1)
   \       0xAC   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}
    988          }
    989          

   \                                 In section .text, align 2, keep-with-next
    990          static int oid_parse_number(unsigned int *num, const char **p, const char *bound)
    991          {
   \                     oid_parse_number: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
    992              int ret = MBEDTLS_ERR_ASN1_INVALID_DATA;
   \        0x2   0xF06F 0x0367      MVN      R3,#+103
    993          
    994              *num = 0;
   \        0x6   0x2500             MOVS     R5,#+0
   \        0x8   0x461C             MOV      R4,R3
   \        0xA   0x6005             STR      R5,[R0, #+0]
   \        0xC   0xE00B             B.N      ??oid_parse_number_0
    995          
    996              while (*p < bound && **p >= '0' && **p <= '9') {
    997                  ret = 0;
    998                  if (*num > (UINT_MAX / 10)) {
    999                      return MBEDTLS_ERR_ASN1_INVALID_DATA;
   1000                  }
   1001                  *num *= 10;
   1002                  *num += **p - '0';
   \                     ??oid_parse_number_1: (+1)
   \        0xE   0x260A             MOVS     R6,#+10
   \       0x10   0xFB06 0xFC07      MUL      R12,R6,R7
   \       0x14   0xF8C0 0xC000      STR      R12,[R0, #+0]
   \       0x18   0xF815 0x7B01      LDRB     R7,[R5], #+1
   \       0x1C   0x3F30             SUBS     R7,R7,#+48
   \       0x1E   0x44BC             ADD      R12,R7,R12
   \       0x20   0xF8C0 0xC000      STR      R12,[R0, #+0]
   1003                  (*p)++;
   \       0x24   0x600D             STR      R5,[R1, #+0]
   \                     ??oid_parse_number_0: (+1)
   \       0x26   0x680D             LDR      R5,[R1, #+0]
   \       0x28   0x4295             CMP      R5,R2
   \       0x2A   0xBF3E             ITTT     CC
   \       0x2C   0x782E             LDRBCC   R6,[R5, #+0]
   \       0x2E   0x3E30             SUBCC    R6,R6,#+48
   \       0x30   0x2E0A             CMPCC    R6,#+10
   \       0x32   0xD206             BCS.N    ??oid_parse_number_2
   \       0x34   0x6807             LDR      R7,[R0, #+0]
   \       0x36   0x2400             MOVS     R4,#+0
   \       0x38   0x....             LDR.N    R6,??DataTable18_10
   \       0x3A   0x42B7             CMP      R7,R6
   \       0x3C   0xD3E7             BCC.N    ??oid_parse_number_1
   \       0x3E   0x4618             MOV      R0,R3
   \       0x40   0xBDF0             POP      {R4-R7,PC}
   1004              }
   1005              return ret;
   \                     ??oid_parse_number_2: (+1)
   \       0x42   0x4620             MOV      R0,R4
   \       0x44   0xBDF0             POP      {R4-R7,PC}
   1006          }
   1007          
   1008          static size_t oid_subidentifier_num_bytes(unsigned int value)
   1009          {
   1010              size_t num_bytes = 0;
   1011          
   1012              do {
   1013                  value >>= 7;
   1014                  num_bytes++;
   1015              } while (value != 0);
   1016          
   1017              return num_bytes;
   1018          }
   1019          

   \                                 In section .text, align 2, keep-with-next
   1020          static int oid_subidentifier_encode_into(unsigned char **p,
   1021                                                   unsigned char *bound,
   1022                                                   unsigned int value)
   1023          {
   \                     oid_subidentifier_encode_into: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0x460B             MOV      R3,R1
   1024              size_t num_bytes = oid_subidentifier_num_bytes(value);
   \        0x4   0x4611             MOV      R1,R2
   \        0x6   0x2400             MOVS     R4,#+0
   \                     ??oid_subidentifier_encode_into_0: (+1)
   \        0x8   0x09C9             LSRS     R1,R1,#+7
   \        0xA   0xF104 0x0401      ADD      R4,R4,#+1
   \        0xE   0xD1FB             BNE.N    ??oid_subidentifier_encode_into_0
   1025          
   1026              if ((size_t) (bound - *p) < num_bytes) {
   \       0x10   0x6805             LDR      R5,[R0, #+0]
   \       0x12   0x1B5B             SUBS     R3,R3,R5
   \       0x14   0x42A3             CMP      R3,R4
   \       0x16   0xD202             BCS.N    ??oid_subidentifier_encode_into_1
   1027                  return MBEDTLS_ERR_OID_BUF_TOO_SMALL;
   \       0x18   0xF06F 0x000A      MVN      R0,#+10
   \       0x1C   0xBDF0             POP      {R4-R7,PC}
   1028              }
   1029              (*p)[num_bytes - 1] = (unsigned char) (value & 0x7f);
   \                     ??oid_subidentifier_encode_into_1: (+1)
   \       0x1E   0xF002 0x037F      AND      R3,R2,#0x7F
   \       0x22   0x4425             ADD      R5,R5,R4
   \       0x24   0xF805 0x3C01      STRB     R3,[R5, #-1]
   1030              value >>= 7;
   \       0x28   0x09D2             LSRS     R2,R2,#+7
   1031          
   1032              for (size_t i = 2; i <= num_bytes; i++) {
   \       0x2A   0x2702             MOVS     R7,#+2
   \       0x2C   0xE005             B.N      ??oid_subidentifier_encode_into_2
   1033                  (*p)[num_bytes - i] = 0x80 | (unsigned char) (value & 0x7f);
   \                     ??oid_subidentifier_encode_into_3: (+1)
   \       0x2E   0xF042 0x0380      ORR      R3,R2,#0x80
   \       0x32   0x1BE5             SUBS     R5,R4,R7
   \       0x34   0x5573             STRB     R3,[R6, R5]
   1034                  value >>= 7;
   \       0x36   0x09D2             LSRS     R2,R2,#+7
   1035              }
   \       0x38   0x1C7F             ADDS     R7,R7,#+1
   \                     ??oid_subidentifier_encode_into_2: (+1)
   \       0x3A   0x6806             LDR      R6,[R0, #+0]
   \       0x3C   0x42BC             CMP      R4,R7
   \       0x3E   0xD2F6             BCS.N    ??oid_subidentifier_encode_into_3
   1036              *p += num_bytes;
   \       0x40   0x1931             ADDS     R1,R6,R4
   \       0x42   0x6001             STR      R1,[R0, #+0]
   1037          
   1038              return 0;
   \       0x44   0x2000             MOVS     R0,#+0
   \       0x46   0xBDF0             POP      {R4-R7,PC}
   1039          }
   1040          
   1041          /* Return the OID for the given x.y.z.... style numeric string  */

   \                                 In section .text, align 2, keep-with-next
   1042          int mbedtls_oid_from_numeric_string(mbedtls_asn1_buf *oid,
   1043                                              const char *oid_str, size_t size)
   1044          {
   \                     mbedtls_oid_from_numeric_string: (+1)
   \        0x0   0xE92D 0x47F8      PUSH     {R3-R10,LR}
   \        0x4   0xB085             SUB      SP,SP,#+20
   \        0x6   0x460F             MOV      R7,R1
   \        0x8   0x4691             MOV      R9,R2
   1045              int ret = MBEDTLS_ERR_ASN1_INVALID_DATA;
   1046              const char *str_ptr = oid_str;
   \        0xA   0x9700             STR      R7,[SP, #+0]
   1047              const char *str_bound = oid_str + size;
   1048              unsigned int val = 0;
   \        0xC   0x2200             MOVS     R2,#+0
   \        0xE   0x9203             STR      R2,[SP, #+12]
   1049              unsigned int component1, component2;
   1050              size_t encoded_len;
   1051              unsigned char *resized_mem;
   1052          
   1053              /* Count the number of dots to get a worst-case allocation size. */
   1054              size_t num_dots = 0;
   \       0x10   0x2400             MOVS     R4,#+0
   1055              for (size_t i = 0; i < size; i++) {
   \       0x12   0xE004             B.N      ??mbedtls_oid_from_numeric_string_0
   1056                  if (oid_str[i] == '.') {
   \                     ??mbedtls_oid_from_numeric_string_1: (+1)
   \       0x14   0x5CB9             LDRB     R1,[R7, R2]
   \       0x16   0x292E             CMP      R1,#+46
   \       0x18   0xBF08             IT       EQ
   \       0x1A   0x1C64             ADDEQ    R4,R4,#+1
   1057                      num_dots++;
   1058                  }
   1059              }
   \       0x1C   0x1C52             ADDS     R2,R2,#+1
   \                     ??mbedtls_oid_from_numeric_string_0: (+1)
   \       0x1E   0x454A             CMP      R2,R9
   \       0x20   0xD3F8             BCC.N    ??mbedtls_oid_from_numeric_string_1
   1060              /* Allocate maximum possible required memory:
   1061               * There are (num_dots + 1) integer components, but the first 2 share the
   1062               * same subidentifier, so we only need num_dots subidentifiers maximum. */
   1063              if (num_dots == 0 || (num_dots > MBEDTLS_OID_MAX_COMPONENTS - 1)) {
   \       0x22   0xF06F 0x0867      MVN      R8,#+103
   \       0x26   0xB10C             CBZ.N    R4,??mbedtls_oid_from_numeric_string_2
   \       0x28   0x2C80             CMP      R4,#+128
   \       0x2A   0xD301             BCC.N    ??mbedtls_oid_from_numeric_string_3
   1064                  return MBEDTLS_ERR_ASN1_INVALID_DATA;
   \                     ??mbedtls_oid_from_numeric_string_2: (+1)
   \       0x2C   0x4640             MOV      R0,R8
   \       0x2E   0xE06C             B.N      ??mbedtls_oid_from_numeric_string_4
   1065              }
   \                     ??mbedtls_oid_from_numeric_string_3: (+1)
   \       0x30   0x4606             MOV      R6,R0
   1066              /* Each byte can store 7 bits, calculate number of bytes for a
   1067               * subidentifier:
   1068               *
   1069               * bytes = ceil(subidentifer_size * 8 / 7)
   1070               */
   1071              size_t bytes_per_subidentifier = (((sizeof(unsigned int) * 8) - 1) / 7)
   1072                                               + 1;
   1073              size_t max_possible_bytes = num_dots * bytes_per_subidentifier;
   \       0x32   0xEB04 0x0484      ADD      R4,R4,R4, LSL #+2
   1074              oid->p = mbedtls_calloc(max_possible_bytes, 1);
   \       0x36   0x2101             MOVS     R1,#+1
   \       0x38   0x4620             MOV      R0,R4
   \       0x3A   0x.... 0x....      BL       sl_calloc
   \       0x3E   0x60B0             STR      R0,[R6, #+8]
   1075              if (oid->p == NULL) {
   \       0x40   0xF06F 0x0A69      MVN      R10,#+105
   \       0x44   0xB908             CBNZ.N   R0,??mbedtls_oid_from_numeric_string_5
   1076                  return MBEDTLS_ERR_ASN1_ALLOC_FAILED;
   \       0x46   0x4650             MOV      R0,R10
   \       0x48   0xE05F             B.N      ??mbedtls_oid_from_numeric_string_4
   1077              }
   1078              unsigned char *out_ptr = oid->p;
   \                     ??mbedtls_oid_from_numeric_string_5: (+1)
   \       0x4A   0x9004             STR      R0,[SP, #+16]
   1079              unsigned char *out_bound = oid->p + max_possible_bytes;
   \       0x4C   0x68B0             LDR      R0,[R6, #+8]
   1080          
   1081              ret = oid_parse_number(&component1, &str_ptr, str_bound);
   \       0x4E   0x444F             ADD      R7,R7,R9
   \       0x50   0x463A             MOV      R2,R7
   \       0x52   0x1905             ADDS     R5,R0,R4
   \       0x54   0x4669             MOV      R1,SP
   \       0x56   0xA802             ADD      R0,SP,#+8
   \       0x58   0x.... 0x....      BL       oid_parse_number
   \       0x5C   0x0004             MOVS     R4,R0
   1082              if (ret != 0) {
   \       0x5E   0xD14D             BNE.N    ??mbedtls_oid_from_numeric_string_6
   1083                  goto error;
   1084              }
   1085              if (component1 > 2) {
   \       0x60   0x9802             LDR      R0,[SP, #+8]
   \       0x62   0x2802             CMP      R0,#+2
   \       0x64   0xD849             BHI.N    ??mbedtls_oid_from_numeric_string_7
   1086                  /* First component can't be > 2 */
   1087                  ret = MBEDTLS_ERR_ASN1_INVALID_DATA;
   1088                  goto error;
   1089              }
   1090              if (str_ptr >= str_bound || *str_ptr != '.') {
   \       0x66   0x9800             LDR      R0,[SP, #+0]
   \       0x68   0x42B8             CMP      R0,R7
   \       0x6A   0xD246             BCS.N    ??mbedtls_oid_from_numeric_string_7
   \       0x6C   0x4601             MOV      R1,R0
   \       0x6E   0x7808             LDRB     R0,[R1, #+0]
   \       0x70   0x282E             CMP      R0,#+46
   \       0x72   0xD142             BNE.N    ??mbedtls_oid_from_numeric_string_7
   1091                  ret = MBEDTLS_ERR_ASN1_INVALID_DATA;
   1092                  goto error;
   1093              }
   1094              str_ptr++;
   \       0x74   0x1C48             ADDS     R0,R1,#+1
   \       0x76   0x9000             STR      R0,[SP, #+0]
   1095          
   1096              ret = oid_parse_number(&component2, &str_ptr, str_bound);
   \       0x78   0x463A             MOV      R2,R7
   \       0x7A   0x4669             MOV      R1,SP
   \       0x7C   0xA801             ADD      R0,SP,#+4
   \       0x7E   0x.... 0x....      BL       oid_parse_number
   \       0x82   0x0004             MOVS     R4,R0
   1097              if (ret != 0) {
   \       0x84   0xD13A             BNE.N    ??mbedtls_oid_from_numeric_string_6
   1098                  goto error;
   1099              }
   1100              if ((component1 < 2) && (component2 > 39)) {
   \       0x86   0x9802             LDR      R0,[SP, #+8]
   \       0x88   0x2801             CMP      R0,#+1
   \       0x8A   0xD802             BHI.N    ??mbedtls_oid_from_numeric_string_8
   \       0x8C   0x9801             LDR      R0,[SP, #+4]
   \       0x8E   0x2828             CMP      R0,#+40
   \       0x90   0xD233             BCS.N    ??mbedtls_oid_from_numeric_string_7
   1101                  /* Root nodes 0 and 1 may have up to 40 children, numbered 0-39 */
   1102                  ret = MBEDTLS_ERR_ASN1_INVALID_DATA;
   1103                  goto error;
   1104              }
   1105              if (str_ptr < str_bound) {
   \                     ??mbedtls_oid_from_numeric_string_8: (+1)
   \       0x92   0x9900             LDR      R1,[SP, #+0]
   \       0x94   0x42B9             CMP      R1,R7
   \       0x96   0xD205             BCS.N    ??mbedtls_oid_from_numeric_string_9
   1106                  if (*str_ptr == '.') {
   \       0x98   0x4608             MOV      R0,R1
   \       0x9A   0x7801             LDRB     R1,[R0, #+0]
   \       0x9C   0x292E             CMP      R1,#+46
   \       0x9E   0xD12C             BNE.N    ??mbedtls_oid_from_numeric_string_7
   1107                      str_ptr++;
   \       0xA0   0x1C40             ADDS     R0,R0,#+1
   \       0xA2   0x9000             STR      R0,[SP, #+0]
   1108                  } else {
   1109                      ret = MBEDTLS_ERR_ASN1_INVALID_DATA;
   1110                      goto error;
   1111                  }
   1112              }
   1113          
   1114              if (component2 > (UINT_MAX - (component1 * 40))) {
   \                     ??mbedtls_oid_from_numeric_string_9: (+1)
   \       0xA4   0x9902             LDR      R1,[SP, #+8]
   \       0xA6   0x2228             MOVS     R2,#+40
   \       0xA8   0xF04F 0x30FF      MOV      R0,#+4294967295
   \       0xAC   0x434A             MULS     R2,R2,R1
   \       0xAE   0x9901             LDR      R1,[SP, #+4]
   \       0xB0   0x1A80             SUBS     R0,R0,R2
   \       0xB2   0x4288             CMP      R0,R1
   \       0xB4   0xD321             BCC.N    ??mbedtls_oid_from_numeric_string_7
   1115                  ret = MBEDTLS_ERR_ASN1_INVALID_DATA;
   1116                  goto error;
   1117              }
   1118              ret = oid_subidentifier_encode_into(&out_ptr, out_bound,
   1119                                                  (component1 * 40) + component2);
   \       0xB6   0x188A             ADDS     R2,R1,R2
   \       0xB8   0x4629             MOV      R1,R5
   \       0xBA   0xA804             ADD      R0,SP,#+16
   \       0xBC   0x.... 0x....      BL       oid_subidentifier_encode_into
   \       0xC0   0x0004             MOVS     R4,R0
   1120              if (ret != 0) {
   \       0xC2   0xD11B             BNE.N    ??mbedtls_oid_from_numeric_string_6
   1121                  goto error;
   1122              }
   1123          
   1124              while (str_ptr < str_bound) {
   \                     ??mbedtls_oid_from_numeric_string_10: (+1)
   \       0xC4   0x9800             LDR      R0,[SP, #+0]
   \       0xC6   0x42B8             CMP      R0,R7
   \       0xC8   0xD222             BCS.N    ??mbedtls_oid_from_numeric_string_11
   1125                  ret = oid_parse_number(&val, &str_ptr, str_bound);
   \       0xCA   0x463A             MOV      R2,R7
   \       0xCC   0x4669             MOV      R1,SP
   \       0xCE   0xA803             ADD      R0,SP,#+12
   \       0xD0   0x.... 0x....      BL       oid_parse_number
   \       0xD4   0x0004             MOVS     R4,R0
   1126                  if (ret != 0) {
   \       0xD6   0xD111             BNE.N    ??mbedtls_oid_from_numeric_string_6
   1127                      goto error;
   1128                  }
   1129                  if (str_ptr < str_bound) {
   \       0xD8   0x9800             LDR      R0,[SP, #+0]
   \       0xDA   0x42B8             CMP      R0,R7
   \       0xDC   0xD205             BCS.N    ??mbedtls_oid_from_numeric_string_12
   1130                      if (*str_ptr == '.') {
   \       0xDE   0x4601             MOV      R1,R0
   \       0xE0   0x7808             LDRB     R0,[R1, #+0]
   \       0xE2   0x282E             CMP      R0,#+46
   \       0xE4   0xD109             BNE.N    ??mbedtls_oid_from_numeric_string_7
   1131                          str_ptr++;
   \       0xE6   0x1C48             ADDS     R0,R1,#+1
   \       0xE8   0x9000             STR      R0,[SP, #+0]
   1132                      } else {
   1133                          ret = MBEDTLS_ERR_ASN1_INVALID_DATA;
   1134                          goto error;
   1135                      }
   1136                  }
   1137          
   1138                  ret = oid_subidentifier_encode_into(&out_ptr, out_bound, val);
   \                     ??mbedtls_oid_from_numeric_string_12: (+1)
   \       0xEA   0x9A03             LDR      R2,[SP, #+12]
   \       0xEC   0x4629             MOV      R1,R5
   \       0xEE   0xA804             ADD      R0,SP,#+16
   \       0xF0   0x.... 0x....      BL       oid_subidentifier_encode_into
   \       0xF4   0x0004             MOVS     R4,R0
   1139                  if (ret != 0) {
   \       0xF6   0xD0E5             BEQ.N    ??mbedtls_oid_from_numeric_string_10
   \       0xF8   0xE000             B.N      ??mbedtls_oid_from_numeric_string_6
   \                     ??mbedtls_oid_from_numeric_string_7: (+1)
   \       0xFA   0x4644             MOV      R4,R8
   1140                      goto error;
   1141                  }
   1142              }
   1143          
   1144              encoded_len = out_ptr - oid->p;
   1145              resized_mem = mbedtls_calloc(encoded_len, 1);
   1146              if (resized_mem == NULL) {
   1147                  ret = MBEDTLS_ERR_ASN1_ALLOC_FAILED;
   1148                  goto error;
   1149              }
   1150              memcpy(resized_mem, oid->p, encoded_len);
   1151              mbedtls_free(oid->p);
   1152              oid->p = resized_mem;
   1153              oid->len = encoded_len;
   1154          
   1155              oid->tag = MBEDTLS_ASN1_OID;
   1156          
   1157              return 0;
   1158          
   1159          error:
   1160              mbedtls_free(oid->p);
   \                     ??mbedtls_oid_from_numeric_string_6: (+1)
   \       0xFC   0x68B0             LDR      R0,[R6, #+8]
   \       0xFE   0x.... 0x....      BL       sl_free
   1161              oid->p = NULL;
   \      0x102   0x2000             MOVS     R0,#+0
   \      0x104   0x60B0             STR      R0,[R6, #+8]
   1162              oid->len = 0;
   \      0x106   0x6070             STR      R0,[R6, #+4]
   1163              return ret;
   \      0x108   0x4620             MOV      R0,R4
   \                     ??mbedtls_oid_from_numeric_string_4: (+1)
   \      0x10A   0xB006             ADD      SP,SP,#+24
   \      0x10C   0xE8BD 0x87F0      POP      {R4-R10,PC}
   \                     ??mbedtls_oid_from_numeric_string_11: (+1)
   \      0x110   0x9D04             LDR      R5,[SP, #+16]
   \      0x112   0x68B0             LDR      R0,[R6, #+8]
   \      0x114   0x2101             MOVS     R1,#+1
   \      0x116   0x1A2D             SUBS     R5,R5,R0
   \      0x118   0x4628             MOV      R0,R5
   \      0x11A   0x.... 0x....      BL       sl_calloc
   \      0x11E   0x0004             MOVS     R4,R0
   \      0x120   0xBF08             IT       EQ
   \      0x122   0x4654             MOVEQ    R4,R10
   \      0x124   0xD0EA             BEQ.N    ??mbedtls_oid_from_numeric_string_6
   \      0x126   0x68B1             LDR      R1,[R6, #+8]
   \      0x128   0x462A             MOV      R2,R5
   \      0x12A   0x.... 0x....      BL       __aeabi_memcpy
   \      0x12E   0x68B0             LDR      R0,[R6, #+8]
   \      0x130   0x.... 0x....      BL       sl_free
   \      0x134   0x60B4             STR      R4,[R6, #+8]
   \      0x136   0x6075             STR      R5,[R6, #+4]
   \      0x138   0x2006             MOVS     R0,#+6
   \      0x13A   0x6030             STR      R0,[R6, #+0]
   \      0x13C   0x2000             MOVS     R0,#+0
   \      0x13E   0xE7E4             B.N      ??mbedtls_oid_from_numeric_string_4
   1164          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \        0x0   0x2E 0x25          DC8      ".%u"          
   \              0x75 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_1:
   \        0x0   0x....'....        DC32     oid_x520_attr_type

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_2:
   \        0x0   0x....'....        DC32     oid_x509_ext

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_3:
   \        0x0   0x....'....        DC32     oid_ext_key_usage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_4:
   \        0x0   0x....'....        DC32     oid_sig_alg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_5:
   \        0x0   0x....'....        DC32     oid_pk_alg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_6:
   \        0x0   0x....'....        DC32     oid_ecp_grp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_7:
   \        0x0   0x....'....        DC32     oid_cipher_alg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_8:
   \        0x0   0x....'....        DC32     oid_md_alg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_9:
   \        0x0   0x....'....        DC32     oid_md_hmac

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_10:
   \        0x0   0x1999'999A        DC32     0x1999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ?_171:
   \        0x0   0x25 0x63          DC8 "%c.%u"
   \              0x2E 0x25    
   \              0x75 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x55 0x04          DC8 "U\004\003"
   \              0x03 0x00

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x69 0x64          DC8 "id-at-commonName"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x63 0x6F    
   \              0x6D 0x6D    
   \              0x6F 0x6E    
   \              0x4E 0x61    
   \              0x6D 0x65    
   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x43 0x6F          DC8 "Common Name"
   \              0x6D 0x6D    
   \              0x6F 0x6E    
   \              0x20 0x4E    
   \              0x61 0x6D    
   \              0x65 0x00

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x43 0x4E          DC8 "CN"
   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x55 0x04          DC8 "U\004\006"
   \              0x06 0x00

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x69 0x64          DC8 "id-at-countryName"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x63 0x6F    
   \              0x75 0x6E    
   \              0x74 0x72    
   \              0x79 0x4E    
   \              0x61 0x6D    
   \              0x65 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x43 0x6F          DC8 "Country"
   \              0x75 0x6E    
   \              0x74 0x72    
   \              0x79 0x00

   \                                 In section .rodata, align 2
   \                     ?_7:
   \        0x0   0x43 0x00          DC8 "C"

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x55 0x04          DC8 "U\004\007"
   \              0x07 0x00

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x69 0x64          DC8 "id-at-locality"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x6C 0x6F    
   \              0x63 0x61    
   \              0x6C 0x69    
   \              0x74 0x79    
   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x4C 0x6F          DC8 "Locality"
   \              0x63 0x61    
   \              0x6C 0x69    
   \              0x74 0x79    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 2
   \                     ?_11:
   \        0x0   0x4C 0x00          DC8 "L"

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x55 0x04          DC8 "U\004\010"
   \              0x08 0x00

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x69 0x64          DC8 "id-at-state"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x00

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x53 0x74          DC8 "State"
   \              0x61 0x74    
   \              0x65 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x53 0x54          DC8 "ST"
   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x55 0x04          DC8 "U\004\012"
   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x69 0x64          DC8 "id-at-organizationName"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x6F 0x72    
   \              0x67 0x61    
   \              0x6E 0x69    
   \              0x7A 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x4E 0x61    
   \              0x6D 0x65    
   \              0x00
   \       0x17                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x4F 0x72          DC8 "Organization"
   \              0x67 0x61    
   \              0x6E 0x69    
   \              0x7A 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 2
   \                     ?_19:
   \        0x0   0x4F 0x00          DC8 "O"

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x55 0x04          DC8 "U\004\013"
   \              0x0B 0x00

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x69 0x64          DC8 "id-at-organizationalUnitName"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x6F 0x72    
   \              0x67 0x61    
   \              0x6E 0x69    
   \              0x7A 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x61 0x6C    
   \              0x55 0x6E    
   \              0x69 0x74    
   \              0x4E 0x61    
   \              0x6D 0x65    
   \              0x00
   \       0x1D                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_22:
   \        0x0   0x4F 0x72          DC8 "Org Unit"
   \              0x67 0x20    
   \              0x55 0x6E    
   \              0x69 0x74    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_23:
   \        0x0   0x4F 0x55          DC8 "OU"
   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x2A 0x86          DC8 "*\206H\206\367\015\001\t\001"
   \              0x48 0x86    
   \              0xF7 0x0D    
   \              0x01 0x09    
   \              0x01 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x65 0x6D          DC8 "emailAddress"
   \              0x61 0x69    
   \              0x6C 0x41    
   \              0x64 0x64    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_26:
   \        0x0   0x45 0x2D          DC8 "E-mail address"
   \              0x6D 0x61    
   \              0x69 0x6C    
   \              0x20 0x61    
   \              0x64 0x64    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_27:
   \        0x0   0x55 0x04          DC8 "U\004\005"
   \              0x05 0x00

   \                                 In section .rodata, align 4
   \                     ?_28:
   \        0x0   0x69 0x64          DC8 "id-at-serialNumber"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x73 0x65    
   \              0x72 0x69    
   \              0x61 0x6C    
   \              0x4E 0x75    
   \              0x6D 0x62    
   \              0x65 0x72    
   \              0x00
   \       0x13                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_29:
   \        0x0   0x53 0x65          DC8 "Serial number"
   \              0x72 0x69    
   \              0x61 0x6C    
   \              0x20 0x6E    
   \              0x75 0x6D    
   \              0x62 0x65    
   \              0x72 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_30:
   \        0x0   0x73 0x65          DC8 "serialNumber"
   \              0x72 0x69    
   \              0x61 0x6C    
   \              0x4E 0x75    
   \              0x6D 0x62    
   \              0x65 0x72    
   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_31:
   \        0x0   0x55 0x04          DC8 "U\004\020"
   \              0x10 0x00

   \                                 In section .rodata, align 4
   \                     ?_32:
   \        0x0   0x69 0x64          DC8 "id-at-postalAddress"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x70 0x6F    
   \              0x73 0x74    
   \              0x61 0x6C    
   \              0x41 0x64    
   \              0x64 0x72    
   \              0x65 0x73    
   \              0x73 0x00

   \                                 In section .rodata, align 4
   \                     ?_33:
   \        0x0   0x50 0x6F          DC8 "Postal address"
   \              0x73 0x74    
   \              0x61 0x6C    
   \              0x20 0x61    
   \              0x64 0x64    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_34:
   \        0x0   0x70 0x6F          DC8 "postalAddress"
   \              0x73 0x74    
   \              0x61 0x6C    
   \              0x41 0x64    
   \              0x64 0x72    
   \              0x65 0x73    
   \              0x73 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_35:
   \        0x0   0x55 0x04          DC8 "U\004\021"
   \              0x11 0x00

   \                                 In section .rodata, align 4
   \                     ?_36:
   \        0x0   0x69 0x64          DC8 "id-at-postalCode"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x70 0x6F    
   \              0x73 0x74    
   \              0x61 0x6C    
   \              0x43 0x6F    
   \              0x64 0x65    
   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_37:
   \        0x0   0x50 0x6F          DC8 "Postal code"
   \              0x73 0x74    
   \              0x61 0x6C    
   \              0x20 0x63    
   \              0x6F 0x64    
   \              0x65 0x00

   \                                 In section .rodata, align 4
   \                     ?_38:
   \        0x0   0x70 0x6F          DC8 "postalCode"
   \              0x73 0x74    
   \              0x61 0x6C    
   \              0x43 0x6F    
   \              0x64 0x65    
   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_39:
   \        0x0   0x55 0x04          DC8 "U\004\004"
   \              0x04 0x00

   \                                 In section .rodata, align 4
   \                     ?_40:
   \        0x0   0x69 0x64          DC8 "id-at-surName"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x73 0x75    
   \              0x72 0x4E    
   \              0x61 0x6D    
   \              0x65 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_41:
   \        0x0   0x53 0x75          DC8 "Surname"
   \              0x72 0x6E    
   \              0x61 0x6D    
   \              0x65 0x00

   \                                 In section .rodata, align 4
   \                     ?_42:
   \        0x0   0x53 0x4E          DC8 "SN"
   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_43:
   \        0x0   0x55 0x04          DC8 "U\004*"
   \              0x2A 0x00

   \                                 In section .rodata, align 4
   \                     ?_44:
   \        0x0   0x69 0x64          DC8 "id-at-givenName"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x67 0x69    
   \              0x76 0x65    
   \              0x6E 0x4E    
   \              0x61 0x6D    
   \              0x65 0x00

   \                                 In section .rodata, align 4
   \                     ?_45:
   \        0x0   0x47 0x69          DC8 "Given name"
   \              0x76 0x65    
   \              0x6E 0x20    
   \              0x6E 0x61    
   \              0x6D 0x65    
   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_46:
   \        0x0   0x47 0x4E          DC8 "GN"
   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_47:
   \        0x0   0x55 0x04          DC8 "U\004+"
   \              0x2B 0x00

   \                                 In section .rodata, align 4
   \                     ?_48:
   \        0x0   0x69 0x64          DC8 "id-at-initials"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x69 0x6E    
   \              0x69 0x74    
   \              0x69 0x61    
   \              0x6C 0x73    
   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_49:
   \        0x0   0x49 0x6E          DC8 "Initials"
   \              0x69 0x74    
   \              0x69 0x61    
   \              0x6C 0x73    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_50:
   \        0x0   0x69 0x6E          DC8 "initials"
   \              0x69 0x74    
   \              0x69 0x61    
   \              0x6C 0x73    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_51:
   \        0x0   0x55 0x04          DC8 "U\004,"
   \              0x2C 0x00

   \                                 In section .rodata, align 4
   \                     ?_52:
   \        0x0   0x69 0x64          DC8 "id-at-generationQualifier"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x67 0x65    
   \              0x6E 0x65    
   \              0x72 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x51 0x75    
   \              0x61 0x6C    
   \              0x69 0x66    
   \              0x69 0x65    
   \              0x72 0x00
   \       0x1A                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_53:
   \        0x0   0x47 0x65          DC8 "Generation qualifier"
   \              0x6E 0x65    
   \              0x72 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x71    
   \              0x75 0x61    
   \              0x6C 0x69    
   \              0x66 0x69    
   \              0x65 0x72    
   \              0x00
   \       0x15                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_54:
   \        0x0   0x67 0x65          DC8 "generationQualifier"
   \              0x6E 0x65    
   \              0x72 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x51 0x75    
   \              0x61 0x6C    
   \              0x69 0x66    
   \              0x69 0x65    
   \              0x72 0x00

   \                                 In section .rodata, align 4
   \                     ?_55:
   \        0x0   0x55 0x04          DC8 "U\004\014"
   \              0x0C 0x00

   \                                 In section .rodata, align 4
   \                     ?_56:
   \        0x0   0x69 0x64          DC8 "id-at-title"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x74 0x69    
   \              0x74 0x6C    
   \              0x65 0x00

   \                                 In section .rodata, align 4
   \                     ?_57:
   \        0x0   0x54 0x69          DC8 "Title"
   \              0x74 0x6C    
   \              0x65 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_58:
   \        0x0   0x74 0x69          DC8 "title"
   \              0x74 0x6C    
   \              0x65 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_59:
   \        0x0   0x55 0x04          DC8 "U\004."
   \              0x2E 0x00

   \                                 In section .rodata, align 4
   \                     ?_60:
   \        0x0   0x69 0x64          DC8 "id-at-dnQualifier"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x64 0x6E    
   \              0x51 0x75    
   \              0x61 0x6C    
   \              0x69 0x66    
   \              0x69 0x65    
   \              0x72 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_61:
   \        0x0   0x44 0x69          DC8 "Distinguished Name qualifier"
   \              0x73 0x74    
   \              0x69 0x6E    
   \              0x67 0x75    
   \              0x69 0x73    
   \              0x68 0x65    
   \              0x64 0x20    
   \              0x4E 0x61    
   \              0x6D 0x65    
   \              0x20 0x71    
   \              0x75 0x61    
   \              0x6C 0x69    
   \              0x66 0x69    
   \              0x65 0x72    
   \              0x00
   \       0x1D                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_62:
   \        0x0   0x64 0x6E          DC8 "dnQualifier"
   \              0x51 0x75    
   \              0x61 0x6C    
   \              0x69 0x66    
   \              0x69 0x65    
   \              0x72 0x00

   \                                 In section .rodata, align 4
   \                     ?_63:
   \        0x0   0x55 0x04          DC8 "U\004A"
   \              0x41 0x00

   \                                 In section .rodata, align 4
   \                     ?_64:
   \        0x0   0x69 0x64          DC8 "id-at-pseudonym"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x70 0x73    
   \              0x65 0x75    
   \              0x64 0x6F    
   \              0x6E 0x79    
   \              0x6D 0x00

   \                                 In section .rodata, align 4
   \                     ?_65:
   \        0x0   0x50 0x73          DC8 "Pseudonym"
   \              0x65 0x75    
   \              0x64 0x6F    
   \              0x6E 0x79    
   \              0x6D 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_66:
   \        0x0   0x70 0x73          DC8 "pseudonym"
   \              0x65 0x75    
   \              0x64 0x6F    
   \              0x6E 0x79    
   \              0x6D 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_67:
   \        0x0   0x09 0x92          DC8 "\t\222&\211\223\362,d\001\001"
   \              0x26 0x89    
   \              0x93 0xF2    
   \              0x2C 0x64    
   \              0x01 0x01    
   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_68:
   \        0x0   0x69 0x64          DC8 "id-uid"
   \              0x2D 0x75    
   \              0x69 0x64    
   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_69:
   \        0x0   0x55 0x73          DC8 "User Id"
   \              0x65 0x72    
   \              0x20 0x49    
   \              0x64 0x00

   \                                 In section .rodata, align 4
   \                     ?_70:
   \        0x0   0x75 0x69          DC8 "uid"
   \              0x64 0x00

   \                                 In section .rodata, align 4
   \                     ?_71:
   \        0x0   0x09 0x92          DC8 "\t\222&\211\223\362,d\001\031"
   \              0x26 0x89    
   \              0x93 0xF2    
   \              0x2C 0x64    
   \              0x01 0x19    
   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_72:
   \        0x0   0x69 0x64          DC8 "id-domainComponent"
   \              0x2D 0x64    
   \              0x6F 0x6D    
   \              0x61 0x69    
   \              0x6E 0x43    
   \              0x6F 0x6D    
   \              0x70 0x6F    
   \              0x6E 0x65    
   \              0x6E 0x74    
   \              0x00
   \       0x13                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_73:
   \        0x0   0x44 0x6F          DC8 "Domain component"
   \              0x6D 0x61    
   \              0x69 0x6E    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x70 0x6F    
   \              0x6E 0x65    
   \              0x6E 0x74    
   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_74:
   \        0x0   0x44 0x43          DC8 "DC"
   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_75:
   \        0x0   0x55 0x04          DC8 "U\004-"
   \              0x2D 0x00

   \                                 In section .rodata, align 4
   \                     ?_76:
   \        0x0   0x69 0x64          DC8 "id-at-uniqueIdentifier"
   \              0x2D 0x61    
   \              0x74 0x2D    
   \              0x75 0x6E    
   \              0x69 0x71    
   \              0x75 0x65    
   \              0x49 0x64    
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x66 0x69    
   \              0x65 0x72    
   \              0x00
   \       0x17                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_77:
   \        0x0   0x55 0x6E          DC8 "Unique Identifier"
   \              0x69 0x71    
   \              0x75 0x65    
   \              0x20 0x49    
   \              0x64 0x65    
   \              0x6E 0x74    
   \              0x69 0x66    
   \              0x69 0x65    
   \              0x72 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_78:
   \        0x0   0x75 0x6E          DC8 "uniqueIdentifier"
   \              0x69 0x71    
   \              0x75 0x65    
   \              0x49 0x64    
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x66 0x69    
   \              0x65 0x72    
   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_79:
   \        0x0   0x55 0x1D          DC8 "U\035\023"
   \              0x13 0x00

   \                                 In section .rodata, align 4
   \                     ?_80:
   \        0x0   0x69 0x64          DC8 "id-ce-basicConstraints"
   \              0x2D 0x63    
   \              0x65 0x2D    
   \              0x62 0x61    
   \              0x73 0x69    
   \              0x63 0x43    
   \              0x6F 0x6E    
   \              0x73 0x74    
   \              0x72 0x61    
   \              0x69 0x6E    
   \              0x74 0x73    
   \              0x00
   \       0x17                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_81:
   \        0x0   0x42 0x61          DC8 "Basic Constraints"
   \              0x73 0x69    
   \              0x63 0x20    
   \              0x43 0x6F    
   \              0x6E 0x73    
   \              0x74 0x72    
   \              0x61 0x69    
   \              0x6E 0x74    
   \              0x73 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_82:
   \        0x0   0x55 0x1D          DC8 "U\035\017"
   \              0x0F 0x00

   \                                 In section .rodata, align 4
   \                     ?_83:
   \        0x0   0x69 0x64          DC8 "id-ce-keyUsage"
   \              0x2D 0x63    
   \              0x65 0x2D    
   \              0x6B 0x65    
   \              0x79 0x55    
   \              0x73 0x61    
   \              0x67 0x65    
   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_84:
   \        0x0   0x4B 0x65          DC8 "Key Usage"
   \              0x79 0x20    
   \              0x55 0x73    
   \              0x61 0x67    
   \              0x65 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_85:
   \        0x0   0x55 0x1D          DC8 "U\035%"
   \              0x25 0x00

   \                                 In section .rodata, align 4
   \                     ?_86:
   \        0x0   0x69 0x64          DC8 "id-ce-extKeyUsage"
   \              0x2D 0x63    
   \              0x65 0x2D    
   \              0x65 0x78    
   \              0x74 0x4B    
   \              0x65 0x79    
   \              0x55 0x73    
   \              0x61 0x67    
   \              0x65 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_87:
   \        0x0   0x45 0x78          DC8 "Extended Key Usage"
   \              0x74 0x65    
   \              0x6E 0x64    
   \              0x65 0x64    
   \              0x20 0x4B    
   \              0x65 0x79    
   \              0x20 0x55    
   \              0x73 0x61    
   \              0x67 0x65    
   \              0x00
   \       0x13                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_88:
   \        0x0   0x55 0x1D          DC8 "U\035\021"
   \              0x11 0x00

   \                                 In section .rodata, align 4
   \                     ?_89:
   \        0x0   0x69 0x64          DC8 "id-ce-subjectAltName"
   \              0x2D 0x63    
   \              0x65 0x2D    
   \              0x73 0x75    
   \              0x62 0x6A    
   \              0x65 0x63    
   \              0x74 0x41    
   \              0x6C 0x74    
   \              0x4E 0x61    
   \              0x6D 0x65    
   \              0x00
   \       0x15                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_90:
   \        0x0   0x53 0x75          DC8 "Subject Alt Name"
   \              0x62 0x6A    
   \              0x65 0x63    
   \              0x74 0x20    
   \              0x41 0x6C    
   \              0x74 0x20    
   \              0x4E 0x61    
   \              0x6D 0x65    
   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_91:
   \        0x0   0x60 0x86          DC8 "`\206H\001\206\370B\001\001"
   \              0x48 0x01    
   \              0x86 0xF8    
   \              0x42 0x01    
   \              0x01 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_92:
   \        0x0   0x69 0x64          DC8 "id-netscape-certtype"
   \              0x2D 0x6E    
   \              0x65 0x74    
   \              0x73 0x63    
   \              0x61 0x70    
   \              0x65 0x2D    
   \              0x63 0x65    
   \              0x72 0x74    
   \              0x74 0x79    
   \              0x70 0x65    
   \              0x00
   \       0x15                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_93:
   \        0x0   0x4E 0x65          DC8 "Netscape Certificate Type"
   \              0x74 0x73    
   \              0x63 0x61    
   \              0x70 0x65    
   \              0x20 0x43    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x66 0x69    
   \              0x63 0x61    
   \              0x74 0x65    
   \              0x20 0x54    
   \              0x79 0x70    
   \              0x65 0x00
   \       0x1A                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_94:
   \        0x0   0x55 0x1D          DC8 "U\035 "
   \              0x20 0x00

   \                                 In section .rodata, align 4
   \                     ?_95:
   \        0x0   0x69 0x64          DC8 "id-ce-certificatePolicies"
   \              0x2D 0x63    
   \              0x65 0x2D    
   \              0x63 0x65    
   \              0x72 0x74    
   \              0x69 0x66    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x65 0x50    
   \              0x6F 0x6C    
   \              0x69 0x63    
   \              0x69 0x65    
   \              0x73 0x00
   \       0x1A                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_96:
   \        0x0   0x43 0x65          DC8 "Certificate Policies"
   \              0x72 0x74    
   \              0x69 0x66    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x50 0x6F    
   \              0x6C 0x69    
   \              0x63 0x69    
   \              0x65 0x73    
   \              0x00
   \       0x15                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_97:
   \        0x0   0x55 0x1D          DC8 "U\035\016"
   \              0x0E 0x00

   \                                 In section .rodata, align 4
   \                     ?_98:
   \        0x0   0x69 0x64          DC8 "id-ce-subjectKeyIdentifier"
   \              0x2D 0x63    
   \              0x65 0x2D    
   \              0x73 0x75    
   \              0x62 0x6A    
   \              0x65 0x63    
   \              0x74 0x4B    
   \              0x65 0x79    
   \              0x49 0x64    
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x66 0x69    
   \              0x65 0x72    
   \              0x00
   \       0x1B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_99:
   \        0x0   0x53 0x75          DC8 "Subject Key Identifier"
   \              0x62 0x6A    
   \              0x65 0x63    
   \              0x74 0x20    
   \              0x4B 0x65    
   \              0x79 0x20    
   \              0x49 0x64    
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x66 0x69    
   \              0x65 0x72    
   \              0x00
   \       0x17                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_100:
   \        0x0   0x55 0x1D          DC8 "U\035#"
   \              0x23 0x00

   \                                 In section .rodata, align 4
   \                     ?_101:
   \        0x0   0x69 0x64          DC8 "id-ce-authorityKeyIdentifier"
   \              0x2D 0x63    
   \              0x65 0x2D    
   \              0x61 0x75    
   \              0x74 0x68    
   \              0x6F 0x72    
   \              0x69 0x74    
   \              0x79 0x4B    
   \              0x65 0x79    
   \              0x49 0x64    
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x66 0x69    
   \              0x65 0x72    
   \              0x00
   \       0x1D                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_102:
   \        0x0   0x41 0x75          DC8 "Authority Key Identifier"
   \              0x74 0x68    
   \              0x6F 0x72    
   \              0x69 0x74    
   \              0x79 0x20    
   \              0x4B 0x65    
   \              0x79 0x20    
   \              0x49 0x64    
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x66 0x69    
   \              0x65 0x72    
   \              0x00
   \       0x19                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_103:
   \        0x0   0x2B 0x06          DC8 "+\006\001\005\005\007\003\001"
   \              0x01 0x05    
   \              0x05 0x07    
   \              0x03 0x01    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_104:
   \        0x0   0x69 0x64          DC8 "id-kp-serverAuth"
   \              0x2D 0x6B    
   \              0x70 0x2D    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x41 0x75    
   \              0x74 0x68    
   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_105:
   \        0x0   0x54 0x4C          DC8 "TLS Web Server Authentication"
   \              0x53 0x20    
   \              0x57 0x65    
   \              0x62 0x20    
   \              0x53 0x65    
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x41    
   \              0x75 0x74    
   \              0x68 0x65    
   \              0x6E 0x74    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x00
   \       0x1E                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_106:
   \        0x0   0x2B 0x06          DC8 "+\006\001\005\005\007\003\002"
   \              0x01 0x05    
   \              0x05 0x07    
   \              0x03 0x02    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_107:
   \        0x0   0x69 0x64          DC8 "id-kp-clientAuth"
   \              0x2D 0x6B    
   \              0x70 0x2D    
   \              0x63 0x6C    
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x41 0x75    
   \              0x74 0x68    
   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_108:
   \        0x0   0x54 0x4C          DC8 "TLS Web Client Authentication"
   \              0x53 0x20    
   \              0x57 0x65    
   \              0x62 0x20    
   \              0x43 0x6C    
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x41    
   \              0x75 0x74    
   \              0x68 0x65    
   \              0x6E 0x74    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x00
   \       0x1E                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_109:
   \        0x0   0x2B 0x06          DC8 "+\006\001\005\005\007\003\003"
   \              0x01 0x05    
   \              0x05 0x07    
   \              0x03 0x03    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_110:
   \        0x0   0x69 0x64          DC8 "id-kp-codeSigning"
   \              0x2D 0x6B    
   \              0x70 0x2D    
   \              0x63 0x6F    
   \              0x64 0x65    
   \              0x53 0x69    
   \              0x67 0x6E    
   \              0x69 0x6E    
   \              0x67 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_111:
   \        0x0   0x43 0x6F          DC8 "Code Signing"
   \              0x64 0x65    
   \              0x20 0x53    
   \              0x69 0x67    
   \              0x6E 0x69    
   \              0x6E 0x67    
   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_112:
   \        0x0   0x2B 0x06          DC8 "+\006\001\005\005\007\003\004"
   \              0x01 0x05    
   \              0x05 0x07    
   \              0x03 0x04    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_113:
   \        0x0   0x69 0x64          DC8 "id-kp-emailProtection"
   \              0x2D 0x6B    
   \              0x70 0x2D    
   \              0x65 0x6D    
   \              0x61 0x69    
   \              0x6C 0x50    
   \              0x72 0x6F    
   \              0x74 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x00
   \       0x16                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_114:
   \        0x0   0x45 0x2D          DC8 "E-mail Protection"
   \              0x6D 0x61    
   \              0x69 0x6C    
   \              0x20 0x50    
   \              0x72 0x6F    
   \              0x74 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_115:
   \        0x0   0x2B 0x06          DC8 "+\006\001\005\005\007\003\010"
   \              0x01 0x05    
   \              0x05 0x07    
   \              0x03 0x08    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_116:
   \        0x0   0x69 0x64          DC8 "id-kp-timeStamping"
   \              0x2D 0x6B    
   \              0x70 0x2D    
   \              0x74 0x69    
   \              0x6D 0x65    
   \              0x53 0x74    
   \              0x61 0x6D    
   \              0x70 0x69    
   \              0x6E 0x67    
   \              0x00
   \       0x13                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_117:
   \        0x0   0x54 0x69          DC8 "Time Stamping"
   \              0x6D 0x65    
   \              0x20 0x53    
   \              0x74 0x61    
   \              0x6D 0x70    
   \              0x69 0x6E    
   \              0x67 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_118:
   \        0x0   0x2B 0x06          DC8 "+\006\001\005\005\007\003\t"
   \              0x01 0x05    
   \              0x05 0x07    
   \              0x03 0x09    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_119:
   \        0x0   0x69 0x64          DC8 "id-kp-OCSPSigning"
   \              0x2D 0x6B    
   \              0x70 0x2D    
   \              0x4F 0x43    
   \              0x53 0x50    
   \              0x53 0x69    
   \              0x67 0x6E    
   \              0x69 0x6E    
   \              0x67 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_120:
   \        0x0   0x4F 0x43          DC8 "OCSP Signing"
   \              0x53 0x50    
   \              0x20 0x53    
   \              0x69 0x67    
   \              0x6E 0x69    
   \              0x6E 0x67    
   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_121:
   \        0x0   0x2B 0x06          DC8 "+\006\001\004\001\202\344%\001"
   \              0x01 0x04    
   \              0x01 0x82    
   \              0xE4 0x25    
   \              0x01 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_122:
   \        0x0   0x69 0x64          DC8 "id-kp-wisun-fan-device"
   \              0x2D 0x6B    
   \              0x70 0x2D    
   \              0x77 0x69    
   \              0x73 0x75    
   \              0x6E 0x2D    
   \              0x66 0x61    
   \              0x6E 0x2D    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x00
   \       0x17                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_123:
   \        0x0   0x57 0x69          DC8 "Wi-SUN Alliance Field Area Network (FAN)"
   \              0x2D 0x53    
   \              0x55 0x4E    
   \              0x20 0x41    
   \              0x6C 0x6C    
   \              0x69 0x61    
   \              0x6E 0x63    
   \              0x65 0x20    
   \              0x46 0x69    
   \              0x65 0x6C    
   \              0x64 0x20    
   \              0x41 0x72    
   \              0x65 0x61    
   \              0x20 0x4E    
   \              0x65 0x74    
   \              0x77 0x6F    
   \              0x72 0x6B    
   \              0x20 0x28    
   \              0x46 0x41    
   \              0x4E 0x29    
   \              0x00
   \       0x29                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_124:
   \        0x0   0x55 0x1D          DC8 0x55, 0x1D, 0x20, 0, 0
   \              0x20 0x00    
   \              0x00
   \        0x5                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_125:
   \        0x0   0x61 0x6E          DC8 "anyPolicy"
   \              0x79 0x50    
   \              0x6F 0x6C    
   \              0x69 0x63    
   \              0x79 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_126:
   \        0x0   0x41 0x6E          DC8 "Any Policy"
   \              0x79 0x20    
   \              0x50 0x6F    
   \              0x6C 0x69    
   \              0x63 0x79    
   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_127:
   \        0x0   0x2A 0x86          DC8 "*\206H\316=\004\001"
   \              0x48 0xCE    
   \              0x3D 0x04    
   \              0x01 0x00

   \                                 In section .rodata, align 4
   \                     ?_128:
   \        0x0   0x65 0x63          DC8 "ecdsa-with-SHA1"
   \              0x64 0x73    
   \              0x61 0x2D    
   \              0x77 0x69    
   \              0x74 0x68    
   \              0x2D 0x53    
   \              0x48 0x41    
   \              0x31 0x00

   \                                 In section .rodata, align 4
   \                     ?_129:
   \        0x0   0x45 0x43          DC8 "ECDSA with SHA1"
   \              0x44 0x53    
   \              0x41 0x20    
   \              0x77 0x69    
   \              0x74 0x68    
   \              0x20 0x53    
   \              0x48 0x41    
   \              0x31 0x00

   \                                 In section .rodata, align 4
   \                     ?_130:
   \        0x0   0x2A 0x86          DC8 "*\206H\316=\004\003\001"
   \              0x48 0xCE    
   \              0x3D 0x04    
   \              0x03 0x01    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_131:
   \        0x0   0x65 0x63          DC8 "ecdsa-with-SHA224"
   \              0x64 0x73    
   \              0x61 0x2D    
   \              0x77 0x69    
   \              0x74 0x68    
   \              0x2D 0x53    
   \              0x48 0x41    
   \              0x32 0x32    
   \              0x34 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_132:
   \        0x0   0x45 0x43          DC8 "ECDSA with SHA224"
   \              0x44 0x53    
   \              0x41 0x20    
   \              0x77 0x69    
   \              0x74 0x68    
   \              0x20 0x53    
   \              0x48 0x41    
   \              0x32 0x32    
   \              0x34 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_133:
   \        0x0   0x2A 0x86          DC8 "*\206H\316=\004\003\002"
   \              0x48 0xCE    
   \              0x3D 0x04    
   \              0x03 0x02    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_134:
   \        0x0   0x65 0x63          DC8 "ecdsa-with-SHA256"
   \              0x64 0x73    
   \              0x61 0x2D    
   \              0x77 0x69    
   \              0x74 0x68    
   \              0x2D 0x53    
   \              0x48 0x41    
   \              0x32 0x35    
   \              0x36 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_135:
   \        0x0   0x45 0x43          DC8 "ECDSA with SHA256"
   \              0x44 0x53    
   \              0x41 0x20    
   \              0x77 0x69    
   \              0x74 0x68    
   \              0x20 0x53    
   \              0x48 0x41    
   \              0x32 0x35    
   \              0x36 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_136:
   \        0x0   0x2A 0x86          DC8 "*\206H\206\367\015\001\001\001"
   \              0x48 0x86    
   \              0xF7 0x0D    
   \              0x01 0x01    
   \              0x01 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_137:
   \        0x0   0x72 0x73          DC8 "rsaEncryption"
   \              0x61 0x45    
   \              0x6E 0x63    
   \              0x72 0x79    
   \              0x70 0x74    
   \              0x69 0x6F    
   \              0x6E 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_138:
   \        0x0   0x52 0x53          DC8 "RSA"
   \              0x41 0x00

   \                                 In section .rodata, align 4
   \                     ?_139:
   \        0x0   0x2A 0x86          DC8 "*\206H\316=\002\001"
   \              0x48 0xCE    
   \              0x3D 0x02    
   \              0x01 0x00

   \                                 In section .rodata, align 4
   \                     ?_140:
   \        0x0   0x69 0x64          DC8 "id-ecPublicKey"
   \              0x2D 0x65    
   \              0x63 0x50    
   \              0x75 0x62    
   \              0x6C 0x69    
   \              0x63 0x4B    
   \              0x65 0x79    
   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_141:
   \        0x0   0x47 0x65          DC8 "Generic EC key"
   \              0x6E 0x65    
   \              0x72 0x69    
   \              0x63 0x20    
   \              0x45 0x43    
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_142:
   \        0x0   0x2B 0x81          DC8 "+\201\004\001\014"
   \              0x04 0x01    
   \              0x0C 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_143:
   \        0x0   0x69 0x64          DC8 "id-ecDH"
   \              0x2D 0x65    
   \              0x63 0x44    
   \              0x48 0x00

   \                                 In section .rodata, align 4
   \                     ?_144:
   \        0x0   0x45 0x43          DC8 "EC key for ECDH"
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x45    
   \              0x43 0x44    
   \              0x48 0x00

   \                                 In section .rodata, align 4
   \                     ?_145:
   \        0x0   0x2A 0x86          DC8 "*\206H\316=\003\001\007"
   \              0x48 0xCE    
   \              0x3D 0x03    
   \              0x01 0x07    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_146:
   \        0x0   0x73 0x65          DC8 "secp256r1"
   \              0x63 0x70    
   \              0x32 0x35    
   \              0x36 0x72    
   \              0x31 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_147:
   \        0x0   0x2B 0x0E          DC8 "+\016\003\002\007"
   \              0x03 0x02    
   \              0x07 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_148:
   \        0x0   0x64 0x65          DC8 "desCBC"
   \              0x73 0x43    
   \              0x42 0x43    
   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_149:
   \        0x0   0x44 0x45          DC8 "DES-CBC"
   \              0x53 0x2D    
   \              0x43 0x42    
   \              0x43 0x00

   \                                 In section .rodata, align 4
   \                     ?_150:
   \        0x0   0x2A 0x86          DC8 "*\206H\206\367\015\003\007"
   \              0x48 0x86    
   \              0xF7 0x0D    
   \              0x03 0x07    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_151:
   \        0x0   0x64 0x65          DC8 "des-ede3-cbc"
   \              0x73 0x2D    
   \              0x65 0x64    
   \              0x65 0x33    
   \              0x2D 0x63    
   \              0x62 0x63    
   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_152:
   \        0x0   0x44 0x45          DC8 "DES-EDE3-CBC"
   \              0x53 0x2D    
   \              0x45 0x44    
   \              0x45 0x33    
   \              0x2D 0x43    
   \              0x42 0x43    
   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_153:
   \        0x0   0x2B 0x0E          DC8 "+\016\003\002\032"
   \              0x03 0x02    
   \              0x1A 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_154:
   \        0x0   0x69 0x64          DC8 "id-sha1"
   \              0x2D 0x73    
   \              0x68 0x61    
   \              0x31 0x00

   \                                 In section .rodata, align 4
   \                     ?_155:
   \        0x0   0x53 0x48          DC8 "SHA-1"
   \              0x41 0x2D    
   \              0x31 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_156:
   \        0x0   0x60 0x86          DC8 "`\206H\001e\003\004\002\004"
   \              0x48 0x01    
   \              0x65 0x03    
   \              0x04 0x02    
   \              0x04 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_157:
   \        0x0   0x69 0x64          DC8 "id-sha224"
   \              0x2D 0x73    
   \              0x68 0x61    
   \              0x32 0x32    
   \              0x34 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_158:
   \        0x0   0x53 0x48          DC8 "SHA-224"
   \              0x41 0x2D    
   \              0x32 0x32    
   \              0x34 0x00

   \                                 In section .rodata, align 4
   \                     ?_159:
   \        0x0   0x60 0x86          DC8 "`\206H\001e\003\004\002\001"
   \              0x48 0x01    
   \              0x65 0x03    
   \              0x04 0x02    
   \              0x01 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_160:
   \        0x0   0x69 0x64          DC8 "id-sha256"
   \              0x2D 0x73    
   \              0x68 0x61    
   \              0x32 0x35    
   \              0x36 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_161:
   \        0x0   0x53 0x48          DC8 "SHA-256"
   \              0x41 0x2D    
   \              0x32 0x35    
   \              0x36 0x00

   \                                 In section .rodata, align 4
   \                     ?_162:
   \        0x0   0x2A 0x86          DC8 "*\206H\206\367\015\002\007"
   \              0x48 0x86    
   \              0xF7 0x0D    
   \              0x02 0x07    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_163:
   \        0x0   0x68 0x6D          DC8 "hmacSHA1"
   \              0x61 0x63    
   \              0x53 0x48    
   \              0x41 0x31    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_164:
   \        0x0   0x48 0x4D          DC8 "HMAC-SHA-1"
   \              0x41 0x43    
   \              0x2D 0x53    
   \              0x48 0x41    
   \              0x2D 0x31    
   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_165:
   \        0x0   0x2A 0x86          DC8 "*\206H\206\367\015\002\010"
   \              0x48 0x86    
   \              0xF7 0x0D    
   \              0x02 0x08    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_166:
   \        0x0   0x68 0x6D          DC8 "hmacSHA224"
   \              0x61 0x63    
   \              0x53 0x48    
   \              0x41 0x32    
   \              0x32 0x34    
   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_167:
   \        0x0   0x48 0x4D          DC8 "HMAC-SHA-224"
   \              0x41 0x43    
   \              0x2D 0x53    
   \              0x48 0x41    
   \              0x2D 0x32    
   \              0x32 0x34    
   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_168:
   \        0x0   0x2A 0x86          DC8 "*\206H\206\367\015\002\t"
   \              0x48 0x86    
   \              0xF7 0x0D    
   \              0x02 0x09    
   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_169:
   \        0x0   0x68 0x6D          DC8 "hmacSHA256"
   \              0x61 0x63    
   \              0x53 0x48    
   \              0x41 0x32    
   \              0x35 0x36    
   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_170:
   \        0x0   0x48 0x4D          DC8 "HMAC-SHA-256"
   \              0x41 0x43    
   \              0x2D 0x53    
   \              0x48 0x41    
   \              0x2D 0x32    
   \              0x35 0x36    
   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_172:
   \        0x0   0x2E 0x25          DC8 ".%u"
   \              0x75 0x00
   1165          
   1166          #endif /* MBEDTLS_OID_C */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      56   mbedtls_oid_from_numeric_string
        56   -> __aeabi_memcpy
        56   -> oid_parse_number
        56   -> oid_subidentifier_encode_into
        56   -> sl_calloc
        56   -> sl_free
      16   mbedtls_oid_get_attr_short_name
        16   -> memcmp
      16   mbedtls_oid_get_certificate_policies
        16   -> memcmp
      16   mbedtls_oid_get_cipher_alg
        16   -> memcmp
      16   mbedtls_oid_get_ec_grp
        16   -> memcmp
      16   mbedtls_oid_get_ec_grp_algid
        16   -> memcmp
      16   mbedtls_oid_get_extended_key_usage
        16   -> memcmp
      16   mbedtls_oid_get_md_alg
        16   -> memcmp
      16   mbedtls_oid_get_md_hmac
        16   -> memcmp
      40   mbedtls_oid_get_numeric_string
        40   -> snprintf
      12   mbedtls_oid_get_oid_by_ec_grp
      12   mbedtls_oid_get_oid_by_ec_grp_algid
      12   mbedtls_oid_get_oid_by_md
      12   mbedtls_oid_get_oid_by_pk_alg
      20   mbedtls_oid_get_oid_by_sig_alg
      16   mbedtls_oid_get_pk_alg
        16   -> memcmp
      16   mbedtls_oid_get_sig_alg
        16   -> oid_sig_alg_from_asn1
       8   mbedtls_oid_get_sig_alg_desc
         8   -> oid_sig_alg_from_asn1
      16   mbedtls_oid_get_x509_ext_type
        16   -> memcmp
      20   oid_parse_number
      16   oid_sig_alg_from_asn1
        16   -> memcmp
      20   oid_subidentifier_encode_into


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable18
       4  ??DataTable18_1
       4  ??DataTable18_10
       4  ??DataTable18_2
       4  ??DataTable18_3
       4  ??DataTable18_4
       4  ??DataTable18_5
       4  ??DataTable18_6
       4  ??DataTable18_7
       4  ??DataTable18_8
       4  ??DataTable18_9
       8  ?Subroutine0
       8  ?Subroutine1
       6  ?Subroutine2
      10  ?Subroutine3
       6  ?Subroutine4
       6  ?Subroutine5
       8  ?Subroutine6
       4  ?_0
      20  ?_1
      12  ?_10
       4  ?_100
      32  ?_101
      28  ?_102
      12  ?_103
      20  ?_104
      32  ?_105
      12  ?_106
      20  ?_107
      32  ?_108
      12  ?_109
       2  ?_11
      20  ?_110
      16  ?_111
      12  ?_112
      24  ?_113
      20  ?_114
      12  ?_115
      20  ?_116
      16  ?_117
      12  ?_118
      20  ?_119
       4  ?_12
      16  ?_120
      12  ?_121
      24  ?_122
      44  ?_123
       8  ?_124
      12  ?_125
      12  ?_126
       8  ?_127
      16  ?_128
      16  ?_129
      12  ?_13
      12  ?_130
      20  ?_131
      20  ?_132
      12  ?_133
      20  ?_134
      20  ?_135
      12  ?_136
      16  ?_137
       4  ?_138
       8  ?_139
       8  ?_14
      16  ?_140
      16  ?_141
       8  ?_142
       8  ?_143
      16  ?_144
      12  ?_145
      12  ?_146
       8  ?_147
       8  ?_148
       8  ?_149
       4  ?_15
      12  ?_150
      16  ?_151
      16  ?_152
       8  ?_153
       8  ?_154
       8  ?_155
      12  ?_156
      12  ?_157
       8  ?_158
      12  ?_159
       4  ?_16
      12  ?_160
       8  ?_161
      12  ?_162
      12  ?_163
      12  ?_164
      12  ?_165
      12  ?_166
      16  ?_167
      12  ?_168
      12  ?_169
      24  ?_17
      16  ?_170
       8  ?_171
       4  ?_172
      16  ?_18
       2  ?_19
      12  ?_2
       4  ?_20
      32  ?_21
      12  ?_22
       4  ?_23
      12  ?_24
      16  ?_25
      16  ?_26
       4  ?_27
      20  ?_28
      16  ?_29
       4  ?_3
      16  ?_30
       4  ?_31
      20  ?_32
      16  ?_33
      16  ?_34
       4  ?_35
      20  ?_36
      12  ?_37
      12  ?_38
       4  ?_39
       4  ?_4
      16  ?_40
       8  ?_41
       4  ?_42
       4  ?_43
      16  ?_44
      12  ?_45
       4  ?_46
       4  ?_47
      16  ?_48
      12  ?_49
      20  ?_5
      12  ?_50
       4  ?_51
      28  ?_52
      24  ?_53
      20  ?_54
       4  ?_55
      12  ?_56
       8  ?_57
       8  ?_58
       4  ?_59
       8  ?_6
      20  ?_60
      32  ?_61
      12  ?_62
       4  ?_63
      16  ?_64
      12  ?_65
      12  ?_66
      12  ?_67
       8  ?_68
       8  ?_69
       2  ?_7
       4  ?_70
      12  ?_71
      20  ?_72
      20  ?_73
       4  ?_74
       4  ?_75
      24  ?_76
      20  ?_77
      20  ?_78
       4  ?_79
       4  ?_8
      24  ?_80
      20  ?_81
       4  ?_82
      16  ?_83
      12  ?_84
       4  ?_85
      20  ?_86
      20  ?_87
       4  ?_88
      24  ?_89
      16  ?_9
      20  ?_90
      12  ?_91
      24  ?_92
      28  ?_93
       4  ?_94
      28  ?_95
      24  ?_96
       4  ?_97
      28  ?_98
      24  ?_99
     320  mbedtls_oid_from_numeric_string
      44  mbedtls_oid_get_attr_short_name
      46  mbedtls_oid_get_certificate_policies
      42  mbedtls_oid_get_cipher_alg
      42  mbedtls_oid_get_ec_grp
      44  mbedtls_oid_get_ec_grp_algid
      46  mbedtls_oid_get_extended_key_usage
      42  mbedtls_oid_get_md_alg
      42  mbedtls_oid_get_md_hmac
     176  mbedtls_oid_get_numeric_string
      20  mbedtls_oid_get_oid_by_ec_grp
      24  mbedtls_oid_get_oid_by_ec_grp_algid
      22  mbedtls_oid_get_oid_by_md
      22  mbedtls_oid_get_oid_by_pk_alg
      42  mbedtls_oid_get_oid_by_sig_alg
      42  mbedtls_oid_get_pk_alg
      30  mbedtls_oid_get_sig_alg
      24  mbedtls_oid_get_sig_alg_desc
      42  mbedtls_oid_get_x509_ext_type
      32  oid_certificate_policies
      60  oid_cipher_alg
      40  oid_ecp_grp
      20  oid_ecp_grp_algid
     128  oid_ext_key_usage
      80  oid_md_alg
      80  oid_md_hmac
      70  oid_parse_number
      80  oid_pk_alg
      80  oid_sig_alg
      44  oid_sig_alg_from_asn1
      72  oid_subidentifier_encode_into
     180  oid_x509_ext
     420  oid_x520_attr_type

 
 3'474 bytes in section .rodata
 1'454 bytes in section .text
 
 1'454 bytes of CODE  memory
 3'474 bytes of CONST memory

Errors: none
Warnings: none
