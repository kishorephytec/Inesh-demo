###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         27/Nov/2024  12:17:39
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\psa_util.c
#    Command line                 =
#        -f
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\library_11823079944874003547.dir\psa_util.o.rsp
#        (C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\psa_util.c
#        -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -D MBED_CONF_MBED_TRACE_ENABLE=1 -D
#        MBED_CONF_NANOSTACK_CONFIGURATION=ws_router -D
#        MBED_TRACE_MAX_LEVEL=TRACE_ACTIVE_LEVEL_ALL -D DEBUG_EFM_USER=1 -D
#        HAVE_LFN=1 -D HAVE_LFN_PARENT=1 -lC
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\library_11823079944874003547.dir
#        --diag_suppress Pa050 -o
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\library_11823079944874003547.dir
#        --debug --endian=little --cpu=Cortex-M33 --cmse --cmse -e
#        --fpu=VFPv5_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\
#        -I C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\autogen\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\rail\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\Device\SiliconLabs\EFR32FG28\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\Core\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\RTOS2\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\device_init\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\dmadrv\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emlib\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\cmsis\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\portable\IAR\ARM_CM33_NTZ\non_secure\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\iostream\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\preset\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\nvm3\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\peripheral\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_psa_driver\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\common\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\wmbus\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\sidewalk\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\rail_util_pti\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\segger\systemview\SEGGER\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\silicon_labs\silabs_core\memory_manager\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\toolchain\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\system\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\ns_list\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\sleeptimer\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\app\wisun_rcp\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\socket\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\src\
#        -Ohz --use_c++_inline) --dependencies=n
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\library_11823079944874003547.dir\psa_util.o.iar_deps
#    Locale                       =  C
#    List file                    =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\library_11823079944874003547.dir\psa_util.lst
#    Object file                  =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\library_11823079944874003547.dir\psa_util.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#
###############################################################################

C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\psa_util.c
      1          /*
      2           *  PSA hashing layer on top of Mbed TLS software crypto
      3           */
      4          /*
      5           *  Copyright The Mbed TLS Contributors
      6           *  SPDX-License-Identifier: Apache-2.0
      7           *
      8           *  Licensed under the Apache License, Version 2.0 (the "License"); you may
      9           *  not use this file except in compliance with the License.
     10           *  You may obtain a copy of the License at
     11           *
     12           *  http://www.apache.org/licenses/LICENSE-2.0
     13           *
     14           *  Unless required by applicable law or agreed to in writing, software
     15           *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
     16           *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     17           *  See the License for the specific language governing permissions and
     18           *  limitations under the License.
     19           */
     20          
     21          #include "common.h"
     22          
     23          #if defined(MBEDTLS_PSA_CRYPTO_C)
     24          
     25          #include <psa/crypto.h>
     26          
     27          #include "psa_util_internal.h"
     28          
     29          /* The following includes are needed for MBEDTLS_ERR_XXX macros */
     30          #include <mbedtls/error.h>
     31          #if defined(MBEDTLS_MD_LIGHT)
     32          #include <mbedtls/md.h>
     33          #endif
     34          #if defined(MBEDTLS_LMS_C)
     35          #include <mbedtls/lms.h>
     36          #endif
     37          #if defined(MBEDTLS_SSL_TLS_C) && \
     38              (defined(MBEDTLS_USE_PSA_CRYPTO) || defined(MBEDTLS_SSL_PROTO_TLS1_3))
     39          #include <mbedtls/ssl.h>
     40          #endif
     41          #if defined(PSA_WANT_KEY_TYPE_RSA_PUBLIC_KEY) ||    \
     42              defined(PSA_WANT_KEY_TYPE_RSA_KEY_PAIR_BASIC)
     43          #include <mbedtls/rsa.h>
     44          #endif
     45          #if defined(MBEDTLS_USE_PSA_CRYPTO) && \
     46              defined(PSA_WANT_KEY_TYPE_ECC_PUBLIC_KEY)
     47          #include <mbedtls/ecp.h>
     48          #endif
     49          #if defined(MBEDTLS_PK_C)
     50          #include <mbedtls/pk.h>
     51          #endif
     52          
     53          /* PSA_SUCCESS is kept at the top of each error table since
     54           * it's the most common status when everything functions properly. */
     55          #if defined(MBEDTLS_MD_LIGHT)

   \                                 In section .rodata, align 4
     56          const mbedtls_error_pair_t psa_to_md_errors[] =
   \                     psa_to_md_errors:
   \        0x0   0x0000 0x0000      DC16 0, 0, -134, -20'608, -135, -20'736, -141, -20'864
   \               0xFF7A 0xAF8
   \              0 0xFF79 0xAF
   \              00 0xFF73 0xA
   \              E80
     57          {
     58              { PSA_SUCCESS,                     0 },
     59              { PSA_ERROR_NOT_SUPPORTED,         MBEDTLS_ERR_MD_FEATURE_UNAVAILABLE },
     60              { PSA_ERROR_INVALID_ARGUMENT,      MBEDTLS_ERR_MD_BAD_INPUT_DATA },
     61              { PSA_ERROR_INSUFFICIENT_MEMORY,   MBEDTLS_ERR_MD_ALLOC_FAILED }
     62          };
     63          #endif
     64          #if defined(MBEDTLS_LMS_C)
     65          const mbedtls_error_pair_t psa_to_lms_errors[] =
     66          {
     67              { PSA_SUCCESS,                     0 },
     68              { PSA_ERROR_BUFFER_TOO_SMALL,      MBEDTLS_ERR_LMS_BUFFER_TOO_SMALL },
     69              { PSA_ERROR_INVALID_ARGUMENT,      MBEDTLS_ERR_LMS_BAD_INPUT_DATA }
     70          };
     71          #endif
     72          #if defined(MBEDTLS_SSL_TLS_C) && \
     73              (defined(MBEDTLS_USE_PSA_CRYPTO) || defined(MBEDTLS_SSL_PROTO_TLS1_3))

   \                                 In section .rodata, align 4
     74          const mbedtls_error_pair_t psa_to_ssl_errors[] =
   \                     psa_to_ssl_errors:
   \        0x0   0x0000 0x0000      DC16 0, 0, -141, -32'512, -134, -28'800, -149, -29'056, -135, -28'928
   \               0xFF73 0x810
   \              0 0xFF7A 0x8F
   \              80 0xFF6B 0x8
   \              E80 0xFF79 0x
   \              8F00
   \       0x14   0xFF77 0x9400      DC16 -137, -27'648, -138, -27'136
   \               0xFF76 0x960
   \              0
     75          {
     76              { PSA_SUCCESS,                     0 },
     77              { PSA_ERROR_INSUFFICIENT_MEMORY,   MBEDTLS_ERR_SSL_ALLOC_FAILED },
     78              { PSA_ERROR_NOT_SUPPORTED,         MBEDTLS_ERR_SSL_FEATURE_UNAVAILABLE },
     79              { PSA_ERROR_INVALID_SIGNATURE,     MBEDTLS_ERR_SSL_INVALID_MAC },
     80              { PSA_ERROR_INVALID_ARGUMENT,      MBEDTLS_ERR_SSL_BAD_INPUT_DATA },
     81              { PSA_ERROR_BAD_STATE,             MBEDTLS_ERR_SSL_INTERNAL_ERROR },
     82              { PSA_ERROR_BUFFER_TOO_SMALL,      MBEDTLS_ERR_SSL_BUFFER_TOO_SMALL }
     83          };
     84          #endif
     85          
     86          #if defined(PSA_WANT_KEY_TYPE_RSA_PUBLIC_KEY) ||    \
     87              defined(PSA_WANT_KEY_TYPE_RSA_KEY_PAIR_BASIC)
     88          const mbedtls_error_pair_t psa_to_pk_rsa_errors[] =
     89          {
     90              { PSA_SUCCESS,                     0 },
     91              { PSA_ERROR_NOT_PERMITTED,         MBEDTLS_ERR_RSA_BAD_INPUT_DATA },
     92              { PSA_ERROR_INVALID_ARGUMENT,      MBEDTLS_ERR_RSA_BAD_INPUT_DATA },
     93              { PSA_ERROR_INVALID_HANDLE,        MBEDTLS_ERR_RSA_BAD_INPUT_DATA },
     94              { PSA_ERROR_BUFFER_TOO_SMALL,      MBEDTLS_ERR_RSA_OUTPUT_TOO_LARGE },
     95              { PSA_ERROR_INSUFFICIENT_ENTROPY,  MBEDTLS_ERR_RSA_RNG_FAILED },
     96              { PSA_ERROR_INVALID_SIGNATURE,     MBEDTLS_ERR_RSA_VERIFY_FAILED },
     97              { PSA_ERROR_INVALID_PADDING,       MBEDTLS_ERR_RSA_INVALID_PADDING }
     98          };
     99          #endif
    100          
    101          #if defined(MBEDTLS_USE_PSA_CRYPTO) && \
    102              defined(PSA_WANT_KEY_TYPE_ECC_PUBLIC_KEY)

   \                                 In section .rodata, align 4
    103          const mbedtls_error_pair_t psa_to_pk_ecdsa_errors[] =
   \                     psa_to_pk_ecdsa_errors:
   \        0x0   0x0000 0x0000      DC16 0, 0, -133, -20'352, -135, -20'352, -136, -20'096, -138, -20'224
   \               0xFF7B 0xB08
   \              0 0xFF79 0xB0
   \              80 0xFF78 0xB
   \              180 0xFF76 0x
   \              B100
   \       0x14   0xFF6C 0xB300      DC16 -148, -19'712, -149, -19'968
   \               0xFF6B 0xB20
   \              0
    104          {
    105              { PSA_SUCCESS,                     0 },
    106              { PSA_ERROR_NOT_PERMITTED,         MBEDTLS_ERR_ECP_BAD_INPUT_DATA },
    107              { PSA_ERROR_INVALID_ARGUMENT,      MBEDTLS_ERR_ECP_BAD_INPUT_DATA },
    108              { PSA_ERROR_INVALID_HANDLE,        MBEDTLS_ERR_ECP_FEATURE_UNAVAILABLE },
    109              { PSA_ERROR_BUFFER_TOO_SMALL,      MBEDTLS_ERR_ECP_BUFFER_TOO_SMALL },
    110              { PSA_ERROR_INSUFFICIENT_ENTROPY,  MBEDTLS_ERR_ECP_RANDOM_FAILED },
    111              { PSA_ERROR_INVALID_SIGNATURE,     MBEDTLS_ERR_ECP_VERIFY_FAILED }
    112          };
    113          #endif
    114          

   \                                 In section .text, align 2, keep-with-next
    115          int psa_generic_status_to_mbedtls(psa_status_t status)
    116          {
    117              switch (status) {
   \                     psa_generic_status_to_mbedtls: (+1)
   \        0x0   0xB170             CBZ.N    R0,??psa_generic_status_to_mbedtls_0
   \        0x2   0xF06F 0x0196      MVN      R1,#+150
   \        0x6   0x1A40             SUBS     R0,R0,R1
   \        0x8   0xD006             BEQ.N    ??psa_generic_status_to_mbedtls_1
   \        0xA   0x1F00             SUBS     R0,R0,#+4
   \        0xC   0xD005             BEQ.N    ??psa_generic_status_to_mbedtls_2
   \        0xE   0x1E80             SUBS     R0,R0,#+2
   \       0x10   0xD003             BEQ.N    ??psa_generic_status_to_mbedtls_2
   \       0x12   0x380B             SUBS     R0,R0,#+11
   \       0x14   0xD102             BNE.N    ??psa_generic_status_to_mbedtls_3
    118                  case PSA_SUCCESS:
    119                      return 0;
    120                  case PSA_ERROR_NOT_SUPPORTED:
    121                      return MBEDTLS_ERR_PLATFORM_FEATURE_UNSUPPORTED;
   \       0x16   0x....             B.N      ?Subroutine2
    122                  case PSA_ERROR_CORRUPTION_DETECTED:
    123                      return MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED;
   \                     ??psa_generic_status_to_mbedtls_1: (+1)
   \       0x18   0x....             B.N      ?Subroutine1
    124                  case PSA_ERROR_COMMUNICATION_FAILURE:
    125                  case PSA_ERROR_HARDWARE_FAILURE:
    126                      return MBEDTLS_ERR_PLATFORM_HW_ACCEL_FAILED;
   \                     ??psa_generic_status_to_mbedtls_2: (+1)
   \       0x1A   0x....             B.N      ?Subroutine0
    127                  case PSA_ERROR_NOT_PERMITTED:
    128                  default:
    129                      return MBEDTLS_ERR_ERROR_GENERIC_ERROR;
   \                     ??psa_generic_status_to_mbedtls_3: (+1)
   \       0x1C   0xF04F 0x30FF      MOV      R0,#+4294967295
   \                     ??psa_generic_status_to_mbedtls_0: (+1)
   \       0x20   0x4770             BX       LR
    130              }
    131          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \        0x0   0xF06F 0x0071      MVN      R0,#+113
   \        0x4   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0xF06F 0x006D      MVN      R0,#+109
   \        0x4   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0xF06F 0x006F      MVN      R0,#+111
   \        0x4   0x4770             BX       LR
    132          

   \                                 In section .text, align 2, keep-with-next
    133          int psa_status_to_mbedtls(psa_status_t status,
    134                                    const mbedtls_error_pair_t *local_translations,
    135                                    size_t local_errors_num,
    136                                    int (*fallback_f)(psa_status_t))
    137          {
   \                     psa_status_to_mbedtls: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    138              for (size_t i = 0; i < local_errors_num; i++) {
   \        0x2   0x2500             MOVS     R5,#+0
   \        0x4   0xE000             B.N      ??psa_status_to_mbedtls_0
   \                     ??psa_status_to_mbedtls_1: (+1)
   \        0x6   0x1C6D             ADDS     R5,R5,#+1
   \                     ??psa_status_to_mbedtls_0: (+1)
   \        0x8   0x4295             CMP      R5,R2
   \        0xA   0xD208             BCS.N    ??psa_status_to_mbedtls_2
    139                  if (status == local_translations[i].psa_status) {
   \        0xC   0xF931 0x4025      LDRSH    R4,[R1, R5, LSL #+2]
   \       0x10   0x42A0             CMP      R0,R4
   \       0x12   0xD1F8             BNE.N    ??psa_status_to_mbedtls_1
    140                      return local_translations[i].mbedtls_error;
   \       0x14   0xEB01 0x0085      ADD      R0,R1,R5, LSL #+2
   \       0x18   0xF9B0 0x0002      LDRSH    R0,[R0, #+2]
   \       0x1C   0xBD32             POP      {R1,R4,R5,PC}
    141                  }
    142              }
    143              return fallback_f(status);
   \                     ??psa_status_to_mbedtls_2: (+1)
   \       0x1E   0xE8BD 0x4032      POP      {R1,R4,R5,LR}
   \       0x22   0x4718             BX       R3
    144          }
    145          
    146          #if defined(MBEDTLS_PK_C)

   \                                 In section .text, align 2, keep-with-next
    147          int psa_pk_status_to_mbedtls(psa_status_t status)
    148          {
    149              switch (status) {
   \                     psa_pk_status_to_mbedtls: (+1)
   \        0x0   0xF06F 0x0198      MVN      R1,#+152
   \        0x4   0x1A42             SUBS     R2,R0,R1
   \        0x6   0x2A01             CMP      R2,#+1
   \        0x8   0xD91A             BLS.N    ??psa_pk_status_to_mbedtls_0
   \        0xA   0x1FD2             SUBS     R2,R2,#+7
   \        0xC   0xD018             BEQ.N    ??psa_pk_status_to_mbedtls_0
   \        0xE   0x1F52             SUBS     R2,R2,#+5
   \       0x10   0xD012             BEQ.N    ??psa_pk_status_to_mbedtls_1
   \       0x12   0x1ED2             SUBS     R2,R2,#+3
   \       0x14   0xD00A             BEQ.N    ??psa_pk_status_to_mbedtls_2
   \       0x16   0x1E52             SUBS     R2,R2,#+1
   \       0x18   0xD010             BEQ.N    ??psa_pk_status_to_mbedtls_3
   \       0x1A   0x1E52             SUBS     R2,R2,#+1
   \       0x1C   0xD004             BEQ.N    ??psa_pk_status_to_mbedtls_4
   \       0x1E   0x1E52             SUBS     R2,R2,#+1
   \       0x20   0xD008             BEQ.N    ??psa_pk_status_to_mbedtls_5
   \       0x22   0x1E52             SUBS     R2,R2,#+1
   \       0x24   0xD004             BEQ.N    ??psa_pk_status_to_mbedtls_6
   \       0x26   0xE00D             B.N      ??psa_pk_status_to_mbedtls_7
    150                  case PSA_ERROR_INVALID_HANDLE:
    151                      return MBEDTLS_ERR_PK_KEY_INVALID_FORMAT;
   \                     ??psa_pk_status_to_mbedtls_4: (+1)
   \       0x28   0x....             LDR.N    R0,??DataTable1
   \       0x2A   0x4770             BX       LR
    152                  case PSA_ERROR_BUFFER_TOO_SMALL:
    153                      return MBEDTLS_ERR_PK_BUFFER_TOO_SMALL;
   \                     ??psa_pk_status_to_mbedtls_2: (+1)
   \       0x2C   0x....             LDR.N    R0,??DataTable1_1
   \       0x2E   0x4770             BX       LR
    154                  case PSA_ERROR_NOT_SUPPORTED:
    155                      return MBEDTLS_ERR_PK_FEATURE_UNAVAILABLE;
   \                     ??psa_pk_status_to_mbedtls_6: (+1)
   \       0x30   0x....             LDR.N    R0,??DataTable1_2
   \       0x32   0x4770             BX       LR
    156                  case PSA_ERROR_INVALID_ARGUMENT:
    157                      return MBEDTLS_ERR_PK_INVALID_ALG;
   \                     ??psa_pk_status_to_mbedtls_5: (+1)
   \       0x34   0x....             LDR.N    R0,??DataTable1_3
   \       0x36   0x4770             BX       LR
    158                  case PSA_ERROR_INSUFFICIENT_MEMORY:
    159                      return MBEDTLS_ERR_PK_ALLOC_FAILED;
   \                     ??psa_pk_status_to_mbedtls_1: (+1)
   \       0x38   0x....             LDR.N    R0,??DataTable1_4
   \       0x3A   0x4770             BX       LR
    160                  case PSA_ERROR_BAD_STATE:
    161                      return MBEDTLS_ERR_PK_BAD_INPUT_DATA;
   \                     ??psa_pk_status_to_mbedtls_3: (+1)
   \       0x3C   0x....             LDR.N    R0,??DataTable1_5
   \       0x3E   0x4770             BX       LR
    162                  case PSA_ERROR_DATA_CORRUPT:
    163                  case PSA_ERROR_DATA_INVALID:
    164                  case PSA_ERROR_STORAGE_FAILURE:
    165                      return MBEDTLS_ERR_PK_FILE_IO_ERROR;
   \                     ??psa_pk_status_to_mbedtls_0: (+1)
   \       0x40   0x....             LDR.N    R0,??DataTable1_6
   \       0x42   0x4770             BX       LR
    166                  default:
    167                      return psa_generic_status_to_mbedtls(status);
   \                     ??psa_pk_status_to_mbedtls_7: (+1)
   \       0x44   0xB178             CBZ.N    R0,??psa_pk_status_to_mbedtls_8
   \       0x46   0xF06F 0x0196      MVN      R1,#+150
   \       0x4A   0x1A40             SUBS     R0,R0,R1
   \       0x4C   0xD007             BEQ.N    ??psa_pk_status_to_mbedtls_9
   \       0x4E   0x1F00             SUBS     R0,R0,#+4
   \       0x50   0xD004             BEQ.N    ??psa_pk_status_to_mbedtls_10
   \       0x52   0x1E80             SUBS     R0,R0,#+2
   \       0x54   0xD002             BEQ.N    ??psa_pk_status_to_mbedtls_10
   \       0x56   0x380B             SUBS     R0,R0,#+11
   \       0x58   0xD002             BEQ.N    ??psa_pk_status_to_mbedtls_11
   \       0x5A   0xE002             B.N      ??psa_pk_status_to_mbedtls_12
   \                     ??psa_pk_status_to_mbedtls_10: (+1)
   \       0x5C   0x....             B.N      ?Subroutine0
   \                     ??psa_pk_status_to_mbedtls_9: (+1)
   \       0x5E   0x....             B.N      ?Subroutine1
   \                     ??psa_pk_status_to_mbedtls_11: (+1)
   \       0x60   0x....             B.N      ?Subroutine2
   \                     ??psa_pk_status_to_mbedtls_12: (+1)
   \       0x62   0xF04F 0x30FF      MOV      R0,#+4294967295
    168              }
   \                     ??psa_pk_status_to_mbedtls_8: (+1)
   \       0x66   0x4770             BX       LR
    169          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \        0x0   0xFFFF'C300        DC32     0xffffc300

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \        0x0   0xFFFF'C780        DC32     0xffffc780

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \        0x0   0xFFFF'C680        DC32     0xffffc680

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \        0x0   0xFFFF'C580        DC32     0xffffc580

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \        0x0   0xFFFF'C080        DC32     0xffffc080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \        0x0   0xFFFF'C180        DC32     0xffffc180

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \        0x0   0xFFFF'C200        DC32     0xffffc200
    170          #endif /* MBEDTLS_PK_C */
    171          #endif /* MBEDTLS_PSA_CRYPTO_C */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   psa_generic_status_to_mbedtls
       0   psa_pk_status_to_mbedtls
      16   psa_status_to_mbedtls
         0   -- Indirect call


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       6  ?Subroutine0
       6  ?Subroutine1
       6  ?Subroutine2
      34  psa_generic_status_to_mbedtls
     104  psa_pk_status_to_mbedtls
      36  psa_status_to_mbedtls
      16  psa_to_md_errors
      28  psa_to_pk_ecdsa_errors
      28  psa_to_ssl_errors

 
  72 bytes in section .rodata
 220 bytes in section .text
 
 220 bytes of CODE  memory
  72 bytes of CONST memory

Errors: none
Warnings: none
