###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         27/Nov/2024  12:18:03
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\threading.c
#    Command line                 =
#        -f
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\library_11823079944874003547.dir\threading.o.rsp
#        (C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\threading.c
#        -D EFR32FG28B322F1024IM48=1 -D
#        configNUM_SDK_THREAD_LOCAL_STORAGE_POINTERS=2 -D
#        SL_COMPONENT_CATALOG_PRESENT=1 -D
#        MBEDTLS_CONFIG_FILE=<sl_mbedtls_config.h> -D
#        MBEDTLS_PSA_CRYPTO_CONFIG_FILE=<psa_crypto_config.h> -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -D
#        RTT_USE_ASM=0 -D MBED_CONF_MBED_TRACE_ENABLE=1 -D
#        MBED_CONF_NANOSTACK_CONFIGURATION=ws_router -D
#        MBED_TRACE_MAX_LEVEL=TRACE_ACTIVE_LEVEL_ALL -D DEBUG_EFM_USER=1 -D
#        HAVE_LFN=1 -D HAVE_LFN_PARENT=1 -lC
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\library_11823079944874003547.dir
#        --diag_suppress Pa050 -o
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\library_11823079944874003547.dir
#        --debug --endian=little --cpu=Cortex-M33 --cmse --cmse -e
#        --fpu=VFPv5_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\
#        -I C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\autogen\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\ -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\config\rail\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\Device\SiliconLabs\EFR32FG28\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\Core\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\CMSIS\RTOS2\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\device_init\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\dmadrv\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\common\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emlib\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\cmsis\Include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\freertos\kernel\portable\IAR\ARM_CM33_NTZ\non_secure\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\iostream\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\config\preset\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_mbedtls_support\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\include\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\emdrv\nvm3\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\peripheral\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\sl_psa_driver\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\common\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\wmbus\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\protocol\sidewalk\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\pa-conversions\efr32xg28\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\radio\rail_lib\plugin\rail_util_pti\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\security\sl_component\se_manager\src\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\segger\systemview\SEGGER\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\silicon_labs\silabs_core\memory_manager\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\common\toolchain\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\system\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\ns_list\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\app\wisun\component\trace_util\nanostack\nanostack-libservice\mbed-client-libservice\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\platform\service\sleeptimer\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\app\wisun_rcp\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\inc\socket\
#        -I
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\protocol\wisun\stack\src\
#        -Ohz --use_c++_inline) --dependencies=n
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\library_11823079944874003547.dir\threading.o.iar_deps
#    Locale                       =  C
#    List file                    =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\lst\library_11823079944874003547.dir\threading.lst
#    Object file                  =
#        C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\ewarm-iar\obj\library_11823079944874003547.dir\threading.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#
###############################################################################

C:\Users\DELL\SimplicityStudio\v5_workspace\wisun_rcp_7\gecko_sdk_4.4.3\util\third_party\mbedtls\library\threading.c
      1          /*
      2           *  Threading abstraction layer
      3           *
      4           *  Copyright The Mbed TLS Contributors
      5           *  SPDX-License-Identifier: Apache-2.0
      6           *
      7           *  Licensed under the Apache License, Version 2.0 (the "License"); you may
      8           *  not use this file except in compliance with the License.
      9           *  You may obtain a copy of the License at
     10           *
     11           *  http://www.apache.org/licenses/LICENSE-2.0
     12           *
     13           *  Unless required by applicable law or agreed to in writing, software
     14           *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
     15           *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     16           *  See the License for the specific language governing permissions and
     17           *  limitations under the License.
     18           */
     19          
     20          /*
     21           * Ensure gmtime_r is available even with -std=c99; must be defined before
     22           * mbedtls_config.h, which pulls in glibc's features.h. Harmless on other platforms.
     23           */
     24          #if !defined(_POSIX_C_SOURCE)
     25          #define _POSIX_C_SOURCE 200112L
     26          #endif
     27          
     28          #include "common.h"
     29          
     30          #if defined(MBEDTLS_THREADING_C)
     31          
     32          #include "mbedtls/threading.h"
     33          
     34          #if defined(MBEDTLS_HAVE_TIME_DATE) && !defined(MBEDTLS_PLATFORM_GMTIME_R_ALT)
     35          
     36          #if !defined(_WIN32) && (defined(unix) || \
     37              defined(__unix) || defined(__unix__) || (defined(__APPLE__) && \
     38              defined(__MACH__)))
     39          #include <unistd.h>
     40          #endif /* !_WIN32 && (unix || __unix || __unix__ ||
     41                  * (__APPLE__ && __MACH__)) */
     42          
     43          #if !((defined(_POSIX_VERSION) && _POSIX_VERSION >= 200809L) ||     \
     44              (defined(_POSIX_THREAD_SAFE_FUNCTIONS) &&                     \
     45              _POSIX_THREAD_SAFE_FUNCTIONS >= 200112L))
     46          /*
     47           * This is a convenience shorthand macro to avoid checking the long
     48           * preprocessor conditions above. Ideally, we could expose this macro in
     49           * platform_util.h and simply use it in platform_util.c, threading.c and
     50           * threading.h. However, this macro is not part of the Mbed TLS public API, so
     51           * we keep it private by only defining it in this file
     52           */
     53          
     54          #if !(defined(_WIN32) && !defined(EFIX64) && !defined(EFI32))
     55          #define THREADING_USE_GMTIME
     56          #endif /* ! ( defined(_WIN32) && !defined(EFIX64) && !defined(EFI32) ) */
     57          
     58          #endif /* !( ( defined(_POSIX_VERSION) && _POSIX_VERSION >= 200809L ) || \
     59                       ( defined(_POSIX_THREAD_SAFE_FUNCTIONS ) && \
     60                          _POSIX_THREAD_SAFE_FUNCTIONS >= 200112L ) ) */
     61          
     62          #endif /* MBEDTLS_HAVE_TIME_DATE && !MBEDTLS_PLATFORM_GMTIME_R_ALT */
     63          
     64          #if defined(MBEDTLS_THREADING_PTHREAD)
     65          static void threading_mutex_init_pthread(mbedtls_threading_mutex_t *mutex)
     66          {
     67              if (mutex == NULL) {
     68                  return;
     69              }
     70          
     71              /* A nonzero value of is_valid indicates a successfully initialized
     72               * mutex. This is a workaround for not being able to return an error
     73               * code for this function. The lock/unlock functions return an error
     74               * if is_valid is nonzero. The Mbed TLS unit test code uses this field
     75               * to distinguish more states of the mutex; see
     76               * tests/src/threading_helpers for details. */
     77              mutex->is_valid = pthread_mutex_init(&mutex->mutex, NULL) == 0;
     78          }
     79          
     80          static void threading_mutex_free_pthread(mbedtls_threading_mutex_t *mutex)
     81          {
     82              if (mutex == NULL || !mutex->is_valid) {
     83                  return;
     84              }
     85          
     86              (void) pthread_mutex_destroy(&mutex->mutex);
     87              mutex->is_valid = 0;
     88          }
     89          
     90          static int threading_mutex_lock_pthread(mbedtls_threading_mutex_t *mutex)
     91          {
     92              if (mutex == NULL || !mutex->is_valid) {
     93                  return MBEDTLS_ERR_THREADING_BAD_INPUT_DATA;
     94              }
     95          
     96              if (pthread_mutex_lock(&mutex->mutex) != 0) {
     97                  return MBEDTLS_ERR_THREADING_MUTEX_ERROR;
     98              }
     99          
    100              return 0;
    101          }
    102          
    103          static int threading_mutex_unlock_pthread(mbedtls_threading_mutex_t *mutex)
    104          {
    105              if (mutex == NULL || !mutex->is_valid) {
    106                  return MBEDTLS_ERR_THREADING_BAD_INPUT_DATA;
    107              }
    108          
    109              if (pthread_mutex_unlock(&mutex->mutex) != 0) {
    110                  return MBEDTLS_ERR_THREADING_MUTEX_ERROR;
    111              }
    112          
    113              return 0;
    114          }
    115          
    116          void (*mbedtls_mutex_init)(mbedtls_threading_mutex_t *) = threading_mutex_init_pthread;
    117          void (*mbedtls_mutex_free)(mbedtls_threading_mutex_t *) = threading_mutex_free_pthread;
    118          int (*mbedtls_mutex_lock)(mbedtls_threading_mutex_t *) = threading_mutex_lock_pthread;
    119          int (*mbedtls_mutex_unlock)(mbedtls_threading_mutex_t *) = threading_mutex_unlock_pthread;
    120          
    121          /*
    122           * With pthreads we can statically initialize mutexes
    123           */
    124          #define MUTEX_INIT  = { PTHREAD_MUTEX_INITIALIZER, 1 }
    125          
    126          #endif /* MBEDTLS_THREADING_PTHREAD */
    127          
    128          #if defined(MBEDTLS_THREADING_ALT)

   \                                 In section .text, align 2, keep-with-next
    129          static int threading_mutex_fail(mbedtls_threading_mutex_t *mutex)
    130          {
    131              ((void) mutex);
    132              return MBEDTLS_ERR_THREADING_BAD_INPUT_DATA;
   \                     threading_mutex_fail: (+1)
   \        0x0   0xF06F 0x001B      MVN      R0,#+27
   \        0x4   0x4770             BX       LR
    133          }

   \                                 In section .text, align 2, keep-with-next
    134          static void threading_mutex_dummy(mbedtls_threading_mutex_t *mutex)
    135          {
    136              ((void) mutex);
    137              return;
   \                     threading_mutex_dummy: (+1)
   \        0x0   0x4770             BX       LR
    138          }
    139          

   \                                 In section .data, align 4
    140          void (*mbedtls_mutex_init)(mbedtls_threading_mutex_t *) = threading_mutex_dummy;
   \                     mbedtls_mutex_init:
   \        0x0   0x....'....        DC32 threading_mutex_dummy
    141          void (*mbedtls_mutex_free)(mbedtls_threading_mutex_t *) = threading_mutex_dummy;
   \                     mbedtls_mutex_free:
   \        0x4   0x....'....        DC32 threading_mutex_dummy
    142          int (*mbedtls_mutex_lock)(mbedtls_threading_mutex_t *) = threading_mutex_fail;
   \                     mbedtls_mutex_lock:
   \        0x8   0x....'....        DC32 threading_mutex_fail
    143          int (*mbedtls_mutex_unlock)(mbedtls_threading_mutex_t *) = threading_mutex_fail;
   \                     mbedtls_mutex_unlock:
   \        0xC   0x....'....        DC32 threading_mutex_fail
    144          
    145          /*
    146           * Set functions pointers and initialize global mutexes
    147           */

   \                                 In section .text, align 2, keep-with-next
    148          void mbedtls_threading_set_alt(void (*mutex_init)(mbedtls_threading_mutex_t *),
    149                                         void (*mutex_free)(mbedtls_threading_mutex_t *),
    150                                         int (*mutex_lock)(mbedtls_threading_mutex_t *),
    151                                         int (*mutex_unlock)(mbedtls_threading_mutex_t *))
    152          {
   \                     mbedtls_threading_set_alt: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    153              mbedtls_mutex_init = mutex_init;
   \        0x2   0x....             LDR.N    R4,??DataTable1
   \        0x4   0x6020             STR      R0,[R4, #+0]
    154              mbedtls_mutex_free = mutex_free;
   \        0x6   0x6061             STR      R1,[R4, #+4]
    155              mbedtls_mutex_lock = mutex_lock;
   \        0x8   0x60A2             STR      R2,[R4, #+8]
    156              mbedtls_mutex_unlock = mutex_unlock;
   \        0xA   0x60E3             STR      R3,[R4, #+12]
    157          
    158          #if defined(MBEDTLS_FS_IO)
    159              mbedtls_mutex_init(&mbedtls_threading_readdir_mutex);
    160          #endif
    161          #if defined(THREADING_USE_GMTIME)
    162              mbedtls_mutex_init(&mbedtls_threading_gmtime_mutex);
    163          #endif
    164          }
   \        0xC   0xBD10             POP      {R4,PC}
    165          
    166          /*
    167           * Free global mutexes
    168           */

   \                                 In section .text, align 2, keep-with-next
    169          void mbedtls_threading_free_alt(void)
    170          {
    171          #if defined(MBEDTLS_FS_IO)
    172              mbedtls_mutex_free(&mbedtls_threading_readdir_mutex);
    173          #endif
    174          #if defined(THREADING_USE_GMTIME)
    175              mbedtls_mutex_free(&mbedtls_threading_gmtime_mutex);
    176          #endif
    177          }
   \                     mbedtls_threading_free_alt: (+1)
   \        0x0   0x4770             BX       LR
    178          #endif /* MBEDTLS_THREADING_ALT */
    179          
    180          /*
    181           * Define global mutexes
    182           */
    183          #ifndef MUTEX_INIT
    184          #define MUTEX_INIT
    185          #endif
    186          #if defined(MBEDTLS_FS_IO)
    187          mbedtls_threading_mutex_t mbedtls_threading_readdir_mutex MUTEX_INIT;
    188          #endif
    189          #if defined(MBEDTLS_PSA_CRYPTO_C)
    190          /*
    191           * psa_crypto_slot_management.c global data mutex.
    192           */

   \                                 In section .bss, align 4
    193          mbedtls_threading_mutex_t mbedtls_psa_slots_mutex MUTEX_INIT;
   \                     mbedtls_psa_slots_mutex:
   \        0x0                      DS8 100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \        0x0   0x....'....        DC32     mbedtls_mutex_init
    194          #endif
    195          
    196          #if defined(THREADING_USE_GMTIME)
    197          mbedtls_threading_mutex_t mbedtls_threading_gmtime_mutex MUTEX_INIT;
    198          #endif
    199          
    200          #endif /* MBEDTLS_THREADING_C */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   mbedtls_threading_free_alt
       8   mbedtls_threading_set_alt
       0   threading_mutex_dummy
       0   threading_mutex_fail


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
      16  mbedtls_mutex_init
          mbedtls_mutex_free
          mbedtls_mutex_lock
          mbedtls_mutex_unlock
     100  mbedtls_psa_slots_mutex
       2  mbedtls_threading_free_alt
      14  mbedtls_threading_set_alt
       2  threading_mutex_dummy
       6  threading_mutex_fail

 
 100 bytes in section .bss
  16 bytes in section .data
  28 bytes in section .text
 
  28 bytes of CODE memory
 116 bytes of DATA memory

Errors: none
Warnings: none
